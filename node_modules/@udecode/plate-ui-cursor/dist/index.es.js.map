{"version":3,"file":"index.es.js","sources":["../src/components/CursorOverlay.styles.ts","../src/components/Cursor.tsx","../src/hooks/useRequestReRender.ts","../src/hooks/useRefreshOnResize.ts","../src/queries/getCaretPosition.ts","../src/queries/getCursorOverlayState.ts","../src/queries/getSelectionRects.ts","../src/hooks/useCursorOverlayPositions.ts","../src/components/CursorOverlay.tsx"],"sourcesContent":["import { createStyles } from '@udecode/plate-styled-components';\nimport { css } from 'styled-components';\nimport tw from 'twin.macro';\nimport { CursorOverlayProps } from './CursorOverlay';\n\nexport const getCursorOverlayStyles = (props: CursorOverlayProps) =>\n  createStyles(\n    { prefixClassNames: 'CursorOverlay', ...props },\n    {\n      selectionRect: [\n        tw`absolute z-10 pointer-events-none`,\n        css`\n          opacity: 0.3;\n        `,\n      ],\n      caret: [\n        tw`absolute z-10 pointer-events-none`,\n        css`\n          width: 2px;\n        `,\n      ],\n    }\n  );\n","import React from 'react';\nimport { RenderFunction, UnknownObject } from '@udecode/plate-common';\nimport { StyledProps } from '@udecode/plate-styled-components';\nimport { CSSProp } from 'styled-components';\nimport { CursorData, CursorOverlayState, SelectionRect } from '../types';\nimport { getCursorOverlayStyles } from './CursorOverlay.styles';\n\nexport interface CursorProps<\n  TCursorData extends UnknownObject = UnknownObject\n> extends CursorOverlayState<TCursorData>,\n    StyledProps<{\n      caret: CSSProp;\n      selectionRect: CSSProp;\n    }> {\n  /**\n   * Whether to disable the caret.\n   */\n  disableCaret?: boolean;\n\n  /**\n   * Whether to disable the selection rects.\n   */\n  disableSelection?: boolean;\n\n  /**\n   * Custom caret component.\n   * For example, you could display a label next to the caret.\n   * @default styled div\n   */\n  onRenderCaret?: RenderFunction<\n    Pick<CursorProps<TCursorData>, 'data' | 'caretPosition'>\n  >;\n\n  /**\n   * Overrides `Caret` component\n   */\n  onRenderSelectionRect?: RenderFunction<\n    Pick<CursorProps<TCursorData>, 'data'> & {\n      selectionRect: SelectionRect;\n    }\n  >;\n}\n\nexport const Cursor = ({\n  data,\n  selectionRects,\n  caretPosition,\n  disableCaret,\n  disableSelection,\n  onRenderCaret: Caret,\n  onRenderSelectionRect: Rect,\n  ...props\n}: CursorProps<CursorData>) => {\n  if (!data) {\n    return null;\n  }\n\n  const { caret, selectionRect } = getCursorOverlayStyles(props);\n\n  const { style, selectionStyle = style } = data;\n\n  return (\n    <>\n      {!disableSelection &&\n        selectionRects.map((position, i) =>\n          Rect ? (\n            <Rect key={i} data={data} selectionRect={position} />\n          ) : (\n            <div\n              key={i}\n              className={selectionRect?.className}\n              css={selectionRect?.css}\n              style={{\n                ...selectionStyle,\n                ...position,\n              }}\n            />\n          )\n        )}\n      {!disableCaret &&\n        caretPosition &&\n        (Caret ? (\n          <Caret data={data} caretPosition={caretPosition} />\n        ) : (\n          <div\n            className={caret?.className}\n            css={caret?.css}\n            style={{ ...caretPosition, ...style }}\n          />\n        ))}\n    </>\n  );\n};\n","import { useCallback, useEffect, useRef, useState } from 'react';\n\nexport const useRequestReRender = () => {\n  const [, setUpdateCounter] = useState(0);\n  const animationFrameRef = useRef<number | null>(null);\n\n  const requestReRender = useCallback((immediate = false) => {\n    if (animationFrameRef.current && !immediate) {\n      return;\n    }\n\n    if (!immediate) {\n      animationFrameRef.current = requestAnimationFrame(() => {\n        setUpdateCounter((state) => state + 1);\n        animationFrameRef.current = null;\n      });\n      return;\n    }\n\n    if (animationFrameRef.current) {\n      cancelAnimationFrame(animationFrameRef.current);\n      animationFrameRef.current = null;\n    }\n\n    setUpdateCounter((state) => state + 1);\n  }, []);\n\n  useEffect(() => {\n    if (animationFrameRef.current) {\n      cancelAnimationFrame(animationFrameRef.current);\n      animationFrameRef.current = null;\n    }\n  });\n\n  useEffect(\n    () => () => {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    },\n    []\n  );\n\n  return requestReRender;\n};\n","import { MutableRefObject, useCallback, useEffect } from 'react';\nimport { Range } from 'slate';\nimport { CursorOverlayProps } from '../components/index';\nimport { SelectionRect } from '../types';\nimport { useRequestReRender } from './useRequestReRender';\n\nexport interface UseRefreshOnResizeOptions\n  extends Pick<CursorOverlayProps, 'refreshOnResize' | 'containerRef'> {\n  selectionRectCache: MutableRefObject<WeakMap<Range, SelectionRect[]>>;\n}\n\nexport const useRefreshOnResize = ({\n  containerRef,\n  refreshOnResize,\n  selectionRectCache,\n}: UseRefreshOnResizeOptions) => {\n  const requestReRender = useRequestReRender();\n\n  // Reset the selection rect cache and request re-render.\n  const refresh = useCallback(\n    (sync = false) => {\n      selectionRectCache.current = new WeakMap();\n      requestReRender(sync);\n    },\n    [requestReRender, selectionRectCache]\n  );\n\n  // Refresh on container resize\n  useEffect(() => {\n    if (!refreshOnResize || !containerRef?.current) {\n      return;\n    }\n\n    const resizeObserver = new ResizeObserver(() => refresh());\n    resizeObserver.observe(containerRef.current);\n    return () => resizeObserver.disconnect();\n  }, [containerRef, refresh, refreshOnResize]);\n\n  return {\n    refresh,\n  };\n};\n","import { Range } from 'slate';\nimport { CaretPosition, SelectionRect } from '../types';\n\n/**\n * Get the caret position of a range from selectionRects.\n */\nexport const getCaretPosition = (\n  selectionRects: SelectionRect[],\n  range: Range\n): CaretPosition | null => {\n  const isCollapsed = range && Range.isCollapsed(range);\n  const isBackward = range && Range.isBackward(range);\n  const anchorRect = selectionRects[isBackward ? 0 : selectionRects.length - 1];\n\n  if (!anchorRect) {\n    return null;\n  }\n\n  return {\n    height: anchorRect.height,\n    top: anchorRect.top,\n    left: anchorRect.left + (isBackward || isCollapsed ? 0 : anchorRect.width),\n  };\n};\n","import { UnknownObject } from '@udecode/plate-common';\nimport { CursorOverlayProps } from '../components/index';\nimport { FROZEN_EMPTY_ARRAY } from '../hooks/index';\nimport { CursorOverlayState, SelectionRect } from '../types';\nimport { getCaretPosition } from './getCaretPosition';\n\n/**\n * Get cursor overlay state from selection rects.\n */\nexport const getCursorOverlayState = <\n  TCursorData extends UnknownObject = UnknownObject\n>({\n  cursors: cursorStates,\n  selectionRects,\n}: Pick<CursorOverlayProps<TCursorData>, 'cursors'> & {\n  selectionRects: Record<string, SelectionRect[]>;\n}): CursorOverlayState<TCursorData>[] => {\n  if (!cursorStates) return [];\n\n  return Object.entries(cursorStates).map(([key, cursorState]) => {\n    const selection = cursorState?.selection ?? null;\n    const rects = selectionRects[key] ?? FROZEN_EMPTY_ARRAY;\n\n    const caretPosition = selection ? getCaretPosition(rects, selection) : null;\n\n    return {\n      ...cursorState,\n      selection,\n      caretPosition,\n      selectionRects: rects,\n    };\n  });\n};\n","import {\n  getNodeEntries,\n  isText,\n  toDOMNode,\n  toDOMRange,\n  TReactEditor,\n  Value,\n} from '@udecode/plate-common';\nimport { Path, Range } from 'slate';\nimport { SelectionRect } from '../types';\n\nexport const getSelectionRects = <V extends Value>(\n  editor: TReactEditor<V>,\n  {\n    range,\n    xOffset,\n    yOffset,\n  }: {\n    range: Range;\n    xOffset: number;\n    yOffset: number;\n  }\n): SelectionRect[] => {\n  const [start, end] = Range.edges(range);\n  const domRange = toDOMRange(editor, range);\n  if (!domRange) {\n    return [];\n  }\n\n  const selectionRects: SelectionRect[] = [];\n  const textEntries = getNodeEntries(editor, {\n    at: range,\n    match: isText,\n  });\n\n  for (const [textNode, textPath] of textEntries) {\n    const domNode = toDOMNode(editor, textNode);\n\n    // Fix: failed to execute 'selectNode' on 'Range': the given Node has no parent\n    if (!domNode || !domNode.parentElement) {\n      return [];\n    }\n\n    const isStartNode = Path.equals(textPath, start.path);\n    const isEndNode = Path.equals(textPath, end.path);\n\n    let clientRects: DOMRectList | null = null;\n    if (isStartNode || isEndNode) {\n      const nodeRange = document.createRange();\n\n      nodeRange.selectNode(domNode);\n\n      if (isStartNode) {\n        nodeRange.setStart(domRange.startContainer, domRange.startOffset);\n      }\n      if (isEndNode) {\n        nodeRange.setEnd(domRange.endContainer, domRange.endOffset);\n      }\n\n      clientRects = nodeRange.getClientRects();\n    } else {\n      clientRects = domNode.getClientRects();\n    }\n\n    for (let i = 0; i < clientRects.length; i++) {\n      const clientRect = clientRects.item(i);\n      if (!clientRect) {\n        continue;\n      }\n\n      selectionRects.push({\n        width: clientRect.width,\n        height: clientRect.height,\n        top: clientRect.top - yOffset,\n        left: clientRect.left - xOffset,\n      });\n    }\n  }\n\n  return selectionRects;\n};\n","import { useCallback, useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { UnknownObject, useEditorRef } from '@udecode/plate-common';\nimport { Range } from 'slate';\nimport { CursorOverlayProps } from '../components/index';\nimport { getCursorOverlayState } from '../queries/getCursorOverlayState';\nimport { getSelectionRects } from '../queries/getSelectionRects';\nimport { CursorState, SelectionRect } from '../types';\nimport { useRefreshOnResize } from './useRefreshOnResize';\n\nexport const FROZEN_EMPTY_ARRAY = (Object.freeze(\n  []\n) as unknown) as SelectionRect[];\n\nexport const useCursorOverlayPositions = <TCursorData extends UnknownObject>({\n  containerRef,\n  cursors: cursorStates,\n  refreshOnResize = true,\n}: CursorOverlayProps<TCursorData> = {}) => {\n  const editor = useEditorRef();\n\n  const selectionRectCache = useRef<WeakMap<Range, SelectionRect[]>>(\n    new WeakMap()\n  );\n\n  const [selectionRects, setSelectionRects] = useState<\n    Record<string, SelectionRect[]>\n  >({});\n\n  const updateSelectionRects = useCallback(() => {\n    // We have a container ref but the ref is null => container\n    // isn't mounted to we can't calculate the selection rects.\n    if (!containerRef?.current) return;\n    if (!cursorStates) return;\n\n    let xOffset = 0;\n    let yOffset = 0;\n    if (containerRef) {\n      const contentRect = containerRef.current!.getBoundingClientRect();\n      xOffset = contentRect.x;\n      yOffset = contentRect.y;\n    }\n\n    let selectionRectsChanged =\n      Object.keys(selectionRects).length !== Object.keys(cursorStates).length;\n\n    const getCachedSelectionRects = ({\n      cursor,\n    }: {\n      cursor: CursorState<TCursorData>;\n    }) => {\n      const range = cursor.selection;\n\n      if (!range) {\n        return FROZEN_EMPTY_ARRAY;\n      }\n\n      const cached = selectionRectCache.current.get(range);\n      if (cached) {\n        return cached;\n      }\n\n      const rects = getSelectionRects(editor, { range, xOffset, yOffset });\n      selectionRectsChanged = true;\n      selectionRectCache.current.set(range, rects);\n\n      return rects;\n    };\n\n    const updated: Record<string, SelectionRect[]> = Object.fromEntries(\n      Object.entries(cursorStates).map(([key, cursor]) => [\n        key,\n        getCachedSelectionRects({\n          cursor,\n        }),\n      ])\n    );\n\n    if (selectionRectsChanged) {\n      setSelectionRects(updated);\n    }\n  }, [containerRef, cursorStates, editor, selectionRects]);\n\n  // Update selection rects after paint\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useLayoutEffect(() => {\n    updateSelectionRects();\n  });\n\n  const cursors = useMemo(\n    () =>\n      getCursorOverlayState({\n        selectionRects,\n        cursors: cursorStates,\n      }),\n    [cursorStates, selectionRects]\n  );\n\n  const { refresh } = useRefreshOnResize({\n    containerRef,\n    selectionRectCache,\n    refreshOnResize,\n  });\n\n  return { refresh, cursors };\n};\n","import React, { RefObject } from 'react';\nimport {\n  RenderFunction,\n  UnknownObject,\n  usePlateSelectors,\n} from '@udecode/plate-common';\nimport { useCursorOverlayPositions } from '../hooks/useCursorOverlayPositions';\nimport { CursorData, CursorState } from '../types';\nimport { Cursor, CursorProps } from './Cursor';\n\nexport interface CursorOverlayProps<\n  TCursorData extends UnknownObject = UnknownObject\n> extends Pick<\n    CursorProps<CursorData>,\n    | 'disableCaret'\n    | 'disableSelection'\n    | 'onRenderCaret'\n    | 'onRenderSelectionRect'\n    | 'as'\n    | 'classNames'\n    | 'prefixClassNames'\n    | 'styles'\n  > {\n  /**\n   * Cursor states to use for calculating the overlay positions, by key.\n   */\n  cursors?: Record<string, CursorState<TCursorData>>;\n\n  /**\n   * Container the overlay will be rendered in.\n   * If set, all returned overlay positions will be relative to this container.\n   */\n  containerRef?: RefObject<HTMLElement>;\n\n  /**\n   * Whether to refresh the cursor overlay positions on container resize.\n   * @default true\n   */\n  refreshOnResize?: boolean;\n\n  /**\n   * Overrides `Cursor` component.\n   */\n  onRenderCursor?: RenderFunction<CursorProps>;\n}\n\nexport const CursorOverlayContent = <\n  TCursorData extends UnknownObject = UnknownObject\n>({\n  as,\n  classNames,\n  prefixClassNames,\n  styles,\n  onRenderCursor: CursorComponent = Cursor,\n  onRenderSelectionRect,\n  onRenderCaret,\n  ...props\n}: CursorOverlayProps<TCursorData>) => {\n  const { disableCaret, disableSelection } = props;\n\n  const { cursors } = useCursorOverlayPositions(props);\n\n  const cursorProps = {\n    as,\n    classNames,\n    prefixClassNames,\n    styles,\n    onRenderSelectionRect,\n    onRenderCaret,\n    disableCaret,\n    disableSelection,\n  };\n\n  return (\n    <>\n      {cursors.map((cursor) => (\n        <CursorComponent key={cursor.key} {...cursorProps} {...cursor} />\n      ))}\n    </>\n  );\n};\n\nexport const CursorOverlay = <\n  TCursorData extends UnknownObject = UnknownObject\n>(\n  props: CursorOverlayProps<TCursorData>\n) => {\n  const isRendered = usePlateSelectors().isRendered();\n\n  if (!isRendered) return null;\n\n  return <CursorOverlayContent {...props} />;\n};\n"],"names":["getCursorOverlayStyles","props","createStyles","prefixClassNames","selectionRect","css","caret","Cursor","data","selectionRects","caretPosition","disableCaret","disableSelection","onRenderCaret","Caret","onRenderSelectionRect","Rect","style","selectionStyle","map","position","i","className","useRequestReRender","setUpdateCounter","useState","animationFrameRef","useRef","requestReRender","useCallback","immediate","current","requestAnimationFrame","state","cancelAnimationFrame","useEffect","useRefreshOnResize","containerRef","refreshOnResize","selectionRectCache","refresh","sync","WeakMap","resizeObserver","ResizeObserver","observe","disconnect","getCaretPosition","range","isCollapsed","Range","isBackward","anchorRect","length","height","top","left","width","getCursorOverlayState","cursors","cursorStates","Object","entries","key","cursorState","selection","rects","FROZEN_EMPTY_ARRAY","getSelectionRects","editor","xOffset","yOffset","start","end","edges","domRange","toDOMRange","textEntries","getNodeEntries","at","match","isText","textNode","textPath","domNode","toDOMNode","parentElement","isStartNode","Path","equals","path","isEndNode","clientRects","nodeRange","document","createRange","selectNode","setStart","startContainer","startOffset","setEnd","endContainer","endOffset","getClientRects","clientRect","item","push","freeze","useCursorOverlayPositions","useEditorRef","setSelectionRects","updateSelectionRects","contentRect","getBoundingClientRect","x","y","selectionRectsChanged","keys","getCachedSelectionRects","cursor","cached","get","set","updated","fromEntries","useLayoutEffect","useMemo","CursorOverlayContent","as","classNames","styles","onRenderCursor","CursorComponent","cursorProps","CursorOverlay","isRendered","usePlateSelectors"],"mappings":"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"}