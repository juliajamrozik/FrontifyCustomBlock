{"version":3,"file":"index.es.js","sources":["../src/PlateTableBordersDropdownMenuContent.tsx","../src/PlateTableCellElement.tsx","../src/PlateTableCellHeaderElement.tsx","../src/PlateTablePopover.tsx","../src/PlateTableElement.tsx","../src/PlateTableRowElement.tsx","../src/TableToolbarButton.tsx"],"sourcesContent":["import React, { SVGProps } from 'react';\nimport { DropdownMenu } from '@udecode/plate-floating';\nimport {\n  BorderBottomIcon,\n  BorderLeftIcon,\n  BorderNoneIcon,\n  BorderOuterIcon,\n  BorderRightIcon,\n  BorderTopIcon,\n  useTableBordersDropdownMenuContentState,\n} from '@udecode/plate-table';\nimport { cssMenuItemButton, PlateButton } from '@udecode/plate-ui-button';\nimport { floatingRootCss } from '@udecode/plate-ui-toolbar';\nimport tw from 'twin.macro';\n\nconst CheckIcon = (props: SVGProps<SVGSVGElement>) => (\n  <svg\n    aria-hidden=\"true\"\n    viewBox=\"0 0 24 24\"\n    focusable=\"false\"\n    fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n    <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\" />\n  </svg>\n);\n\nconst Check = ({ checked }: { checked?: boolean }) =>\n  checked ? <CheckIcon tw=\"block w-4\" /> : <div tw=\"w-4 h-4\" />;\n\nexport const PlateTableBordersDropdownMenuContent = () => {\n  const {\n    getOnSelectTableBorder,\n    hasOuterBorders,\n    hasBottomBorder,\n    hasLeftBorder,\n    hasNoBorders,\n    hasRightBorder,\n    hasTopBorder,\n  } = useTableBordersDropdownMenuContentState();\n\n  return (\n    <DropdownMenu.Content\n      css={[floatingRootCss, tw`min-w-[220px] py-1.5 text-neutral-900`]}\n      side=\"right\"\n      align=\"start\"\n      sideOffset={8}\n    >\n      <div tw=\"px-1\">\n        <DropdownMenu.Item onSelect={getOnSelectTableBorder('bottom')}>\n          <PlateButton css={cssMenuItemButton}>\n            <Check checked={hasBottomBorder} />\n            <BorderBottomIcon />\n            <div>Bottom Border</div>\n          </PlateButton>\n        </DropdownMenu.Item>\n        <DropdownMenu.Item onSelect={getOnSelectTableBorder('top')}>\n          <PlateButton css={cssMenuItemButton}>\n            <Check checked={hasTopBorder} />\n            <BorderTopIcon />\n            <div>Top Border</div>\n          </PlateButton>\n        </DropdownMenu.Item>\n        <DropdownMenu.Item onSelect={getOnSelectTableBorder('left')}>\n          <PlateButton css={cssMenuItemButton}>\n            <Check checked={hasLeftBorder} />\n            <BorderLeftIcon />\n            <div>Left Border</div>\n          </PlateButton>\n        </DropdownMenu.Item>\n        <DropdownMenu.Item onSelect={getOnSelectTableBorder('right')}>\n          <PlateButton css={cssMenuItemButton}>\n            <Check checked={hasRightBorder} />\n            <BorderRightIcon />\n            <div>Right Border</div>\n          </PlateButton>\n        </DropdownMenu.Item>\n      </div>\n\n      <div tw=\"w-full h-px bg-gray-200 my-1.5\" />\n\n      <div tw=\"px-1\">\n        <DropdownMenu.Item onSelect={getOnSelectTableBorder('none')}>\n          <PlateButton css={cssMenuItemButton}>\n            <Check checked={hasNoBorders} />\n            <BorderNoneIcon />\n            <div>No Border</div>\n          </PlateButton>\n        </DropdownMenu.Item>\n        <DropdownMenu.Item onSelect={getOnSelectTableBorder('outer')}>\n          <PlateButton css={cssMenuItemButton}>\n            <Check checked={hasOuterBorders} />\n            <BorderOuterIcon />\n            <div>Outside Borders</div>\n          </PlateButton>\n        </DropdownMenu.Item>\n      </div>\n    </DropdownMenu.Content>\n  );\n};\n","import React from 'react';\nimport {\n  BorderStylesDefault,\n  TableCellElement,\n  TableCellElementRootProps,\n  useTableCellElementState,\n} from '@udecode/plate-table';\nimport { css, CSSProp } from 'styled-components';\nimport tw from 'twin.macro';\n\nexport interface PlateTableCellElementProps extends TableCellElementRootProps {\n  hideBorder?: boolean;\n  isHeader?: boolean;\n}\n\nexport const getCssTableCellRoot = ({\n  hideBorder,\n  isHeader,\n  selected,\n  borders,\n}: {\n  hideBorder?: boolean;\n  isHeader?: boolean;\n  selected?: boolean;\n  borders?: BorderStylesDefault;\n} = {}): CSSProp => [\n  tw`relative p-0 overflow-visible bg-white border-none`,\n  hideBorder && tw`before:border-none`,\n  !hideBorder && [\n    tw`before:content-[''] before:box-border before:absolute before:select-none`,\n    borders && [\n      borders.bottom &&\n        css`\n          ::before {\n            border-bottom: ${borders.bottom.size}px ${borders.bottom.style}\n              ${borders.bottom.color};\n          }\n        `,\n      borders.right &&\n        css`\n          ::before {\n            border-right: ${borders.right.size}px ${borders.right.style}\n              ${borders.right.color};\n          }\n        `,\n      borders.left &&\n        css`\n          ::before {\n            border-left: ${borders.left.size}px ${borders.left.style}\n              ${borders.left.color};\n          }\n        `,\n      borders.top &&\n        css`\n          ::before {\n            border-top: ${borders.top.size}px ${borders.top.style}\n              ${borders.top.color};\n          }\n        `,\n    ],\n  ],\n  isHeader && tw`text-left`,\n  isHeader &&\n    css`\n      ::before {\n        background-color: rgb(244, 245, 247);\n      }\n\n      > * {\n        margin: 0;\n      }\n    `,\n  tw`before:w-full before:h-full`,\n  selected && tw`before:border-blue-500 before:z-10 before:bg-blue-50`,\n];\n\nexport const cssTableCellContent: CSSProp = [\n  tw`relative h-full px-3 py-2 z-20 box-border`,\n];\n\nexport const cssTableCellResizable: CSSProp = [\n  tw`absolute w-full h-full top-0 select-none`,\n];\n\nexport const getCssTableCellHandle = ({ side }: { side: 'left' | 'right' }) => [\n  tw`absolute z-30 w-1 bg-blue-500`,\n  css`\n    top: -12px;\n    ${side}: -1.5px;\n\n    height: calc(100% + 12px);\n  `,\n];\n\nexport const PlateTableCellElement = (props: PlateTableCellElementProps) => {\n  const { children, hideBorder, isHeader, ...rootProps } = props;\n\n  const {\n    colIndex,\n    rowIndex,\n    readOnly,\n    selected,\n    hovered,\n    hoveredLeft,\n    rowSize,\n    borders,\n  } = useTableCellElementState();\n\n  // const [openDropdown, setOpenDropdown] = useState(false);\n\n  return (\n    <TableCellElement.Root\n      asAlias={isHeader ? 'th' : 'td'}\n      css={getCssTableCellRoot({ borders, hideBorder, isHeader, selected })}\n      {...rootProps}\n    >\n      {/* <div css={[tw`absolute top-0 right-2 z-30`]} contentEditable={false}> */}\n      {/*  <Popover */}\n      {/*    floatingOptions={{ */}\n      {/*      open: openDropdown, */}\n      {/*      placement: 'top-end', */}\n      {/*      middleware: [ */}\n      {/*        offset(0), */}\n      {/*        flip({ */}\n      {/*          padding: 0, */}\n      {/*        }), */}\n      {/*        shift(), */}\n      {/*      ], */}\n      {/*    }} */}\n      {/*    content={ */}\n      {/*      <div css={tw`min-w-[140px]`}> */}\n      {/*        <PlateButton>Bottom Border</PlateButton> */}\n      {/*        <PlateButton>Top Border</PlateButton> */}\n      {/*        <PlateButton>Left Border</PlateButton> */}\n      {/*        <PlateButton>Right Border</PlateButton> */}\n      {/*      </div> */}\n      {/*    } */}\n      {/*    css={floatingRootCss} */}\n      {/*  > */}\n      {/*    <div> */}\n      {/*      <PlateButton */}\n      {/*        tw=\"h-[13px] w-[13px] p-0\" */}\n      {/*        onClick={() => setOpenDropdown(!openDropdown)} */}\n      {/*      > */}\n      {/*        <ArrowDropDownCircleIcon */}\n      {/*          tw=\"block my-0 mx-auto absolute text-gray-300\" */}\n      {/*          height={16} */}\n      {/*          width={16} */}\n      {/*        /> */}\n      {/*      </PlateButton> */}\n      {/*    </div> */}\n      {/*  </Popover> */}\n      {/* </div> */}\n\n      <TableCellElement.Content\n        css={cssTableCellContent}\n        style={{\n          minHeight: rowSize,\n        }}\n      >\n        {children}\n      </TableCellElement.Content>\n\n      <TableCellElement.ResizableWrapper\n        css={cssTableCellResizable}\n        className=\"group\"\n      >\n        <TableCellElement.Resizable\n          colIndex={colIndex}\n          rowIndex={rowIndex}\n          readOnly={readOnly}\n        />\n\n        {!readOnly && hovered && (\n          <TableCellElement.Handle\n            css={getCssTableCellHandle({ side: 'right' })}\n          />\n        )}\n\n        {!readOnly && hoveredLeft && (\n          <TableCellElement.Handle\n            css={getCssTableCellHandle({ side: 'left' })}\n          />\n        )}\n      </TableCellElement.ResizableWrapper>\n    </TableCellElement.Root>\n  );\n};\n","import React from 'react';\nimport {\n  PlateTableCellElement,\n  PlateTableCellElementProps,\n} from './PlateTableCellElement';\n\nexport const PlateTableCellHeaderElement = (\n  props: PlateTableCellElementProps\n) => {\n  return <PlateTableCellElement {...props} isHeader />;\n};\n","import React from 'react';\nimport { useElement } from '@udecode/plate-common';\nimport {\n  DropdownMenu,\n  ElementPopover,\n  PopoverProps,\n} from '@udecode/plate-floating';\nimport { BorderAllIcon, TTableElement } from '@udecode/plate-table';\nimport {\n  cssMenuItemButton,\n  PlateButton,\n  RemoveNodeButton,\n} from '@udecode/plate-ui-button';\nimport { floatingRootCss } from '@udecode/plate-ui-toolbar';\nimport tw from 'twin.macro';\nimport { PlateTableBordersDropdownMenuContent } from './PlateTableBordersDropdownMenuContent';\n\nexport const PlateTablePopover = ({ children, ...props }: PopoverProps) => {\n  const element = useElement<TTableElement>();\n\n  return (\n    <ElementPopover\n      content={\n        <div css={tw`min-w-[140px] px-1 py-1.5`}>\n          <DropdownMenu.Root>\n            <DropdownMenu.Trigger asChild>\n              <PlateButton\n                type=\"button\"\n                tw=\"justify-start w-full\"\n                aria-label=\"Borders\"\n              >\n                <BorderAllIcon tw=\"w-4\" />\n                <div>Borders</div>\n              </PlateButton>\n            </DropdownMenu.Trigger>\n\n            <DropdownMenu.Portal>\n              <PlateTableBordersDropdownMenuContent />\n            </DropdownMenu.Portal>\n          </DropdownMenu.Root>\n\n          <div>\n            <RemoveNodeButton\n              element={element}\n              css={[cssMenuItemButton, tw`justify-start w-40`]}\n              contentEditable={false}\n            >\n              <div>Delete</div>\n            </RemoveNodeButton>\n          </div>\n        </div>\n      }\n      css={floatingRootCss}\n      {...props}\n    >\n      {children}\n    </ElementPopover>\n  );\n};\n","import React from 'react';\nimport {\n  TableElement,\n  TableElementRootProps,\n  useTableElementState,\n} from '@udecode/plate-table';\nimport { css } from 'styled-components';\nimport tw from 'twin.macro';\nimport { PlateTablePopover } from './PlateTablePopover';\n\nexport const PlateTableElement = (props: TableElementRootProps) => {\n  const { as, children, ...rootProps } = props;\n\n  const {\n    colSizes,\n    isSelectingCell,\n    minColumnWidth,\n    marginLeft,\n  } = useTableElementState();\n\n  return (\n    <PlateTablePopover>\n      <TableElement.Wrapper style={{ paddingLeft: marginLeft }}>\n        <TableElement.Root\n          css={[\n            tw`table table-fixed w-full h-px my-4 ml-px mr-0 border-collapse`,\n            isSelectingCell &&\n              css`\n                *::selection {\n                  background: none;\n                }\n              `,\n          ]}\n          {...rootProps}\n        >\n          <TableElement.ColGroup>\n            {colSizes.map((width, index) => (\n              <TableElement.Col\n                key={index}\n                style={{\n                  minWidth: minColumnWidth,\n                  width: width || undefined,\n                }}\n              />\n            ))}\n          </TableElement.ColGroup>\n\n          <TableElement.TBody css={tw`min-w-full`}>\n            {children}\n          </TableElement.TBody>\n        </TableElement.Root>\n      </TableElement.Wrapper>\n    </PlateTablePopover>\n  );\n};\n","import React from 'react';\nimport {\n  TableRowElement,\n  TableRowElementRootProps,\n} from '@udecode/plate-table';\nimport tw from 'twin.macro';\n\nexport interface PlateTableRowElementProps extends TableRowElementRootProps {\n  hideBorder?: boolean;\n}\n\nexport const PlateTableRowElement = (props: PlateTableRowElementProps) => {\n  const { as, children, hideBorder, ...rootProps } = props;\n\n  return (\n    <TableRowElement.Root\n      css={[tw`h-full`, hideBorder && tw`border-none`]}\n      {...rootProps}\n    >\n      {children}\n    </TableRowElement.Root>\n  );\n};\n","import React from 'react';\nimport {\n  focusEditor,\n  getPluginType,\n  PlateEditor,\n  someNode,\n  useEventPlateId,\n  usePlateEditorState,\n  Value,\n} from '@udecode/plate-common';\nimport { ELEMENT_TABLE } from '@udecode/plate-table';\nimport { ToolbarButton, ToolbarButtonProps } from '@udecode/plate-ui-toolbar';\n\nexport interface TableToolbarButtonProps<V extends Value>\n  extends ToolbarButtonProps {\n  header?: boolean;\n  transform: (editor: PlateEditor<V>, options: { header?: boolean }) => void;\n}\n\nexport const TableToolbarButton = <V extends Value>({\n  id,\n  transform,\n  header,\n  ...props\n}: TableToolbarButtonProps<V>) => {\n  const editor = usePlateEditorState<V>(useEventPlateId(id));\n  const type = getPluginType(editor, ELEMENT_TABLE);\n  const active = !!editor?.selection && someNode(editor, { match: { type } });\n\n  return (\n    <ToolbarButton\n      active={active}\n      onClick={(e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        transform(editor, { header });\n\n        focusEditor(editor);\n      }}\n      {...props}\n    />\n  );\n};\n"],"names":["CheckIcon","props","Check","checked","_StyledDiv","PlateTableBordersDropdownMenuContent","getOnSelectTableBorder","hasOuterBorders","hasBottomBorder","hasLeftBorder","hasNoBorders","hasRightBorder","hasTopBorder","useTableBordersDropdownMenuContentState","floatingRootCss","_StyledPlateButton","cssMenuItemButton","getCssTableCellRoot","hideBorder","isHeader","selected","borders","bottom","css","size","style","color","right","left","top","cssTableCellContent","cssTableCellResizable","getCssTableCellHandle","side","PlateTableCellElement","children","rootProps","colIndex","rowIndex","readOnly","hovered","hoveredLeft","rowSize","useTableCellElementState","minHeight","PlateTableCellHeaderElement","PlateTablePopover","element","useElement","PlateTableElement","as","colSizes","isSelectingCell","minColumnWidth","marginLeft","useTableElementState","paddingLeft","map","width","index","minWidth","undefined","PlateTableRowElement","TableToolbarButton","id","transform","header","editor","usePlateEditorState","useEventPlateId","type","getPluginType","ELEMENT_TABLE","active","selection","someNode","match","e","preventDefault","stopPropagation","focusEditor"],"mappings":"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"}