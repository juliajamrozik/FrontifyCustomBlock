'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var plateStyledComponents = require('@udecode/plate-styled-components');
var styledComponents = require('styled-components');
var React = require('react');
var plateCommon = require('@udecode/plate-common');
var slateReact = require('slate-react');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

const getPlaceholderStyles = props => plateStyledComponents.createStyles({
  prefixClassNames: 'Placeholder',
  ...props
}, {
  root: props.enabled ? styledComponents.css(["::before{content:attr(placeholder);opacity:0.3;", "}"], {
    "position": "absolute",
    "display": "block",
    "cursor": "text"
  }) : undefined
});

const Placeholder = props => {
  const {
    children,
    element,
    placeholder,
    hideOnBlur = true,
    nodeProps
  } = props;
  const focused = slateReact.useFocused();
  const selected = slateReact.useSelected();
  const editor = plateCommon.usePlateEditorState();
  const isEmptyBlock = plateCommon.isElementEmpty(editor, element);
  const enabled = isEmptyBlock && (!hideOnBlur || plateCommon.isCollapsed(editor.selection) && hideOnBlur && focused && selected);
  return React__default["default"].Children.map(children, child => {
    return /*#__PURE__*/React__default["default"].cloneElement(child, {
      className: child.props.className,
      nodeProps: { ...nodeProps,
        styles: getPlaceholderStyles({
          enabled,
          ...props
        }),
        placeholder
      }
    });
  });
};
const withPlaceholder = plateCommon.createNodeHOC(Placeholder);
const withPlaceholders = plateCommon.createNodesHOC(Placeholder);

exports.Placeholder = Placeholder;
exports.getPlaceholderStyles = getPlaceholderStyles;
exports.withPlaceholder = withPlaceholder;
exports.withPlaceholders = withPlaceholders;
//# sourceMappingURL=index.js.map
