import { useState as c, useEffect as u } from "react";
const l = (e, t) => {
  const [n, o] = c(null), [g, r] = c(!0);
  return u(() => {
    (async () => {
      r(!0), o(await e.getDocumentTargets(t)), r(!1);
    })();
  }, [e, t]), u(() => {
    const s = (a) => {
      a.payload.documentIds.includes(t) && o((i) => d(i, a.payload.targets));
    };
    return window.emitter.on("AppBridge:GuidelineDocumentTargets:Action", s), () => {
      window.emitter.off("AppBridge:GuidelineDocumentTargets:Action", s);
    };
  }, [t]), { documentTargets: n, isLoading: g };
}, d = (e, t) => e && {
  ...e,
  hasSelectedTargets: t.length > 0,
  targets: e.targets.map((n) => ({
    ...n,
    target: { ...n.target, checked: t.includes(n.target.id) }
  }))
};
export {
  l as useDocumentTargets
};
//# sourceMappingURL=useDocumentTargets.es.js.map
