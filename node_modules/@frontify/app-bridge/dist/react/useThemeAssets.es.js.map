{"version":3,"file":"useThemeAssets.es.js","sources":["../../src/react/useThemeAssets.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { useEffect, useState } from 'react';\n\nimport type { AppBridgeTheme } from '../AppBridgeTheme';\nimport type { Asset } from '../types';\nimport { compareObjects } from '../utilities';\n\nexport const useThemeAssets = (appBridge: AppBridgeTheme) => {\n    const portalId = appBridge.getPortalId();\n\n    const [themeAssets, setThemeAssets] = useState<Record<string, Asset[]>>({});\n\n    const updateThemeAssetsFromEvent = (event: {\n        portalId: number;\n        themeAssets: Record<string, Asset[]>;\n        prevThemeAssets: Record<string, Asset[]>;\n    }) => {\n        if (event.portalId === portalId && !compareObjects(event.themeAssets, event.prevThemeAssets)) {\n            setThemeAssets(event.themeAssets);\n        }\n    };\n\n    const getThemeAssets = async (): Promise<Record<string, Asset[]>> => {\n        return await appBridge.getThemeAssets();\n    };\n\n    const addAssetIdsToThemeAssetKey = async (key: string, assetIds: number[]): Promise<void> => {\n        await appBridge.addAssetIdsToThemeAssetKey(key, assetIds);\n    };\n\n    const deleteAssetIdsFromThemeAssetKey = async (key: string, assetIds: number[]): Promise<void> => {\n        await appBridge.deleteAssetIdsFromThemeAssetKey(key, assetIds);\n    };\n\n    // Fetch the theme assets on mount.\n    // And add listener for theme assets updates.\n    useEffect(() => {\n        let componentMounted = true;\n\n        if (portalId) {\n            const mountingFetch = async () => {\n                const allThemeAssets = await getThemeAssets();\n\n                if (componentMounted) {\n                    setThemeAssets(allThemeAssets);\n                }\n            };\n            mountingFetch();\n\n            window.emitter.on('AppBridge:ThemeAssetsUpdated', updateThemeAssetsFromEvent);\n        }\n\n        return () => {\n            componentMounted = false;\n            window.emitter.off('AppBridge:ThemeAssetsUpdated', updateThemeAssetsFromEvent);\n        };\n    }, [appBridge]);\n\n    const emitUpdatedThemeAssets = async () => {\n        window.emitter.emit('AppBridge:ThemeAssetsUpdated', {\n            portalId,\n            themeAssets: await getThemeAssets(),\n            prevThemeAssets: { ...themeAssets },\n        });\n    };\n\n    const updateAssetIdsFromKey = async (key: string, newAssetIds: number[]) => {\n        const currentThemeAssets = await getThemeAssets();\n        const oldAssetIds = currentThemeAssets[key]?.map((asset) => asset.id) ?? [];\n\n        try {\n            await deleteAssetIdsFromThemeAssetKey(key, oldAssetIds);\n            await addAssetIdsToThemeAssetKey(key, newAssetIds);\n        } catch (error) {\n            console.error(error);\n        }\n\n        emitUpdatedThemeAssets();\n    };\n\n    const deleteAssetIdsFromKey = async (key: string, assetIds: number[]) => {\n        await deleteAssetIdsFromThemeAssetKey(key, assetIds);\n        emitUpdatedThemeAssets();\n    };\n\n    const addAssetIdsToKey = async (key: string, assetIds: number[]) => {\n        await addAssetIdsToThemeAssetKey(key, assetIds);\n        emitUpdatedThemeAssets();\n    };\n\n    return {\n        themeAssets,\n        addAssetIdsToKey,\n        deleteAssetIdsFromKey,\n        updateAssetIdsFromKey,\n    };\n};\n"],"names":["useThemeAssets","appBridge","portalId","themeAssets","setThemeAssets","useState","updateThemeAssetsFromEvent","event","compareObjects","getThemeAssets","addAssetIdsToThemeAssetKey","key","assetIds","deleteAssetIdsFromThemeAssetKey","useEffect","componentMounted","allThemeAssets","emitUpdatedThemeAssets","newAssetIds","oldAssetIds","_a","asset","error"],"mappings":";;AAQa,MAAAA,IAAiB,CAACC,MAA8B;AACnD,QAAAC,IAAWD,EAAU,eAErB,CAACE,GAAaC,CAAc,IAAIC,EAAkC,CAAE,CAAA,GAEpEC,IAA6B,CAACC,MAI9B;AACE,IAAAA,EAAM,aAAaL,KAAY,CAACM,EAAeD,EAAM,aAAaA,EAAM,eAAe,KACvFH,EAAeG,EAAM,WAAW;AAAA,EACpC,GAGEE,IAAiB,YACZ,MAAMR,EAAU,kBAGrBS,IAA6B,OAAOC,GAAaC,MAAsC;AACnF,UAAAX,EAAU,2BAA2BU,GAAKC,CAAQ;AAAA,EAAA,GAGtDC,IAAkC,OAAOF,GAAaC,MAAsC;AACxF,UAAAX,EAAU,gCAAgCU,GAAKC,CAAQ;AAAA,EAAA;AAKjE,EAAAE,EAAU,MAAM;AACZ,QAAIC,IAAmB;AAEvB,WAAIb,OACsB,YAAY;AACxB,YAAAc,IAAiB,MAAMP;AAE7B,MAAIM,KACAX,EAAeY,CAAc;AAAA,IACjC,MAIG,OAAA,QAAQ,GAAG,gCAAgCV,CAA0B,IAGzE,MAAM;AACU,MAAAS,IAAA,IACZ,OAAA,QAAQ,IAAI,gCAAgCT,CAA0B;AAAA,IAAA;AAAA,EACjF,GACD,CAACL,CAAS,CAAC;AAEd,QAAMgB,IAAyB,YAAY;AAChC,WAAA,QAAQ,KAAK,gCAAgC;AAAA,MAChD,UAAAf;AAAA,MACA,aAAa,MAAMO,EAAe;AAAA,MAClC,iBAAiB,EAAE,GAAGN,EAAY;AAAA,IAAA,CACrC;AAAA,EAAA;AA2BE,SAAA;AAAA,IACH,aAAAA;AAAA,IACA,kBAPqB,OAAOQ,GAAaC,MAAuB;AAC1D,YAAAF,EAA2BC,GAAKC,CAAQ,GACvBK;IAAA;AAAA,IAMvB,uBAb0B,OAAON,GAAaC,MAAuB;AAC/D,YAAAC,EAAgCF,GAAKC,CAAQ,GAC5BK;IAAA;AAAA,IAYvB,uBA5B0B,OAAON,GAAaO,MAA0B;;AAElE,YAAAC,MAAcC,KADO,MAAMX,KACME,CAAG,MAAtB,gBAAAS,EAAyB,IAAI,CAACC,MAAUA,EAAM,QAAO;AAErE,UAAA;AACM,cAAAR,EAAgCF,GAAKQ,CAAW,GAChD,MAAAT,EAA2BC,GAAKO,CAAW;AAAA,eAC5CI,GAAO;AACZ,gBAAQ,MAAMA,CAAK;AAAA,MACvB;AAEuB,MAAAL;IAAA;AAAA,EAiBvB;AAER;"}