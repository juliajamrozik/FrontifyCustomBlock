{"version":3,"file":"useThemeSettings.es.js","sources":["../../src/react/useThemeSettings.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { useEffect, useState } from 'react';\n\nimport type { AppBridgeTheme } from '../AppBridgeTheme';\nimport type { EmitterEvents } from '../types';\n\nexport const useThemeSettings = <T = Record<string, unknown>>(appBridge: AppBridgeTheme) => {\n    const [themeSettings, setThemeSettings] = useState<Nullable<T>>(null);\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n\n    useEffect(() => {\n        const updateThemeSettingsFromEvent = (event: EmitterEvents['AppBridge:ThemeSettingsUpdated']) => {\n            setThemeSettings({ ...event.themeSettings } as T);\n        };\n\n        const getInitialThemeSettings = async () => {\n            setIsLoading(true);\n\n            const themeSettings = await appBridge.getThemeSettings<T>();\n            setThemeSettings(themeSettings);\n\n            setIsLoading(false);\n        };\n\n        getInitialThemeSettings();\n\n        window.emitter.on('AppBridge:ThemeSettingsUpdated', updateThemeSettingsFromEvent);\n\n        return () => {\n            window.emitter.off('AppBridge:ThemeSettingsUpdated', updateThemeSettingsFromEvent);\n        };\n    }, [appBridge]);\n\n    const updateThemeSettings = async (themeSettingsUpdate: Partial<T>) => {\n        try {\n            await appBridge.updateThemeSettings(themeSettingsUpdate);\n\n            window.emitter.emit('AppBridge:ThemeSettingsUpdated', {\n                themeSettings: {\n                    ...themeSettings,\n                    ...themeSettingsUpdate,\n                },\n            });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    return { themeSettings, updateThemeSettings, isLoading };\n};\n"],"names":["useThemeSettings","appBridge","themeSettings","setThemeSettings","useState","isLoading","setIsLoading","useEffect","updateThemeSettingsFromEvent","event","themeSettingsUpdate","error"],"mappings":";AAOa,MAAAA,IAAmB,CAA8BC,MAA8B;AACxF,QAAM,CAACC,GAAeC,CAAgB,IAAIC,EAAsB,IAAI,GAC9D,CAACC,GAAWC,CAAY,IAAIF,EAAkB,EAAI;AAExD,SAAAG,EAAU,MAAM;AACN,UAAAC,IAA+B,CAACC,MAA2D;AAC7F,MAAAN,EAAiB,EAAE,GAAGM,EAAM,cAAoB,CAAA;AAAA,IAAA;AAY5B,YATQ,YAAY;AACxC,MAAAH,EAAa,EAAI;AAEXJ,YAAAA,IAAgB,MAAMD,EAAU;AACtC,MAAAE,EAAiBD,CAAa,GAE9BI,EAAa,EAAK;AAAA,IAAA,MAKf,OAAA,QAAQ,GAAG,kCAAkCE,CAA4B,GAEzE,MAAM;AACF,aAAA,QAAQ,IAAI,kCAAkCA,CAA4B;AAAA,IAAA;AAAA,EACrF,GACD,CAACP,CAAS,CAAC,GAiBP,EAAE,eAAAC,GAAe,qBAfI,OAAOQ,MAAoC;AAC/D,QAAA;AACM,YAAAT,EAAU,oBAAoBS,CAAmB,GAEhD,OAAA,QAAQ,KAAK,kCAAkC;AAAA,QAClD,eAAe;AAAA,UACX,GAAGR;AAAA,UACH,GAAGQ;AAAA,QACP;AAAA,MAAA,CACH;AAAA,aACIC,GAAO;AACZ,cAAQ,MAAMA,CAAK;AAAA,IACvB;AAAA,EAAA,GAGyC,WAAAN;AACjD;"}