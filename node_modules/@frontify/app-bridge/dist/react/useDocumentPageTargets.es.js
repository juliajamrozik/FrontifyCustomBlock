import { useState as r, useEffect as c } from "react";
const l = (e, t) => {
  const [a, s] = r(null), [u, g] = r(!0);
  return c(() => {
    (async () => {
      g(!0), s(await e.getDocumentPageTargets(t)), g(!1);
    })();
  }, [e, t]), c(() => {
    const n = (o) => {
      o.payload.pageIds.includes(t) && s((i) => d(i, o.payload.targets));
    };
    return window.emitter.on("AppBridge:GuidelineDocumentPageTargets:Action", n), () => {
      window.emitter.off("AppBridge:GuidelineDocumentPageTargets:Action", n);
    };
  }, [t]), { documentPageTargets: a, isLoading: u };
}, d = (e, t) => e && {
  ...e,
  hasSelectedTargets: t.length > 0,
  targets: e.targets.map((a) => ({
    ...a,
    target: { ...a.target, checked: t.includes(a.target.id) }
  }))
};
export {
  l as useDocumentPageTargets
};
//# sourceMappingURL=useDocumentPageTargets.es.js.map
