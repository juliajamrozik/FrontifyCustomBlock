import { useState as r, useEffect as s } from "react";
import { mergeDeep as d } from "../utilities/object.es.js";
const p = (n) => {
  const e = n.getBlockId(), [c, i] = r(structuredClone(window.blockSettings[e]));
  return s(() => {
    const t = (o) => {
      o.blockId === e && i({ ...o.blockSettings });
    };
    return window.emitter.on("AppBridge:BlockSettingsUpdated", t), () => {
      window.emitter.off("AppBridge:BlockSettingsUpdated", t);
    };
  }, [e]), [c, async (t) => {
    try {
      await n.updateBlockSettings(t), window.emitter.emit("AppBridge:BlockSettingsUpdated", {
        blockId: e,
        blockSettings: d(c, t)
      });
    } catch (o) {
      console.error(o);
    }
  }];
};
export {
  p as useBlockSettings
};
//# sourceMappingURL=useBlockSettings.es.js.map
