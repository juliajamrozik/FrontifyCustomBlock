/* (c) Copyright Frontify Ltd., all rights reserved. */

module.exports = {
    env: {
        es6: true,
        browser: true,
        node: true,
    },
    plugins: ['html', 'unicorn', 'no-only-tests', 'lodash', 'prettier'],
    extends: [
        'plugin:jsonc/recommended-with-jsonc',
        'plugin:yml/standard',
        'plugin:markdown/recommended',
        'plugin:prettier/recommended',
    ],
    ignorePatterns: [
        '*.min.*',
        'dist',
        'LICENSE*',
        'coverage',
        'temp',
        'package-lock.json',
        'pnpm-lock.yaml',
        'yarn.lock',
    ],
    overrides: [
        {
            files: ['*.json', '*.json5'],
            parser: 'jsonc-eslint-parser',
            rules: {
                quotes: ['error', 'double'],
                'quote-props': ['error', 'always'],
                'comma-dangle': ['error', 'never'],
                semi: 'off',
                'jsonc/array-bracket-spacing': ['error', 'never'],
                'jsonc/comma-dangle': ['error', 'never'],
                'jsonc/comma-style': ['error', 'last'],
                'jsonc/key-spacing': ['error', { beforeColon: false, afterColon: true }],
                'jsonc/no-octal-escape': 'error',
                'jsonc/object-curly-newline': ['error', { multiline: true, consistent: true }],
                'jsonc/object-curly-spacing': ['error', 'always'],
                'jsonc/object-property-newline': ['error', { allowMultiplePropertiesPerLine: true }],
            },
        },
        {
            files: ['*.yaml', '*.yml'],
            parser: 'yaml-eslint-parser',
            rules: {
                'spaced-comment': 'off',
                'yml/quotes': ['error', { prefer: 'single', avoidEscape: false }],
                'yml/no-empty-document': 'off',
                'yml/indent': ['error', 4, { indicatorValueIndent: 2 }],
            },
        },
        {
            files: ['package.json'],
            parser: 'jsonc-eslint-parser',
            rules: {
                'jsonc/sort-keys': [
                    'error',
                    {
                        pathPattern: '^$',
                        order: [
                            'publisher',
                            'name',
                            'displayName',
                            'type',
                            'version',
                            'private',
                            'packageManager',
                            'description',
                            'author',
                            'license',
                            'funding',
                            'homepage',
                            'repository',
                            'bugs',
                            'keywords',
                            'categories',
                            'sideEffects',
                            'exports',
                            'main',
                            'module',
                            'unpkg',
                            'jsdelivr',
                            'types',
                            'typesVersions',
                            'bin',
                            'icon',
                            'files',
                            'engines',
                            'activationEvents',
                            'contributes',
                            'scripts',
                            'peerDependencies',
                            'peerDependenciesMeta',
                            'dependencies',
                            'optionalDependencies',
                            'devDependencies',
                            'pnpm',
                            'overrides',
                            'resolutions',
                            'husky',
                            'simple-git-hooks',
                            'lint-staged',
                            'eslintConfig',
                        ],
                    },
                    {
                        pathPattern: '^(?:dev|peer|optional|bundled)?[Dd]ependencies$',
                        order: { type: 'asc' },
                    },
                    {
                        pathPattern: '^exports.*$',
                        order: ['types', 'require', 'import'],
                    },
                ],
            },
        },
        {
            files: ['*.js'],
            rules: {
                '@typescript-eslint/no-var-requires': 'off',
            },
        },
        {
            files: ['*.d.ts'],
            rules: {
                'import/no-duplicates': 'off',
            },
        },
        {
            files: ['scripts/**/*.*'],
            rules: {
                'no-console': 'off',
            },
        },
        {
            files: ['*.test.ts', '*.test.tsx', '*.test.js', '*.spec.ts', '*.spec.tsx', '*.spec.js'],
            rules: {
                'no-unused-expressions': 'off',
                'no-only-tests/no-only-tests': 'error',
            },
        },
    ],
    rules: {
        'linebreak-style': ['error', 'unix'],
        'prefer-template': 'error',
        'template-curly-spacing': 'error',
        'no-useless-concat': 'error',
        'prefer-arrow-callback': 'error',
        'no-var': 'error',
        'prefer-const': 'error',
        eqeqeq: 'error',
        'no-eval': 'error',
        'no-extra-bind': 'error',
        curly: ['error', 'all'],
        semi: ['error', 'always'],
        quotes: ['error', 'single', { avoidEscape: true }],
        'vars-on-top': 'error',
        'block-scoped-var': 'error',
        'array-callback-return': 'error',
        'object-shorthand': [
            'error',
            'always',
            {
                ignoreConstructors: false,
                avoidQuotes: true,
            },
        ],

        'unicorn/error-message': 'error',
        'unicorn/escape-case': 'error',
        'unicorn/no-array-instanceof': 'error',
        'unicorn/no-new-buffer': 'error',
        'unicorn/no-unsafe-regex': 'off',
        'unicorn/number-literal-case': 'error',
        'unicorn/prefer-exponentiation-operator': 'error',
        'unicorn/prefer-includes': 'error',
        'unicorn/prefer-starts-ends-with': 'error',
        'unicorn/prefer-text-content': 'error',
        'unicorn/prefer-type-error': 'error',
        'unicorn/throw-new-error': 'error',
        'unicorn/prefer-string-replace-all': 'error',
        'unicorn/prefer-default-parameters': 'error',
        'unicorn/prefer-array-find': 'error',
        'unicorn/no-array-for-each': 'error',
        'unicorn/custom-error-definition': 'error',
        'unicorn/better-regex': 'error',
        'unicorn/explicit-length-check': 'error',
        'unicorn/no-await-expression-member': 'error',
        'unicorn/no-nested-ternary': 'error',
        'unicorn/no-new-array': 'error',
        'unicorn/no-this-assignment': 'error',
        'unicorn/no-unsafe-regex': 'error',
        'unicorn/no-useless-length-check': 'error',
        'unicorn/catch-error-name': 'error',

        'sort-imports': [
            'error',
            {
                ignoreCase: false,
                ignoreDeclarationSort: true,
                ignoreMemberSort: false,
                memberSyntaxSortOrder: ['none', 'all', 'multiple', 'single'],
                allowSeparatedGroups: false,
            },
        ],

        'lodash/import-scope': [2, 'method'],
    },
};
