{"version":3,"file":"notification.es.js","sources":["../../src/blocks/notification.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport type { BaseBlock } from './base';\n\nexport enum NotificationStyleType {\n    Warning = 'Warning',\n    Negative = 'Negative',\n    Positive = 'Positive',\n    Info = 'Info',\n}\n\nexport type NotificationFooterEvent = 'design-settings.open' | 'general-settings.open';\n\ntype LinkOrEvent = { href: string; target?: '_self' | '_blank' } | { event: NotificationFooterEvent };\n\nexport declare type Footer<Label extends string> = {\n    label?: Label;\n} & (\n    | LinkOrEvent\n    | { replace?: ExtractVariables<Label> extends never ? never : Record<ExtractVariables<Label>, LinkOrEvent> }\n);\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ntype ExtractVariables<T extends string> = T extends `${infer _Start}[${infer Variable}]${infer Rest}`\n    ? Variable extends string\n        ? Rest extends string\n            ? `${Variable}` | ExtractVariables<Rest>\n            : `${Variable}`\n        : never\n    : never;\n\nexport const createFooter = <Label extends string>(footer: Footer<Label>) => footer as Footer<string>;\n\nexport enum NotificationBlockDividerPosition {\n    Top = 'Top',\n    Bottom = 'Bottom',\n    Both = 'Both',\n    None = 'None',\n}\n\nexport type NotificationBlock<AppBridge> = {\n    /**\n     * The setting type.\n     */\n    type: 'notification';\n\n    /**\n     * The title of the notification.\n     */\n    title?: string;\n\n    /**\n     * The text of the notification.\n     */\n    text?: string;\n\n    /**\n     * @deprecated Use `footer` instead\n     */\n    link?: LinkOrEvent & { label?: string };\n\n    /**\n     * The footer associated with the notification.\n     */\n    footer?: ReturnType<typeof createFooter> | (LinkOrEvent & { label?: string });\n\n    /**\n     * Customization of the notification setting.\n     */\n    styles?: {\n        /**\n         * The type of notification.\n         */\n        type?: 'info' | 'warning' | 'negative' | 'positive' | NotificationStyleType;\n\n        /**\n         * Indicates if the notification should include an icon.\n         */\n        icon?: boolean;\n\n        /**\n         * The position of the divider in the notification.\n         */\n        divider?: 'top' | 'bottom' | 'both' | 'none' | NotificationBlockDividerPosition;\n    };\n} & BaseBlock<AppBridge>;\n"],"names":["NotificationStyleType","createFooter","footer","NotificationBlockDividerPosition"],"mappings":"AAIY,IAAAA,sBAAAA,OACRA,EAAA,UAAU,WACVA,EAAA,WAAW,YACXA,EAAA,WAAW,YACXA,EAAA,OAAO,QAJCA,IAAAA,KAAA,CAAA,CAAA;AA2BC,MAAAC,IAAe,CAAuBC,MAA0BA;AAEjE,IAAAC,sBAAAA,OACRA,EAAA,MAAM,OACNA,EAAA,SAAS,UACTA,EAAA,OAAO,QACPA,EAAA,OAAO,QAJCA,IAAAA,KAAA,CAAA,CAAA;"}