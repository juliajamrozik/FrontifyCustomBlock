import { useState as u, useEffect as w } from "react";
import { compareObjects as f } from "../utilities/object.es.js";
const k = (t, l) => {
  const r = t.getBlockId(), [d, i] = u([]);
  w(() => {
    let o = !0;
    const s = (e) => {
      if (e.blockId === r && !f(e.colors, e.prevColors)) {
        const n = [...e.colors].sort((a, C) => a.sort - C.sort);
        i(n);
      }
    };
    return r && ((async () => {
      const n = await t.getColorsByColorPaletteId(l);
      if (o) {
        const a = [...n].sort((C, m) => C.sort - m.sort);
        i(a);
      }
    })(), window.emitter.on("AppBridge:ColorsUpdated", s)), () => {
      o = !1, window.emitter.off("AppBridge:ColorsUpdated", s);
    };
  }, [t, r, l]);
  const c = async () => {
    window.emitter.emit("AppBridge:ColorsUpdated", {
      blockId: r,
      colors: await t.getColorsByColorPaletteId(l),
      prevColors: { ...d }
    });
  };
  return {
    colorsByPaletteId: d,
    createColor: async (o) => {
      await t.createColor(o), c();
    },
    updateColor: async (o, s) => {
      await t.updateColor(o, s), c();
    },
    deleteColor: async (o) => {
      await t.deleteColor(o), c();
    }
  };
};
export {
  k as useColors
};
//# sourceMappingURL=useColors.es.js.map
