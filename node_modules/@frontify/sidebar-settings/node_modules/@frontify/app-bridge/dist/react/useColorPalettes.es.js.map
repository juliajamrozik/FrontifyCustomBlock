{"version":3,"file":"useColorPalettes.es.js","sources":["../../src/react/useColorPalettes.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { useEffect, useState } from 'react';\n\nimport { compareObjects } from '../utilities';\nimport type { AppBridgeBlock } from '../AppBridgeBlock';\nimport type { ColorPalette, ColorPaletteCreate, ColorPalettePatch } from '../types';\n\nexport type UseColorPalettesReturnType = {\n    colorPalettes: ColorPalette[];\n    createColorPalette: (colorPaletteCreate: ColorPaletteCreate) => void;\n    updateColorPalette: (colorPaletteId: number, colorPalettePatch: ColorPalettePatch) => void;\n    deleteColorPalette: (colorPaletteId: number) => void;\n    downloadColorKit: (selectedColorPalettes: number[]) => string;\n};\n\nexport const useColorPalettes = (appBridge: AppBridgeBlock, colorPaletteIds?: number[]): UseColorPalettesReturnType => {\n    const blockId = appBridge.getBlockId();\n\n    const [colorPalettes, setColorPalettes] = useState<ColorPalette[]>([]);\n\n    const updateColorsPalettesFromEvent = (event: {\n        blockId: number;\n        colorPalettes: ColorPalette[];\n        prevColorPalettes: ColorPalette[];\n    }) => {\n        if (event.blockId === blockId && !compareObjects(event.colorPalettes, event.prevColorPalettes)) {\n            setColorPalettes(event.colorPalettes);\n        }\n    };\n\n    useEffect(() => {\n        let componentMounted = true;\n\n        if (blockId) {\n            const mountingFetch = async () => {\n                const allColorPalettes = await appBridge.getColorPalettesWithColors(colorPaletteIds);\n                if (componentMounted) {\n                    setColorPalettes(allColorPalettes);\n                }\n            };\n            mountingFetch();\n\n            window.emitter.on('AppBridge:ColorPalettesUpdated', updateColorsPalettesFromEvent);\n        }\n\n        return () => {\n            componentMounted = false;\n            window.emitter.off('AppBridge:ColorPalettesUpdated', updateColorsPalettesFromEvent);\n        };\n    }, [appBridge, blockId, colorPaletteIds]);\n\n    const emitUpdatedColorPalettes = async () => {\n        window.emitter.emit('AppBridge:ColorPalettesUpdated', {\n            blockId,\n            colorPalettes: await appBridge.getColorPalettesWithColors(colorPaletteIds),\n            prevColorPalettes: { ...colorPalettes },\n        });\n    };\n\n    const createColorPalette = async (colorPaletteCreate: ColorPaletteCreate) => {\n        await appBridge.createColorPalette(colorPaletteCreate);\n\n        emitUpdatedColorPalettes();\n    };\n\n    const updateColorPalette = async (colorPaletteId: number, colorPalettePatch: ColorPalettePatch) => {\n        await appBridge.updateColorPalette(colorPaletteId, colorPalettePatch);\n\n        emitUpdatedColorPalettes();\n    };\n\n    const deleteColorPalette = async (colorPaletteId: number) => {\n        await appBridge.deleteColorPalette(colorPaletteId);\n\n        emitUpdatedColorPalettes();\n    };\n\n    const downloadColorKit = (selectedColorPalettes: number[]) => {\n        return appBridge.downloadColorKit(selectedColorPalettes);\n    };\n\n    return {\n        colorPalettes,\n        createColorPalette,\n        updateColorPalette,\n        deleteColorPalette,\n        downloadColorKit,\n    };\n};\n"],"names":["useColorPalettes","appBridge","colorPaletteIds","blockId","colorPalettes","setColorPalettes","useState","updateColorsPalettesFromEvent","event","compareObjects","useEffect","componentMounted","allColorPalettes","emitUpdatedColorPalettes","colorPaletteCreate","colorPaletteId","colorPalettePatch","selectedColorPalettes"],"mappings":";;AAgBa,MAAAA,IAAmB,CAACC,GAA2BC,MAA2D;AAC7G,QAAAC,IAAUF,EAAU,cAEpB,CAACG,GAAeC,CAAgB,IAAIC,EAAyB,CAAE,CAAA,GAE/DC,IAAgC,CAACC,MAIjC;AACE,IAAAA,EAAM,YAAYL,KAAW,CAACM,EAAeD,EAAM,eAAeA,EAAM,iBAAiB,KACzFH,EAAiBG,EAAM,aAAa;AAAA,EACxC;AAGJ,EAAAE,EAAU,MAAM;AACZ,QAAIC,IAAmB;AAEvB,WAAIR,OACsB,YAAY;AAC9B,YAAMS,IAAmB,MAAMX,EAAU,2BAA2BC,CAAe;AACnF,MAAIS,KACAN,EAAiBO,CAAgB;AAAA,IACrC,MAIG,OAAA,QAAQ,GAAG,kCAAkCL,CAA6B,IAG9E,MAAM;AACU,MAAAI,IAAA,IACZ,OAAA,QAAQ,IAAI,kCAAkCJ,CAA6B;AAAA,IAAA;AAAA,EAEvF,GAAA,CAACN,GAAWE,GAASD,CAAe,CAAC;AAExC,QAAMW,IAA2B,YAAY;AAClC,WAAA,QAAQ,KAAK,kCAAkC;AAAA,MAClD,SAAAV;AAAA,MACA,eAAe,MAAMF,EAAU,2BAA2BC,CAAe;AAAA,MACzE,mBAAmB,EAAE,GAAGE,EAAc;AAAA,IAAA,CACzC;AAAA,EAAA;AAyBE,SAAA;AAAA,IACH,eAAAA;AAAA,IACA,oBAxBuB,OAAOU,MAA2C;AACnE,YAAAb,EAAU,mBAAmBa,CAAkB,GAE5BD;IAAA;AAAA,IAsBzB,oBAnBuB,OAAOE,GAAwBC,MAAyC;AACzF,YAAAf,EAAU,mBAAmBc,GAAgBC,CAAiB,GAE3CH;IAAA;AAAA,IAiBzB,oBAduB,OAAOE,MAA2B;AACnD,YAAAd,EAAU,mBAAmBc,CAAc,GAExBF;IAAA;AAAA,IAYzB,kBATqB,CAACI,MACfhB,EAAU,iBAAiBgB,CAAqB;AAAA,EAQvD;AAER;"}