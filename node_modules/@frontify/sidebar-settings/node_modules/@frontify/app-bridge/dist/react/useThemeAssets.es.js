import { useState as w, useEffect as p } from "react";
import { compareObjects as u } from "../utilities/object.es.js";
const g = (t) => {
  const o = t.getPortalId(), [n, r] = w({}), A = (e) => {
    e.portalId === o && !u(e.themeAssets, e.prevThemeAssets) && r(e.themeAssets);
  }, a = async () => await t.getThemeAssets(), c = async (e, s) => {
    await t.addAssetIdsToThemeAssetKey(e, s);
  }, h = async (e, s) => {
    await t.deleteAssetIdsFromThemeAssetKey(e, s);
  };
  p(() => {
    let e = !0;
    return o && ((async () => {
      const i = await a();
      e && r(i);
    })(), window.emitter.on("AppBridge:ThemeAssetsUpdated", A)), () => {
      e = !1, window.emitter.off("AppBridge:ThemeAssetsUpdated", A);
    };
  }, [t]);
  const m = async () => {
    window.emitter.emit("AppBridge:ThemeAssetsUpdated", {
      portalId: o,
      themeAssets: await a(),
      prevThemeAssets: { ...n }
    });
  };
  return {
    themeAssets: n,
    addAssetIdsToKey: async (e, s) => {
      await c(e, s), m();
    },
    deleteAssetIdsFromKey: async (e, s) => {
      await h(e, s), m();
    },
    updateAssetIdsFromKey: async (e, s) => {
      var T;
      const y = ((T = (await a())[e]) == null ? void 0 : T.map((d) => d.id)) ?? [];
      try {
        await h(e, y), await c(e, s);
      } catch (d) {
        console.error(d);
      }
      m();
    }
  };
};
export {
  g as useThemeAssets
};
//# sourceMappingURL=useThemeAssets.es.js.map
