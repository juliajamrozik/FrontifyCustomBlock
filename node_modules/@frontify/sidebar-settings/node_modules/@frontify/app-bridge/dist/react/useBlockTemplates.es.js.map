{"version":3,"file":"useBlockTemplates.es.js","sources":["../../src/react/useBlockTemplates.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { useEffect, useState } from 'react';\n\nimport type { AppBridgeBlock } from '../AppBridgeBlock';\nimport type { Template } from '../types';\nimport { compareObjects } from '../utilities';\n\nexport const useBlockTemplates = (appBridge: AppBridgeBlock) => {\n    const blockId = appBridge.getBlockId();\n\n    const [blockTemplates, setBlockTemplates] = useState<Record<string, Template[]>>({});\n\n    const updateBlockTemplatesFromEvent = (event: {\n        blockId: number;\n        blockTemplates: Record<string, Template[]>;\n        prevBlockTemplates: Record<string, Template[]>;\n    }) => {\n        if (event.blockId === blockId && !compareObjects(event.blockTemplates, event.prevBlockTemplates)) {\n            setBlockTemplates(event.blockTemplates);\n        }\n    };\n\n    // Fetch the block templates on mount.\n    // And add listener for block template updates.\n    useEffect(() => {\n        let componentMounted = true;\n\n        if (blockId) {\n            const mountingFetch = async () => {\n                const allBlockTemplates = await appBridge.getBlockTemplates();\n                if (componentMounted) {\n                    setBlockTemplates(allBlockTemplates);\n                }\n            };\n\n            mountingFetch();\n            window.emitter.on('AppBridge:BlockTemplatesUpdated', updateBlockTemplatesFromEvent);\n        }\n\n        return () => {\n            componentMounted = false;\n            window.emitter.off('AppBridge:BlockTemplatesUpdated', updateBlockTemplatesFromEvent);\n        };\n    }, [appBridge]);\n\n    const emitUpdatedBlockTemplates = async () => {\n        window.emitter.emit('AppBridge:BlockTemplatesUpdated', {\n            blockId,\n            blockTemplates: await appBridge.getBlockTemplates(),\n            prevBlockTemplates: { ...blockTemplates },\n        });\n    };\n\n    const updateTemplateIdsFromKey = async (key: string, newTemplateIds: number[]) => {\n        const currentBlockTemplates = await appBridge.getBlockTemplates();\n        const oldTemplateIds = currentBlockTemplates[key]?.map((template) => template.id) ?? [];\n\n        try {\n            await appBridge.deleteTemplateIdsFromBlockTemplateKey(key, oldTemplateIds);\n            await appBridge.addTemplateIdsToBlockTemplateKey(key, newTemplateIds);\n        } catch (error) {\n            console.error(error);\n        }\n\n        emitUpdatedBlockTemplates();\n    };\n\n    const deleteTemplateIdsFromKey = async (key: string, templateIds: number[]) => {\n        await appBridge.deleteTemplateIdsFromBlockTemplateKey(key, templateIds);\n        emitUpdatedBlockTemplates();\n    };\n\n    const addTemplateIdsToKey = async (key: string, templateIds: number[]) => {\n        await appBridge.addTemplateIdsToBlockTemplateKey(key, templateIds);\n        emitUpdatedBlockTemplates();\n    };\n\n    return {\n        blockTemplates,\n        addTemplateIdsToKey,\n        deleteTemplateIdsFromKey,\n        updateTemplateIdsFromKey,\n    };\n};\n"],"names":["useBlockTemplates","appBridge","blockId","blockTemplates","setBlockTemplates","useState","updateBlockTemplatesFromEvent","event","compareObjects","useEffect","componentMounted","allBlockTemplates","emitUpdatedBlockTemplates","key","templateIds","newTemplateIds","oldTemplateIds","_a","template","error"],"mappings":";;AAQa,MAAAA,IAAoB,CAACC,MAA8B;AACtD,QAAAC,IAAUD,EAAU,cAEpB,CAACE,GAAgBC,CAAiB,IAAIC,EAAqC,CAAE,CAAA,GAE7EC,IAAgC,CAACC,MAIjC;AACE,IAAAA,EAAM,YAAYL,KAAW,CAACM,EAAeD,EAAM,gBAAgBA,EAAM,kBAAkB,KAC3FH,EAAkBG,EAAM,cAAc;AAAA,EAC1C;AAKJ,EAAAE,EAAU,MAAM;AACZ,QAAIC,IAAmB;AAEvB,WAAIR,OACsB,YAAY;AACxB,YAAAS,IAAoB,MAAMV,EAAU;AAC1C,MAAIS,KACAN,EAAkBO,CAAiB;AAAA,IACvC,MAIG,OAAA,QAAQ,GAAG,mCAAmCL,CAA6B,IAG/E,MAAM;AACU,MAAAI,IAAA,IACZ,OAAA,QAAQ,IAAI,mCAAmCJ,CAA6B;AAAA,IAAA;AAAA,EACvF,GACD,CAACL,CAAS,CAAC;AAEd,QAAMW,IAA4B,YAAY;AACnC,WAAA,QAAQ,KAAK,mCAAmC;AAAA,MACnD,SAAAV;AAAA,MACA,gBAAgB,MAAMD,EAAU,kBAAkB;AAAA,MAClD,oBAAoB,EAAE,GAAGE,EAAe;AAAA,IAAA,CAC3C;AAAA,EAAA;AA2BE,SAAA;AAAA,IACH,gBAAAA;AAAA,IACA,qBAPwB,OAAOU,GAAaC,MAA0B;AAChE,YAAAb,EAAU,iCAAiCY,GAAKC,CAAW,GACvCF;IAAA;AAAA,IAM1B,0BAb6B,OAAOC,GAAaC,MAA0B;AACrE,YAAAb,EAAU,sCAAsCY,GAAKC,CAAW,GAC5CF;IAAA;AAAA,IAY1B,0BA5B6B,OAAOC,GAAaE,MAA6B;;AAExE,YAAAC,MAAiBC,KADO,MAAMhB,EAAU,qBACDY,CAAG,MAAzB,gBAAAI,EAA4B,IAAI,CAACC,MAAaA,EAAS,QAAO;AAEjF,UAAA;AACM,cAAAjB,EAAU,sCAAsCY,GAAKG,CAAc,GACnE,MAAAf,EAAU,iCAAiCY,GAAKE,CAAc;AAAA,eAC/DI,GAAO;AACZ,gBAAQ,MAAMA,CAAK;AAAA,MACvB;AAE0B,MAAAP;IAAA;AAAA,EAiB1B;AAER;"}