{"version":3,"file":"useBrandportalLink.es.js","sources":["../../src/react/useBrandportalLink.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { useEffect, useState } from 'react';\n\nimport type { AppBridgeTheme } from '../AppBridgeTheme';\nimport type { BrandportalLink, EmitterAction } from '../types';\n\nconst defaultState: BrandportalLink = {\n    enabled: false,\n    label: '',\n    url: '',\n};\n\nexport type UseBrandportalLinkReturnType = {\n    brandportalLink: Nullable<BrandportalLink>;\n    isLoading: boolean;\n};\n\ntype Options = {\n    /**\n     * Whether it should fetch on mount.\n     */\n    enabled?: boolean;\n};\n\nexport const useBrandportalLink = (\n    appBridge: AppBridgeTheme,\n    options: Options = { enabled: true },\n): UseBrandportalLinkReturnType => {\n    const [brandportalLink, setBrandportalLink] = useState<Nullable<BrandportalLink>>(null);\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchBrandportalLink = async () => {\n            setIsLoading(true);\n            setBrandportalLink(await appBridge.getBrandportalLink());\n            setIsLoading(false);\n        };\n\n        if (options.enabled) {\n            fetchBrandportalLink().catch(console.error);\n        }\n    }, [appBridge, options.enabled]);\n\n    useEffect(() => {\n        const updateBrandportalLinkFromEvent = (event: {\n            brandportalLink: Partial<BrandportalLink>;\n            action: Extract<EmitterAction, 'update'>;\n        }) => {\n            setBrandportalLink((previousState) => {\n                if (event.action === 'update') {\n                    return { ...defaultState, ...previousState, ...event.brandportalLink };\n                }\n\n                return previousState;\n            });\n        };\n\n        window.emitter.on('AppBridge:GuidelineBrandportalLink:Action', updateBrandportalLinkFromEvent);\n\n        return () => {\n            window.emitter.off('AppBridge:GuidelineBrandportalLink:Action', updateBrandportalLinkFromEvent);\n        };\n    }, [appBridge]);\n\n    return { brandportalLink, isLoading };\n};\n"],"names":["defaultState","useBrandportalLink","appBridge","options","brandportalLink","setBrandportalLink","useState","isLoading","setIsLoading","useEffect","fetchBrandportalLink","updateBrandportalLinkFromEvent","event","previousState"],"mappings":";AAOA,MAAMA,IAAgC;AAAA,EAClC,SAAS;AAAA,EACT,OAAO;AAAA,EACP,KAAK;AACT,GAcaC,IAAqB,CAC9BC,GACAC,IAAmB,EAAE,SAAS,SACC;AAC/B,QAAM,CAACC,GAAiBC,CAAkB,IAAIC,EAAoC,IAAI,GAChF,CAACC,GAAWC,CAAY,IAAIF,EAAS,EAAI;AAE/C,SAAAG,EAAU,MAAM;AACZ,UAAMC,IAAuB,YAAY;AACrC,MAAAF,EAAa,EAAI,GACEH,EAAA,MAAMH,EAAU,mBAAA,CAAoB,GACvDM,EAAa,EAAK;AAAA,IAAA;AAGtB,IAAIL,EAAQ,WACaO,IAAE,MAAM,QAAQ,KAAK;AAAA,EAE/C,GAAA,CAACR,GAAWC,EAAQ,OAAO,CAAC,GAE/BM,EAAU,MAAM;AACN,UAAAE,IAAiC,CAACC,MAGlC;AACF,MAAAP,EAAmB,CAACQ,MACZD,EAAM,WAAW,WACV,EAAE,GAAGZ,GAAc,GAAGa,GAAe,GAAGD,EAAM,oBAGlDC,CACV;AAAA,IAAA;AAGE,kBAAA,QAAQ,GAAG,6CAA6CF,CAA8B,GAEtF,MAAM;AACF,aAAA,QAAQ,IAAI,6CAA6CA,CAA8B;AAAA,IAAA;AAAA,EAClG,GACD,CAACT,CAAS,CAAC,GAEP,EAAE,iBAAAE,GAAiB,WAAAG;AAC9B;"}