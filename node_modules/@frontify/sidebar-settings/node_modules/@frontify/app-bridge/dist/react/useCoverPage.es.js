import { useState as u, useCallback as g, useEffect as l } from "react";
const P = (r, t = { enabled: !0 }) => {
  const [s, n] = u(null), [d, a] = u(!0), o = g(async () => {
    a(!0), n(await r.getCoverPage()), a(!1);
  }, [r]);
  return l(() => {
    t.enabled && o().catch(console.error);
  }, [r, o, t.enabled]), l(() => {
    const c = (e) => {
      if (e.action === "add") {
        o().catch(console.error);
        return;
      }
      n((i) => e.action === "delete" ? null : e.action === "update" && e.coverPage ? { ...i, ...e.coverPage } : i);
    };
    return window.emitter.on("AppBridge:GuidelineCoverPage:Action", c), () => {
      window.emitter.off("AppBridge:GuidelineCoverPage:Action", c);
    };
  }, [r, o]), { coverPage: s, isLoading: d };
};
export {
  P as useCoverPage
};
//# sourceMappingURL=useCoverPage.es.js.map
