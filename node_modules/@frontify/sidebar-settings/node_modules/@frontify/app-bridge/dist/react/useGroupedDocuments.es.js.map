{"version":3,"file":"useGroupedDocuments.es.js","sources":["../../src/react/useGroupedDocuments.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { useCallback, useEffect, useState } from 'react';\nimport { produce } from 'immer';\n\nimport type { AppBridgeBlock } from '../AppBridgeBlock';\nimport type { AppBridgeTheme } from '../AppBridgeTheme';\nimport type { Document, EmitterEvents } from '../types';\n\ntype DocumentPageEvent = EmitterEvents['AppBridge:GuidelineDocument:DocumentPageAction'];\ntype DocumentCategoryEvent = EmitterEvents['AppBridge:GuidelineDocument:DocumentCategoryAction'];\ntype DocumentMoveEvent = EmitterEvents['AppBridge:GuidelineDocument:MoveEvent'];\n\ntype Options = {\n    /**\n     * Whether it should fetch on mount.\n     */\n    enabled?: boolean;\n};\n\nconst sortDocuments = (a: Document, b: Document) => (a.sort && b.sort ? a.sort - b.sort : 0);\n\nexport const useGroupedDocuments = (\n    appBridge: AppBridgeBlock | AppBridgeTheme,\n    documentGroupId: number,\n    options: Options = { enabled: true },\n) => {\n    const [documents, setDocuments] = useState<Map<number, Document>>(new Map([]));\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n\n    const refetch = useCallback(async () => {\n        setIsLoading(true);\n        setDocuments(await fetchGroupedDocuments(appBridge, documentGroupId));\n        setIsLoading(false);\n    }, [appBridge, documentGroupId]);\n\n    useEffect(() => {\n        if (options.enabled) {\n            refetch();\n        }\n    }, [options.enabled, refetch]);\n\n    useEffect(() => {\n        const handleDocumentPageEvent = (event: DocumentPageEvent) => {\n            if (!documents.has(event.documentPage.documentId)) {\n                return;\n            }\n\n            setDocuments(\n                produce((draft) => {\n                    const action = `${event.action}-page` as const;\n                    const handler = actionHandlers[action] || actionHandlers.default;\n                    return handler(draft, event.documentPage);\n                }),\n            );\n        };\n\n        const handleDocumentCategoryEvent = (event: DocumentCategoryEvent) => {\n            if (!documents.has(event.documentCategory.documentId)) {\n                return;\n            }\n\n            setDocuments(\n                produce((draft) => {\n                    const action = `${event.action}-category` as const;\n                    const handler = actionHandlers[action] || actionHandlers.default;\n                    return handler(draft, event.documentCategory);\n                }),\n            );\n        };\n\n        const handlerDocumentMoveEventPreview = (event: DocumentMoveEvent) => {\n            if (!documents.has(event.document.id) || event.newGroupId !== documentGroupId) {\n                return;\n            }\n\n            setDocuments(\n                produce((draft) => previewDocumentSort(draft, event.document, event.position, event.newGroupId)),\n            );\n        };\n\n        const handler = ({ action, document }: EmitterEvents['AppBridge:GuidelineDocument:Action']) => {\n            if (\n                ((action === 'update' || action === 'move') && documents.has(document.id)) ||\n                (action === 'add' && document.documentGroupId === documentGroupId)\n            ) {\n                refetch();\n            } else if (action === 'delete' && documents.has(document.id)) {\n                setDocuments(\n                    produce((draft) => {\n                        if (action === 'delete') {\n                            draft.delete(document.id);\n                        }\n                    }),\n                );\n            }\n        };\n\n        window.emitter.on('AppBridge:GuidelineDocument:Action', handler);\n        window.emitter.on('AppBridge:GuidelineDocumentTargets:Action', refetch);\n        window.emitter.on('AppBridge:GuidelineDocument:DocumentPageAction', handleDocumentPageEvent);\n        window.emitter.on('AppBridge:GuidelineDocument:DocumentCategoryAction', handleDocumentCategoryEvent);\n        window.emitter.on('AppBridge:GuidelineDocument:MoveEvent', handlerDocumentMoveEventPreview);\n\n        return () => {\n            window.emitter.off('AppBridge:GuidelineDocument:Action', handler);\n            window.emitter.off('AppBridge:GuidelineDocumentTargets:Action', refetch);\n            window.emitter.off('AppBridge:GuidelineDocument:DocumentPageAction', handleDocumentPageEvent);\n            window.emitter.off('AppBridge:GuidelineDocument:DocumentCategoryAction', handleDocumentCategoryEvent);\n            window.emitter.off('AppBridge:GuidelineDocument:MoveEvent', handlerDocumentMoveEventPreview);\n        };\n    }, [documentGroupId, documents, options.enabled, refetch]);\n\n    return { documents: Array.from(documents.values()), refetch, isLoading };\n};\n\nconst previewDocumentSort = (\n    documents: Map<number, Document>,\n    document: DocumentMoveEvent['document'],\n    newPosition: DocumentMoveEvent['position'],\n    newGroupId: DocumentMoveEvent['newGroupId'],\n) => {\n    if (!document.sort) {\n        return documents;\n    }\n\n    const previousDocument = documents.get(document.id);\n    const documentsAsArray: Document[] = [...documents.values()].sort(sortDocuments);\n\n    documents.clear();\n\n    let sort = 1;\n    let isOnLastPosition = true;\n    for (const currentDocument of documentsAsArray) {\n        if (currentDocument.id === document.id || currentDocument.documentGroupId !== newGroupId) {\n            continue;\n        }\n\n        if (previousDocument && sort === newPosition) {\n            documents.set(document.id, { ...previousDocument, sort: newPosition });\n            isOnLastPosition = false;\n        }\n\n        documents.set(currentDocument.id, {\n            ...currentDocument,\n            sort,\n        });\n\n        sort++;\n    }\n\n    if (previousDocument && isOnLastPosition) {\n        documents.set(document.id, { ...previousDocument, sort });\n    }\n\n    return documents;\n};\n\nconst addDocumentPage = (documents: Map<number, Document>, documentPageToAdd: DocumentPageEvent['documentPage']) => {\n    const document = documents.get(documentPageToAdd.documentId);\n    if (!document) {\n        return documents;\n    }\n\n    const newDocument = {\n        ...document,\n        numberOfUncategorizedDocumentPages: document.numberOfUncategorizedDocumentPages + 1,\n    };\n\n    return documents.set(document.id, newDocument);\n};\n\nconst deleteDocumentPage = (\n    documents: Map<number, Document>,\n    documentPageToDelete: DocumentPageEvent['documentPage'],\n) => {\n    const document = documents.get(documentPageToDelete.documentId);\n    if (!document) {\n        return documents;\n    }\n\n    const newDocument = {\n        ...document,\n        numberOfUncategorizedDocumentPages: document.numberOfUncategorizedDocumentPages - 1,\n    };\n\n    return documents.set(document.id, newDocument);\n};\n\nconst addDocumentCategory = (\n    documents: Map<number, Document>,\n    documentCategoryToAdd: DocumentCategoryEvent['documentCategory'],\n) => {\n    const document = documents.get(documentCategoryToAdd.documentId);\n    if (!document) {\n        return documents;\n    }\n\n    const newDocument = {\n        ...document,\n        numberOfDocumentPageCategories: document.numberOfDocumentPageCategories + 1,\n    };\n\n    return documents.set(document.id, newDocument);\n};\n\nconst deleteDocumentCategory = (\n    documents: Map<number, Document>,\n    documentCategoryToDelete: DocumentCategoryEvent['documentCategory'],\n) => {\n    const document = documents.get(documentCategoryToDelete.documentId);\n    if (!document) {\n        return documents;\n    }\n\n    const newDocument = {\n        ...document,\n        numberOfDocumentPageCategories: document.numberOfDocumentPageCategories - 1,\n    };\n\n    return documents.set(document.id, newDocument);\n};\n\nconst actionHandlers = {\n    'add-page': addDocumentPage,\n    'delete-page': deleteDocumentPage,\n    'add-category': addDocumentCategory,\n    'delete-category': deleteDocumentCategory,\n    default: (documents: Map<number, Document>) => documents,\n};\n\nconst fetchGroupedDocuments = async (appBridge: AppBridgeBlock | AppBridgeTheme, documentGroupId: number) => {\n    const documents = await appBridge.getDocumentsByDocumentGroupId(documentGroupId);\n    return new Map([...documents].sort(sortDocuments).map((document) => [document.id, document]));\n};\n"],"names":["sortDocuments","a","b","useGroupedDocuments","appBridge","documentGroupId","options","documents","setDocuments","useState","isLoading","setIsLoading","refetch","useCallback","fetchGroupedDocuments","useEffect","handleDocumentPageEvent","event","produce","draft","action","handler","actionHandlers","handleDocumentCategoryEvent","handlerDocumentMoveEventPreview","previewDocumentSort","document","newPosition","newGroupId","previousDocument","documentsAsArray","sort","isOnLastPosition","currentDocument","addDocumentPage","documentPageToAdd","newDocument","deleteDocumentPage","documentPageToDelete","addDocumentCategory","documentCategoryToAdd","deleteDocumentCategory","documentCategoryToDelete"],"mappings":"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"}