{"version":3,"file":"_baseIteratee.es.js","sources":["../../../../../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseIteratee.js"],"sourcesContent":["import baseMatches from './_baseMatches.js';\nimport baseMatchesProperty from './_baseMatchesProperty.js';\nimport identity from './identity.js';\nimport isArray from './isArray.js';\nimport property from './property.js';\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nexport default baseIteratee;\n"],"names":["baseIteratee","value","identity","isArray","baseMatchesProperty","baseMatches","property"],"mappings":";;;;;AAaA,SAASA,EAAaC,GAAO;AAG3B,SAAI,OAAOA,KAAS,aACXA,IAELA,KAAS,OACJC,IAEL,OAAOD,KAAS,WACXE,EAAQF,CAAK,IAChBG,EAAoBH,EAAM,CAAC,GAAGA,EAAM,CAAC,CAAC,IACtCI,EAAYJ,CAAK,IAEhBK,EAASL,CAAK;AACvB;","x_google_ignoreList":[0]}