{"version":3,"file":"marginExtended.es.js","sources":["../../src/settings/marginExtended.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport {\n    MultiInputLayout,\n    SettingBlock,\n    appendUnit,\n    maximumNumericalOrPixelOrAutoRule,\n    numericalOrPixelRule,\n    presetCustomValue,\n} from '../';\nimport { MARGIN_DEFAULT_PLACEHOLDER } from './defaultValues';\nimport { getMarginSlider } from './margin';\nimport { marginStyleMap } from './types';\n\ntype MarginSettingsType = {\n    id?: string;\n};\n\n/**\n * Returns margin settings: margin switch, margin slider, custom margin input for every direction\n *\n * @param options Options for the settings\n * @param options.id Custom suffix for the setting ids\n * @returns {SettingBlock} Returns margin settings\n */\nexport const getMarginExtendedSettings = (options?: MarginSettingsType): SettingBlock => {\n    const hasId = options?.id ? `hasExtendedCustomMargin_${options?.id}` : 'hasExtendedCustomMargin';\n    const valueId = options?.id ? `extendedMarginValues_${options?.id}` : 'extendedMarginValues';\n    const choiceId = options?.id ? `extendedMarginChoice_${options?.id}` : 'extendedMarginChoice';\n    const topId = options?.id ? `extendedMarginTop_${options?.id}` : 'extendedMarginTop';\n    const leftId = options?.id ? `extendedMarginLeft_${options?.id}` : 'extendedMarginLeft';\n    const rightId = options?.id ? `extendedMarginRight_${options?.id}` : 'extendedMarginRight';\n    const bottomId = options?.id ? `extendedMarginBottom_${options?.id}` : 'extendedMarginBottom';\n\n    return {\n        id: hasId,\n        label: 'Margin',\n        type: 'switch',\n        switchLabel: 'Custom',\n        defaultValue: false,\n        info: 'The spacing around UI elements to create more negative space',\n        onChange: (bundle) => {\n            presetCustomValue(bundle, choiceId, topId, marginStyleMap);\n            presetCustomValue(bundle, choiceId, leftId, marginStyleMap);\n            presetCustomValue(bundle, choiceId, rightId, marginStyleMap);\n            presetCustomValue(bundle, choiceId, bottomId, marginStyleMap);\n        },\n        on: [\n            {\n                id: valueId,\n                type: 'multiInput',\n                layout: MultiInputLayout.Spider,\n                blocks: [\n                    {\n                        id: topId,\n                        type: 'input',\n                        label: 'Top',\n                        placeholder: MARGIN_DEFAULT_PLACEHOLDER,\n                        onChange: (bundle) => appendUnit(bundle, topId),\n                        rules: [numericalOrPixelRule, maximumNumericalOrPixelOrAutoRule(500)],\n                    },\n                    {\n                        id: leftId,\n                        type: 'input',\n                        label: 'Left',\n                        placeholder: MARGIN_DEFAULT_PLACEHOLDER,\n                        onChange: (bundle) => appendUnit(bundle, leftId),\n                        rules: [numericalOrPixelRule, maximumNumericalOrPixelOrAutoRule(500)],\n                    },\n                    {\n                        id: rightId,\n                        type: 'input',\n                        label: 'Right',\n                        placeholder: MARGIN_DEFAULT_PLACEHOLDER,\n                        onChange: (bundle) => appendUnit(bundle, rightId),\n                        rules: [numericalOrPixelRule, maximumNumericalOrPixelOrAutoRule(500)],\n                    },\n                    {\n                        id: bottomId,\n                        type: 'input',\n                        label: 'Bottom',\n                        placeholder: MARGIN_DEFAULT_PLACEHOLDER,\n                        onChange: (bundle) => appendUnit(bundle, bottomId),\n                        rules: [numericalOrPixelRule, maximumNumericalOrPixelOrAutoRule(500)],\n                    },\n                ],\n            },\n        ],\n        off: [getMarginSlider(choiceId)],\n    };\n};\n"],"names":["getMarginExtendedSettings","options","hasId","valueId","choiceId","topId","leftId","rightId","bottomId","bundle","presetCustomValue","marginStyleMap","MultiInputLayout","MARGIN_DEFAULT_PLACEHOLDER","appendUnit","numericalOrPixelRule","maximumNumericalOrPixelOrAutoRule","getMarginSlider"],"mappings":";;;;;AAyBa,MAAAA,IAA4B,CAACC,MAA+C;AACrF,QAAMC,IAAQD,KAAA,QAAAA,EAAS,KAAK,2BAA2BA,KAAA,gBAAAA,EAAS,EAAE,KAAK,2BACjEE,IAAUF,KAAA,QAAAA,EAAS,KAAK,wBAAwBA,KAAA,gBAAAA,EAAS,EAAE,KAAK,wBAChEG,IAAWH,KAAA,QAAAA,EAAS,KAAK,wBAAwBA,KAAA,gBAAAA,EAAS,EAAE,KAAK,wBACjEI,IAAQJ,KAAA,QAAAA,EAAS,KAAK,qBAAqBA,KAAA,gBAAAA,EAAS,EAAE,KAAK,qBAC3DK,IAASL,KAAA,QAAAA,EAAS,KAAK,sBAAsBA,KAAA,gBAAAA,EAAS,EAAE,KAAK,sBAC7DM,IAAUN,KAAA,QAAAA,EAAS,KAAK,uBAAuBA,KAAA,gBAAAA,EAAS,EAAE,KAAK,uBAC/DO,IAAWP,KAAA,QAAAA,EAAS,KAAK,wBAAwBA,KAAA,gBAAAA,EAAS,EAAE,KAAK;AAEhE,SAAA;AAAA,IACH,IAAIC;AAAA,IACJ,OAAO;AAAA,IACP,MAAM;AAAA,IACN,aAAa;AAAA,IACb,cAAc;AAAA,IACd,MAAM;AAAA,IACN,UAAU,CAACO,MAAW;AACA,MAAAC,EAAAD,GAAQL,GAAUC,GAAOM,CAAc,GACvCD,EAAAD,GAAQL,GAAUE,GAAQK,CAAc,GACxCD,EAAAD,GAAQL,GAAUG,GAASI,CAAc,GACzCD,EAAAD,GAAQL,GAAUI,GAAUG,CAAc;AAAA,IAChE;AAAA,IACA,IAAI;AAAA,MACA;AAAA,QACI,IAAIR;AAAA,QACJ,MAAM;AAAA,QACN,QAAQS,EAAiB;AAAA,QACzB,QAAQ;AAAA,UACJ;AAAA,YACI,IAAIP;AAAA,YACJ,MAAM;AAAA,YACN,OAAO;AAAA,YACP,aAAaQ;AAAA,YACb,UAAU,CAACJ,MAAWK,EAAWL,GAAQJ,CAAK;AAAA,YAC9C,OAAO,CAACU,GAAsBC,EAAkC,GAAG,CAAC;AAAA,UACxE;AAAA,UACA;AAAA,YACI,IAAIV;AAAA,YACJ,MAAM;AAAA,YACN,OAAO;AAAA,YACP,aAAaO;AAAA,YACb,UAAU,CAACJ,MAAWK,EAAWL,GAAQH,CAAM;AAAA,YAC/C,OAAO,CAACS,GAAsBC,EAAkC,GAAG,CAAC;AAAA,UACxE;AAAA,UACA;AAAA,YACI,IAAIT;AAAA,YACJ,MAAM;AAAA,YACN,OAAO;AAAA,YACP,aAAaM;AAAA,YACb,UAAU,CAACJ,MAAWK,EAAWL,GAAQF,CAAO;AAAA,YAChD,OAAO,CAACQ,GAAsBC,EAAkC,GAAG,CAAC;AAAA,UACxE;AAAA,UACA;AAAA,YACI,IAAIR;AAAA,YACJ,MAAM;AAAA,YACN,OAAO;AAAA,YACP,aAAaK;AAAA,YACb,UAAU,CAACJ,MAAWK,EAAWL,GAAQD,CAAQ;AAAA,YACjD,OAAO,CAACO,GAAsBC,EAAkC,GAAG,CAAC;AAAA,UACxE;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,KAAK,CAACC,EAAgBb,CAAQ,CAAC;AAAA,EAAA;AAEvC;"}