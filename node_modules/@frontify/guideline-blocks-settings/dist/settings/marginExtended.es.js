import "../styles.css.es.js";
import { presetCustomValue as r, MultiInputLayout as I, appendUnit as l, numericalOrPixelRule as g, maximumNumericalOrPixelOrAutoRule as u } from "@frontify/sidebar-settings";
import { MARGIN_DEFAULT_PLACEHOLDER as m } from "./defaultValues.es.js";
import { getMarginSlider as y } from "./margin.es.js";
import { marginStyleMap as c } from "./types.es.js";
const b = (e) => {
  const t = e != null && e.id ? `hasExtendedCustomMargin_${e == null ? void 0 : e.id}` : "hasExtendedCustomMargin", C = e != null && e.id ? `extendedMarginValues_${e == null ? void 0 : e.id}` : "extendedMarginValues", a = e != null && e.id ? `extendedMarginChoice_${e == null ? void 0 : e.id}` : "extendedMarginChoice", h = e != null && e.id ? `extendedMarginTop_${e == null ? void 0 : e.id}` : "extendedMarginTop", M = e != null && e.id ? `extendedMarginLeft_${e == null ? void 0 : e.id}` : "extendedMarginLeft", x = e != null && e.id ? `extendedMarginRight_${e == null ? void 0 : e.id}` : "extendedMarginRight", f = e != null && e.id ? `extendedMarginBottom_${e == null ? void 0 : e.id}` : "extendedMarginBottom";
  return {
    id: t,
    label: "Margin",
    type: "switch",
    switchLabel: "Custom",
    defaultValue: !1,
    info: "The spacing around UI elements to create more negative space",
    onChange: (d) => {
      r(d, a, h, c), r(d, a, M, c), r(d, a, x, c), r(d, a, f, c);
    },
    on: [
      {
        id: C,
        type: "multiInput",
        layout: I.Spider,
        blocks: [
          {
            id: h,
            type: "input",
            label: "Top",
            placeholder: m,
            onChange: (d) => l(d, h),
            rules: [g, u(500)]
          },
          {
            id: M,
            type: "input",
            label: "Left",
            placeholder: m,
            onChange: (d) => l(d, M),
            rules: [g, u(500)]
          },
          {
            id: x,
            type: "input",
            label: "Right",
            placeholder: m,
            onChange: (d) => l(d, x),
            rules: [g, u(500)]
          },
          {
            id: f,
            type: "input",
            label: "Bottom",
            placeholder: m,
            onChange: (d) => l(d, f),
            rules: [g, u(500)]
          }
        ]
      }
    ],
    off: [y(a)]
  };
};
export {
  b as getMarginExtendedSettings
};
//# sourceMappingURL=marginExtended.es.js.map
