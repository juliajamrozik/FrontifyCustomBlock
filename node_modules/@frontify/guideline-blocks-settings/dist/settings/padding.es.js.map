{"version":3,"file":"padding.es.js","sources":["../../src/settings/padding.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport {\n    SettingBlock,\n    appendUnit,\n    maximumNumericalOrPixelOrAutoRule,\n    numericalOrPixelRule,\n    presetCustomValue,\n} from '../';\nimport { PADDING_DEFAULT_PLACEHOLDER } from './defaultValues';\nimport { Padding, paddingStyleMap } from './types';\n\ntype PaddingSettingsType = {\n    id?: string;\n    paddingStyleMap?: Record<Padding, string>;\n};\n\n/**\n * Returns padding settings: padding switch, padding slider, custom padding input\n *\n * @param options Options for the settings\n * @param options.id Custom suffix for the setting ids\n * @returns {SettingBlock} Returns padding settings\n */\nexport const getPaddingSlider = (id: string): SettingBlock => ({\n    id,\n    type: 'segmentedControls',\n    defaultValue: Padding.Small,\n    choices: [\n        {\n            value: Padding.None,\n            label: 'None',\n        },\n        {\n            value: Padding.Small,\n            label: 'S',\n        },\n        {\n            value: Padding.Medium,\n            label: 'M',\n        },\n        {\n            value: Padding.Large,\n            label: 'L',\n        },\n    ],\n});\n\nexport const getPaddingSettings = (options?: PaddingSettingsType): SettingBlock => {\n    const hasId = options?.id ? `hasCustomPaddingValue_${options?.id}` : 'hasCustomPaddingValue';\n    const valueId = options?.id ? `paddingValue_${options?.id}` : 'paddingValue';\n    const choiceId = options?.id ? `paddingChoice_${options?.id}` : 'paddingChoice';\n\n    return {\n        id: hasId,\n        label: 'Padding',\n        type: 'switch',\n        switchLabel: 'Custom',\n        defaultValue: false,\n        info: 'The spacing around UI elements to create more negative space',\n        onChange: (bundle) => presetCustomValue(bundle, choiceId, valueId, options?.paddingStyleMap || paddingStyleMap),\n        on: [\n            {\n                id: valueId,\n                type: 'input',\n                placeholder: PADDING_DEFAULT_PLACEHOLDER,\n                rules: [numericalOrPixelRule, maximumNumericalOrPixelOrAutoRule(500)],\n                onChange: (bundle) => appendUnit(bundle, valueId),\n            },\n        ],\n        off: [getPaddingSlider(choiceId)],\n    };\n};\n"],"names":["getPaddingSlider","id","Padding","getPaddingSettings","options","hasId","valueId","choiceId","bundle","presetCustomValue","paddingStyleMap","PADDING_DEFAULT_PLACEHOLDER","numericalOrPixelRule","maximumNumericalOrPixelOrAutoRule","appendUnit"],"mappings":";;;;AAwBa,MAAAA,IAAmB,CAACC,OAA8B;AAAA,EAC3D,IAAAA;AAAA,EACA,MAAM;AAAA,EACN,cAAcC,EAAQ;AAAA,EACtB,SAAS;AAAA,IACL;AAAA,MACI,OAAOA,EAAQ;AAAA,MACf,OAAO;AAAA,IACX;AAAA,IACA;AAAA,MACI,OAAOA,EAAQ;AAAA,MACf,OAAO;AAAA,IACX;AAAA,IACA;AAAA,MACI,OAAOA,EAAQ;AAAA,MACf,OAAO;AAAA,IACX;AAAA,IACA;AAAA,MACI,OAAOA,EAAQ;AAAA,MACf,OAAO;AAAA,IACX;AAAA,EACJ;AACJ,IAEaC,IAAqB,CAACC,MAAgD;AAC/E,QAAMC,IAAQD,KAAA,QAAAA,EAAS,KAAK,yBAAyBA,KAAA,gBAAAA,EAAS,EAAE,KAAK,yBAC/DE,IAAUF,KAAA,QAAAA,EAAS,KAAK,gBAAgBA,KAAA,gBAAAA,EAAS,EAAE,KAAK,gBACxDG,IAAWH,KAAA,QAAAA,EAAS,KAAK,iBAAiBA,KAAA,gBAAAA,EAAS,EAAE,KAAK;AAEzD,SAAA;AAAA,IACH,IAAIC;AAAA,IACJ,OAAO;AAAA,IACP,MAAM;AAAA,IACN,aAAa;AAAA,IACb,cAAc;AAAA,IACd,MAAM;AAAA,IACN,UAAU,CAACG,MAAWC,EAAkBD,GAAQD,GAAUD,IAASF,KAAA,gBAAAA,EAAS,oBAAmBM,CAAe;AAAA,IAC9G,IAAI;AAAA,MACA;AAAA,QACI,IAAIJ;AAAA,QACJ,MAAM;AAAA,QACN,aAAaK;AAAA,QACb,OAAO,CAACC,GAAsBC,EAAkC,GAAG,CAAC;AAAA,QACpE,UAAU,CAACL,MAAWM,EAAWN,GAAQF,CAAO;AAAA,MACpD;AAAA,IACJ;AAAA,IACA,KAAK,CAACN,EAAiBO,CAAQ,CAAC;AAAA,EAAA;AAExC;"}