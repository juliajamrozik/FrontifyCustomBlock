import "../styles.css.es.js";
import { presetCustomValue as l, MultiInputLayout as I, appendUnit as g, numericalOrPixelRule as r, maximumNumericalOrPixelOrAutoRule as u } from "@frontify/sidebar-settings";
import { PADDING_DEFAULT_PLACEHOLDER as m } from "./defaultValues.es.js";
import { getPaddingSlider as y } from "./padding.es.js";
import { paddingStyleMap as c } from "./types.es.js";
const b = (e) => {
  const t = e != null && e.id ? `hasExtendedCustomPadding_${e == null ? void 0 : e.id}` : "hasExtendedCustomPadding", C = e != null && e.id ? `extendedPaddingValues_${e == null ? void 0 : e.id}` : "extendedPaddingValues", a = e != null && e.id ? `extendedPaddingChoice_${e == null ? void 0 : e.id}` : "extendedPaddingChoice", h = e != null && e.id ? `extendedPaddingTop_${e == null ? void 0 : e.id}` : "extendedPaddingTop", P = e != null && e.id ? `extendedPaddingLeft_${e == null ? void 0 : e.id}` : "extendedPaddingLeft", x = e != null && e.id ? `extendedPaddingRight_${e == null ? void 0 : e.id}` : "extendedPaddingRight", f = e != null && e.id ? `extendedPaddingBottom_${e == null ? void 0 : e.id}` : "extendedPaddingBottom";
  return {
    id: t,
    label: "Padding",
    type: "switch",
    switchLabel: "Custom",
    defaultValue: !1,
    info: "The spacing around UI elements to create more negative space",
    onChange: (d) => {
      l(d, a, h, c), l(d, a, P, c), l(d, a, x, c), l(d, a, f, c);
    },
    on: [
      {
        id: C,
        type: "multiInput",
        layout: I.Spider,
        blocks: [
          {
            id: h,
            type: "input",
            label: "Top",
            placeholder: m,
            onChange: (d) => g(d, h),
            rules: [r, u(500)]
          },
          {
            id: P,
            type: "input",
            label: "Left",
            placeholder: m,
            onChange: (d) => g(d, P),
            rules: [r, u(500)]
          },
          {
            id: x,
            type: "input",
            label: "Right",
            placeholder: m,
            onChange: (d) => g(d, x),
            rules: [r, u(500)]
          },
          {
            id: f,
            type: "input",
            label: "Bottom",
            placeholder: m,
            onChange: (d) => g(d, f),
            rules: [r, u(500)]
          }
        ]
      }
    ],
    off: [y(a)]
  };
};
export {
  b as getPaddingExtendedSettings
};
//# sourceMappingURL=paddingExtended.es.js.map
