import "../styles.css.es.js";
import { appendUnit as m, MultiInputLayout as f, numericalOrPixelRule as y, maximumNumericalOrPixelOrAutoRule as _ } from "@frontify/sidebar-settings";
import { BORDER_COLOR_DEFAULT_VALUE as I, BORDER_WIDTH_DEFAULT_VALUE as D } from "./defaultValues.es.js";
import { BorderStyle as l } from "./types.es.js";
const O = (e) => {
  const r = e != null && e.id ? `hasBorder_${e.id}` : "hasBorder", a = e != null && e.id ? `borderSelection_${e.id}` : "borderSelection", u = e != null && e.id ? `borderStyle_${e.id}` : "borderStyle", d = e != null && e.id ? `borderWidth_${e.id}` : "borderWidth", c = e != null && e.id ? `borderColor_${e.id}` : "borderColor", b = (e == null ? void 0 : e.defaultColor) || I, h = e != null && e.switchLabel ? e.switchLabel : void 0;
  return {
    id: r,
    label: "Border",
    type: "switch",
    switchLabel: h,
    defaultValue: !!(e != null && e.defaultValue),
    on: [
      {
        id: a,
        type: "multiInput",
        onChange: (t) => m(t, d),
        layout: f.Columns,
        lastItemFullWidth: !0,
        blocks: [
          {
            id: u,
            type: "dropdown",
            defaultValue: l.Solid,
            choices: [
              {
                value: l.Solid,
                label: l.Solid
              },
              {
                value: l.Dotted,
                label: l.Dotted
              },
              {
                value: l.Dashed,
                label: l.Dashed
              }
            ]
          },
          {
            id: d,
            type: "input",
            defaultValue: D,
            rules: [y, _(500)],
            placeholder: "e.g. 3px"
          },
          {
            id: c,
            type: "colorInput",
            defaultValue: b
          }
        ]
      }
    ],
    off: []
  };
};
export {
  O as getBorderSettings
};
//# sourceMappingURL=border.es.js.map
