{"version":3,"file":"margin.es.js","sources":["../../src/settings/margin.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport {\n    SettingBlock,\n    appendUnit,\n    maximumNumericalOrPixelOrAutoRule,\n    numericalOrPixelRule,\n    presetCustomValue,\n} from '../';\nimport { MARGIN_DEFAULT_PLACEHOLDER } from './defaultValues';\nimport { Margin, marginStyleMap } from './types';\n\ntype MarginSettingsType = {\n    id?: string;\n    marginStyleMap?: Record<Margin, string>;\n};\n\n/**\n * Returns margin settings: margin switch, margin slider, custom margin input\n *\n * @param {string} id Custom suffix for the setting ids\n * @returns {SettingBlock} Returns margin settings\n */\nexport const getMarginSlider = (id: string): SettingBlock => ({\n    id,\n    type: 'segmentedControls',\n    defaultValue: Margin.None,\n    choices: [\n        {\n            value: Margin.None,\n            label: 'None',\n        },\n        {\n            value: Margin.Small,\n            label: 'S',\n        },\n        {\n            value: Margin.Medium,\n            label: 'M',\n        },\n        {\n            value: Margin.Large,\n            label: 'L',\n        },\n    ],\n});\n\nexport const getMarginSettings = (options?: MarginSettingsType): SettingBlock => {\n    const hasId = options?.id ? `hasCustomMarginValue_${options?.id}` : 'hasCustomMarginValue';\n    const valueId = options?.id ? `marginValue_${options?.id}` : 'marginValue';\n    const choiceId = options?.id ? `marginChoice_${options?.id}` : 'marginChoice';\n\n    return {\n        id: hasId,\n        label: 'Margin',\n        type: 'switch',\n        switchLabel: 'Custom',\n        defaultValue: false,\n        info: 'The spacing around UI elements to create more space',\n        onChange: (bundle) => presetCustomValue(bundle, choiceId, valueId, options?.marginStyleMap || marginStyleMap),\n        on: [\n            {\n                id: valueId,\n                type: 'input',\n                placeholder: MARGIN_DEFAULT_PLACEHOLDER,\n                rules: [numericalOrPixelRule, maximumNumericalOrPixelOrAutoRule(500)],\n                onChange: (bundle) => appendUnit(bundle, valueId),\n            },\n        ],\n        off: [getMarginSlider(choiceId)],\n    };\n};\n"],"names":["getMarginSlider","id","Margin","getMarginSettings","options","hasId","valueId","choiceId","bundle","presetCustomValue","marginStyleMap","MARGIN_DEFAULT_PLACEHOLDER","numericalOrPixelRule","maximumNumericalOrPixelOrAutoRule","appendUnit"],"mappings":";;;;AAuBa,MAAAA,IAAkB,CAACC,OAA8B;AAAA,EAC1D,IAAAA;AAAA,EACA,MAAM;AAAA,EACN,cAAcC,EAAO;AAAA,EACrB,SAAS;AAAA,IACL;AAAA,MACI,OAAOA,EAAO;AAAA,MACd,OAAO;AAAA,IACX;AAAA,IACA;AAAA,MACI,OAAOA,EAAO;AAAA,MACd,OAAO;AAAA,IACX;AAAA,IACA;AAAA,MACI,OAAOA,EAAO;AAAA,MACd,OAAO;AAAA,IACX;AAAA,IACA;AAAA,MACI,OAAOA,EAAO;AAAA,MACd,OAAO;AAAA,IACX;AAAA,EACJ;AACJ,IAEaC,IAAoB,CAACC,MAA+C;AAC7E,QAAMC,IAAQD,KAAA,QAAAA,EAAS,KAAK,wBAAwBA,KAAA,gBAAAA,EAAS,EAAE,KAAK,wBAC9DE,IAAUF,KAAA,QAAAA,EAAS,KAAK,eAAeA,KAAA,gBAAAA,EAAS,EAAE,KAAK,eACvDG,IAAWH,KAAA,QAAAA,EAAS,KAAK,gBAAgBA,KAAA,gBAAAA,EAAS,EAAE,KAAK;AAExD,SAAA;AAAA,IACH,IAAIC;AAAA,IACJ,OAAO;AAAA,IACP,MAAM;AAAA,IACN,aAAa;AAAA,IACb,cAAc;AAAA,IACd,MAAM;AAAA,IACN,UAAU,CAACG,MAAWC,EAAkBD,GAAQD,GAAUD,IAASF,KAAA,gBAAAA,EAAS,mBAAkBM,CAAc;AAAA,IAC5G,IAAI;AAAA,MACA;AAAA,QACI,IAAIJ;AAAA,QACJ,MAAM;AAAA,QACN,aAAaK;AAAA,QACb,OAAO,CAACC,GAAsBC,EAAkC,GAAG,CAAC;AAAA,QACpE,UAAU,CAACL,MAAWM,EAAWN,GAAQF,CAAO;AAAA,MACpD;AAAA,IACJ;AAAA,IACA,KAAK,CAACN,EAAgBO,CAAQ,CAAC;AAAA,EAAA;AAEvC;"}