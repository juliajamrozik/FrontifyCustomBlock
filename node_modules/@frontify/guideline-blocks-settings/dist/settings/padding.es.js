import "../styles.css.es.js";
import { presetCustomValue as m, numericalOrPixelRule as g, maximumNumericalOrPixelOrAutoRule as c, appendUnit as h } from "@frontify/sidebar-settings";
import { PADDING_DEFAULT_PLACEHOLDER as C } from "./defaultValues.es.js";
import { Padding as a, paddingStyleMap as P } from "./types.es.js";
const f = (e) => ({
  id: e,
  type: "segmentedControls",
  defaultValue: a.Small,
  choices: [
    {
      value: a.None,
      label: "None"
    },
    {
      value: a.Small,
      label: "S"
    },
    {
      value: a.Medium,
      label: "M"
    },
    {
      value: a.Large,
      label: "L"
    }
  ]
}), v = (e) => {
  const r = e != null && e.id ? `hasCustomPaddingValue_${e == null ? void 0 : e.id}` : "hasCustomPaddingValue", l = e != null && e.id ? `paddingValue_${e == null ? void 0 : e.id}` : "paddingValue", u = e != null && e.id ? `paddingChoice_${e == null ? void 0 : e.id}` : "paddingChoice";
  return {
    id: r,
    label: "Padding",
    type: "switch",
    switchLabel: "Custom",
    defaultValue: !1,
    info: "The spacing around UI elements to create more negative space",
    onChange: (d) => m(d, u, l, (e == null ? void 0 : e.paddingStyleMap) || P),
    on: [
      {
        id: l,
        type: "input",
        placeholder: C,
        rules: [g, c(500)],
        onChange: (d) => h(d, l)
      }
    ],
    off: [f(u)]
  };
};
export {
  v as getPaddingSettings,
  f as getPaddingSlider
};
//# sourceMappingURL=padding.es.js.map
