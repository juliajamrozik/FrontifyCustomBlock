import "../styles.css.es.js";
import { presetCustomValue as g, numericalOrPixelRule as c, maximumNumericalOrPixelOrAutoRule as d, appendUnit as h } from "@frontify/sidebar-settings";
import { MARGIN_DEFAULT_PLACEHOLDER as M } from "./defaultValues.es.js";
import { Margin as a, marginStyleMap as C } from "./types.es.js";
const f = (e) => ({
  id: e,
  type: "segmentedControls",
  defaultValue: a.None,
  choices: [
    {
      value: a.None,
      label: "None"
    },
    {
      value: a.Small,
      label: "S"
    },
    {
      value: a.Medium,
      label: "M"
    },
    {
      value: a.Large,
      label: "L"
    }
  ]
}), S = (e) => {
  const m = e != null && e.id ? `hasCustomMarginValue_${e == null ? void 0 : e.id}` : "hasCustomMarginValue", l = e != null && e.id ? `marginValue_${e == null ? void 0 : e.id}` : "marginValue", u = e != null && e.id ? `marginChoice_${e == null ? void 0 : e.id}` : "marginChoice";
  return {
    id: m,
    label: "Margin",
    type: "switch",
    switchLabel: "Custom",
    defaultValue: !1,
    info: "The spacing around UI elements to create more space",
    onChange: (r) => g(r, u, l, (e == null ? void 0 : e.marginStyleMap) || C),
    on: [
      {
        id: l,
        type: "input",
        placeholder: M,
        rules: [c, d(500)],
        onChange: (r) => h(r, l)
      }
    ],
    off: [f(u)]
  };
};
export {
  S as getMarginSettings,
  f as getMarginSlider
};
//# sourceMappingURL=margin.es.js.map
