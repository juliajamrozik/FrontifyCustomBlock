{"version":3,"file":"index.cjs.js","sources":["../src/utilities/react/joinClassNames.ts","../src/components/BlockInjectButton/BlockInjectButton.tsx","../src/utilities/color/toShortRgba.ts","../src/utilities/color/isDark.ts","../src/utilities/color/toHex8String.ts","../src/utilities/color/toHexString.ts","../src/utilities/color/toRgbaString.ts","../src/utilities/color/setAlpha.ts","../src/utilities/color/toColorObject.ts","../src/utilities/color/getReadableColor.ts","../src/utilities/moveItemInArray.ts","../src/utilities/react/getBackgroundColorStyles.ts","../src/settings/types.ts","../src/settings/defaultValues.ts","../src/utilities/react/getBorderStyles.ts","../src/utilities/react/getRadiusStyles.ts","../src/components/BlockItemWrapper/constants.ts","../src/components/BlockItemWrapper/Toolbar.tsx","../src/components/BlockItemWrapper/BlockItemWrapper.tsx","../src/components/Attachments/AttachmentItem.tsx","../src/components/Attachments/Attachments.tsx","../src/components/DownloadButton/DownloadButton.tsx","../src/components/RichTextEditor/plugins/LinkPlugin/FloatingLink/InsertLinkModal/useFloatingLinkInsert.ts","../src/components/RichTextEditor/plugins/LinkPlugin/FloatingLink/FloatingLink.tsx","../src/components/RichTextEditor/plugins/LinkPlugin/id.ts","../src/helpers/hasRichTextValue.ts","../src/helpers/convertToRichTextValue.ts","../src/helpers/customCoordinatesGetterFactory.ts","../src/helpers/isDownloadable.ts","../src/helpers/mapColorPalettes.ts","../src/components/RichTextEditor/plugins/LinkPlugin/utils/getUrl.ts","../src/components/RichTextEditor/plugins/LinkPlugin/utils/relativeUrlRegex.ts","../src/helpers/addHttps.ts","../src/components/RichTextEditor/plugins/LinkPlugin/utils/url.ts","../src/components/RichTextEditor/plugins/ButtonPlugin/utils/getUrl.ts","../src/components/RichTextEditor/plugins/ButtonPlugin/utils/createButtonNode.ts","../src/components/RichTextEditor/plugins/ButtonPlugin/components/FloatingButton/floatingButtonStore.ts","../src/components/RichTextEditor/plugins/ButtonPlugin/utils/triggerFloatingButtonEdit.ts","../src/components/RichTextEditor/plugins/ButtonPlugin/components/FloatingButton/useFloatingButtonEdit.ts","../src/components/RichTextEditor/plugins/ButtonPlugin/utils/triggerFloatingButtonInsert.ts","../src/components/RichTextEditor/plugins/ButtonPlugin/components/FloatingButton/useFloatingButtonInsert.ts","../src/components/RichTextEditor/plugins/ButtonPlugin/components/FloatingButton/FloatingButtonEditButton.tsx","../src/components/RichTextEditor/plugins/ButtonPlugin/transforms/insertButton.ts","../src/components/RichTextEditor/plugins/ButtonPlugin/transforms/submitFloatingButton.ts","../src/components/RichTextEditor/plugins/ButtonPlugin/transforms/unwrapButton.ts","../src/components/RichTextEditor/plugins/ButtonPlugin/transforms/upsertButton.ts","../src/components/RichTextEditor/plugins/ButtonPlugin/transforms/upsertButtonText.ts","../src/components/RichTextEditor/plugins/ButtonPlugin/transforms/wrapButton.ts","../src/components/RichTextEditor/plugins/ButtonPlugin/components/FloatingButton/UnlinkButton.tsx","../src/components/RichTextEditor/plugins/ButtonPlugin/components/FloatingButton/FloatingButton.tsx","../src/components/RichTextEditor/plugins/ButtonPlugin/components/FloatingButton/FloatingButtonUrlInput.tsx","../src/components/RichTextEditor/plugins/ButtonPlugin/components/FloatingButton/useFloatingButtonEnter.ts","../src/components/RichTextEditor/plugins/ButtonPlugin/components/FloatingButton/useFloatingButtonEscape.ts","../src/components/RichTextEditor/plugins/ButtonPlugin/components/FloatingButton/useVirtualFloatingButton.ts","../src/components/RichTextEditor/plugins/ButtonPlugin/utils/triggerFloatingButton.ts","../src/components/RichTextEditor/plugins/ButtonPlugin/utils/styles.ts","../src/components/RichTextEditor/plugins/ButtonPlugin/ButtonMarkupElement/ButtonMarkupElementNode.tsx","../src/components/RichTextEditor/plugins/ButtonPlugin/ButtonMarkupElement/index.ts","../src/components/RichTextEditor/plugins/ButtonPlugin/components/ButtonToolbarButton.tsx","../src/components/RichTextEditor/plugins/ButtonPlugin/components/ButtonButton.tsx","../src/components/RichTextEditor/plugins/ButtonPlugin/components/FloatingButton/EditButtonModal/EditModal.tsx","../src/components/RichTextEditor/plugins/shared/LinkSelector/SectionLink.tsx","../src/components/RichTextEditor/plugins/shared/LinkSelector/PageLink.tsx","../src/components/RichTextEditor/plugins/shared/LinkSelector/PageLinks.tsx","../src/components/RichTextEditor/plugins/shared/LinkSelector/DocumentLink.tsx","../src/components/RichTextEditor/plugins/shared/LinkSelector/DocumentLinks.tsx","../src/components/RichTextEditor/plugins/shared/LinkSelector/LinkSelector.tsx","../src/components/RichTextEditor/plugins/LinkPlugin/FloatingLink/InsertLinkModal/InsertModal.tsx","../src/components/RichTextEditor/plugins/ButtonPlugin/utils/getButtonStyle.ts","../src/components/RichTextEditor/plugins/ButtonPlugin/components/FloatingButton/InsertButtonModal/useInsertModal.ts","../src/components/RichTextEditor/plugins/ButtonPlugin/components/FloatingButton/InsertButtonModal/InsertButtonModal.tsx","../src/components/RichTextEditor/plugins/ButtonPlugin/components/FloatingButton/CustomFloatingButton.tsx","../src/components/RichTextEditor/plugins/ButtonPlugin/withButton.ts","../src/components/RichTextEditor/plugins/ButtonPlugin/createButtonPlugin.ts","../src/components/RichTextEditor/plugins/styles.ts","../src/components/RichTextEditor/plugins/LinkPlugin/FloatingLink/EditLinkModal/EditModal.tsx","../src/components/RichTextEditor/plugins/LinkPlugin/FloatingLink/EditLinkModal/useFloatingLinkEdit.ts","../src/components/RichTextEditor/plugins/LinkPlugin/FloatingLink/InsertLinkModal/useInsertModal.ts","../src/components/RichTextEditor/plugins/LinkPlugin/FloatingLink/InsertLinkModal/InsertLinkModal.tsx","../src/components/RichTextEditor/plugins/LinkPlugin/FloatingLink/CustomFloatingLink.tsx","../src/components/RichTextEditor/plugins/LinkPlugin/LinkButton.tsx","../src/components/RichTextEditor/plugins/LinkPlugin/LinkMarkupElement/LinkMarkupElementNode.tsx","../src/components/RichTextEditor/plugins/LinkPlugin/LinkMarkupElement/index.ts","../src/components/RichTextEditor/plugins/LinkPlugin/index.ts","../src/components/RichTextEditor/plugins/TextStylePlugins/custom1Plugin.tsx","../src/components/RichTextEditor/plugins/TextStylePlugins/custom2Plugin.tsx","../src/components/RichTextEditor/plugins/TextStylePlugins/custom3Plugin.tsx","../src/components/RichTextEditor/plugins/TextStylePlugins/heading1Plugin.tsx","../src/components/RichTextEditor/plugins/TextStylePlugins/heading2Plugin.tsx","../src/components/RichTextEditor/plugins/TextStylePlugins/heading3Plugin.tsx","../src/components/RichTextEditor/plugins/TextStylePlugins/heading4Plugin.tsx","../src/components/RichTextEditor/plugins/TextStylePlugins/imageCaptionPlugin.tsx","../src/components/RichTextEditor/plugins/TextStylePlugins/imageTitlePlugin.tsx","../src/components/RichTextEditor/plugins/TextStylePlugins/paragraphPlugin.tsx","../src/components/RichTextEditor/plugins/TextStylePlugins/quotePlugin.tsx","../src/components/RichTextEditor/plugins/TextStylePlugins/helpers.tsx","../src/components/RichTextEditor/serializer/utlis/serializeLeafToHtml.ts","../src/components/RichTextEditor/serializer/utlis/reactCssPropsToCss.ts","../src/components/RichTextEditor/serializer/nodes/button.ts","../src/components/RichTextEditor/serializer/nodes/link.ts","../src/components/RichTextEditor/serializer/nodes/default.ts","../src/components/RichTextEditor/serializer/nodes/checkItemNode.ts","../src/components/RichTextEditor/serializer/nodes/mentionHtmlNode.ts","../src/components/RichTextEditor/serializer/serializeNodesToHtmlRecursive.ts","../src/components/RichTextEditor/serializer/serializeToHtml.ts","../src/components/RichTextEditor/SerializedText.tsx","../src/components/RichTextEditor/RichTextEditor.tsx","../src/components/RichTextEditor/pluginPresets/defaultPluginsWithLinkChooser.tsx","../src/components/RichTextEditor/constants.ts","../src/hooks/useAttachments.ts","../src/hooks/useDndSensors.ts","../src/settings/background.ts","../src/settings/border.ts","../src/settings/borderRadius.ts","../src/settings/borderRadiusExtended.ts","../src/settings/gutter.ts","../src/settings/margin.ts","../src/settings/marginExtended.ts","../src/settings/padding.ts","../src/settings/paddingExtended.ts","../src/settings/securityDownloadable.ts","../src/settings/securityGlobalControl.ts","../src/index.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\n/**\n * Cleans and joins an array of inputs with possible undefined or boolean values.\n *\n * @param {Array} classNames Array of class names\n * @returns Clean string to be used for class name.\n */\nexport const joinClassNames = (classNames: (string | undefined | boolean)[]): string =>\n    classNames.filter(Boolean).join(' ');\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport {\n    ActionMenu,\n    Flyout,\n    IconArrowCircleUp20,\n    IconExclamationMarkTriangle,\n    IconImageStack20,\n    LoadingCircle,\n    MenuItemContentSize,\n} from '@frontify/fondue';\nimport { DragEventHandler, MouseEventHandler, useRef, useState } from 'react';\nimport { joinClassNames } from '../../utilities/react/joinClassNames';\nimport { BlockInjectButtonProps } from './types';\nimport { FileExtension, FileExtensionSets } from '@frontify/app-bridge';\n\nexport const BlockInjectButton = ({\n    onDrop,\n    label,\n    icon,\n    secondaryLabel,\n    isLoading,\n    fillParentContainer,\n    onAssetChooseClick,\n    onUploadClick,\n    withMenu = true,\n    onClick,\n    validFileType,\n    verticalLayout,\n}: BlockInjectButtonProps) => {\n    const [isDraggingOver, setIsDraggingOver] = useState(false);\n    const [menuPosition, setMenuPosition] = useState<[number, number] | undefined>();\n    const buttonRef = useRef<HTMLButtonElement>(null);\n    const [errorMsg, setErrorMsg] = useState<string | undefined>(undefined);\n\n    const handleDrop: DragEventHandler<HTMLButtonElement> = (event) => {\n        event.preventDefault();\n        setIsDraggingOver(false);\n        if (!isValidAsset(event.dataTransfer.files)) {\n            setErrorMsg('Invalid');\n            setTimeout(() => {\n                setErrorMsg(undefined);\n            }, 1000);\n            return;\n        }\n        onDrop?.(event.dataTransfer.files);\n    };\n\n    const isValidAsset = (files: FileList) => {\n        if (!validFileType) {\n            return true;\n        }\n        for (let i = 0; i < files.length; i++) {\n            const droppedFileExtension = (files[i].name.split('.').pop() ?? '') as FileExtension;\n            if (!FileExtensionSets[validFileType].includes(droppedFileExtension)) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    const openMenu: MouseEventHandler<HTMLButtonElement> = (event) => {\n        if (!buttonRef.current || isLoading) {\n            return;\n        }\n        const { left, top } = buttonRef.current.getBoundingClientRect();\n        const XInsideComponent = event.clientX - left;\n        const YInsideComponent = event.clientY - top;\n        setMenuPosition([XInsideComponent, YInsideComponent]);\n    };\n\n    return (\n        <button\n            ref={buttonRef}\n            data-test-id=\"block-inject-button\"\n            className={joinClassNames([\n                'tw-font-body tw-relative tw-text-sm tw-leading-4 tw-border tw-flex tw-items-center tw-justify-center tw-cursor-pointer tw-gap-3 tw-w-full first:tw-rounded-tl last:tw-rounded-br',\n                verticalLayout\n                    ? '[&:not(:first-child)]:tw-border-t-0 first:tw-rounded-tr last:tw-rounded-bl'\n                    : '[&:not(:first-child)]:tw-border-l-0  first:tw-rounded-bl last:tw-rounded-tr',\n                fillParentContainer ? 'tw-h-full' : 'tw-h-[72px]',\n                isDraggingOver && !isLoading ? 'tw-border-dashed' : 'tw-border-solid',\n                menuPosition && 'tw-bg-blank-state-pressed-inverse',\n                isDraggingOver && 'tw-bg-blank-state-weak-inverse',\n                errorMsg ? '!tw-border-red-50 !tw-cursor-not-allowed' : ' tw-border-blank-state-line',\n                isLoading || menuPosition || isDraggingOver || errorMsg\n                    ? ''\n                    : 'tw-text-text-weak hover:tw-text-blank-state-hover hover:tw-bg-blank-state-hover-inverse hover:tw-border-blank-state-line-hover active:tw-text-blank-state-pressed active:tw-bg-blank-state-pressed-inverse active:tw-border-blank-state-line-hover',\n                (isDraggingOver || !!menuPosition) && !errorMsg\n                    ? '[&>*]:tw-pointer-events-none tw-border-blank-state-line-hover'\n                    : 'tw-bg-blank-state-shaded-inverse tw-text-blank-state-shaded',\n            ])}\n            onDragEnter={\n                onDrop\n                    ? (event) => {\n                          setIsDraggingOver(true);\n                          // is now only used for images, can be adapted if needed\n                          if (validFileType === 'Images') {\n                              for (const item of Array.from(event.dataTransfer.items)) {\n                                  if (!item?.type?.startsWith('image/')) {\n                                      setErrorMsg('Invalid');\n                                  } else {\n                                      setErrorMsg(undefined);\n                                  }\n                              }\n                          }\n                      }\n                    : undefined\n            }\n            onDragLeave={\n                onDrop\n                    ? () => {\n                          setIsDraggingOver(false);\n                          setErrorMsg(undefined);\n                      }\n                    : undefined\n            }\n            onDrop={onDrop ? handleDrop : undefined}\n            onClick={(event) => {\n                withMenu && openMenu(event);\n                onClick?.();\n            }}\n        >\n            {isLoading ? (\n                <LoadingCircle />\n            ) : // eslint-disable-next-line unicorn/no-nested-ternary\n            errorMsg ? (\n                <div className=\" tw-flex tw-items-center tw-justify-center tw-text-red-60 tw-font-medium\">\n                    <IconExclamationMarkTriangle />\n                    {errorMsg}\n                </div>\n            ) : (\n                <>\n                    {icon && <div>{icon}</div>}\n                    {(label || secondaryLabel) && (\n                        <div className=\"tw-flex tw-flex-col tw-items-start\">\n                            {label && <div className=\"tw-font-medium\">{label}</div>}\n                            {secondaryLabel && <div className=\"tw-font-normal\">{secondaryLabel}</div>}\n                        </div>\n                    )}\n                </>\n            )}\n            {menuPosition && (\n                <div\n                    className=\"tw-absolute tw-left-0 tw-top-full tw-z-20\"\n                    style={{\n                        left: menuPosition[0],\n                        top: menuPosition[1],\n                    }}\n                >\n                    <Flyout\n                        onOpenChange={(isOpen) => !isOpen && setMenuPosition(undefined)}\n                        isOpen={true}\n                        fitContent\n                        hug={false}\n                        legacyFooter={false}\n                        trigger={<div />}\n                    >\n                        <ActionMenu\n                            menuBlocks={[\n                                {\n                                    id: 'menu',\n                                    menuItems: [\n                                        ...(onUploadClick\n                                            ? [\n                                                  {\n                                                      id: 'upload',\n                                                      size: MenuItemContentSize.XSmall,\n                                                      title: 'Upload asset',\n                                                      onClick: () => {\n                                                          onUploadClick();\n                                                          setMenuPosition(undefined);\n                                                      },\n\n                                                      initialValue: true,\n                                                      decorator: (\n                                                          <div className=\"tw-mr-2\">\n                                                              <IconArrowCircleUp20 />\n                                                          </div>\n                                                      ),\n                                                  },\n                                              ]\n                                            : []),\n                                        ...(onAssetChooseClick\n                                            ? [\n                                                  {\n                                                      id: 'asset',\n                                                      size: MenuItemContentSize.XSmall,\n                                                      title: 'Browse asset',\n                                                      onClick: () => {\n                                                          onAssetChooseClick();\n                                                          setMenuPosition(undefined);\n                                                      },\n                                                      initialValue: true,\n                                                      decorator: (\n                                                          <div className=\"tw-mr-2\">\n                                                              <IconImageStack20 />\n                                                          </div>\n                                                      ),\n                                                  },\n                                              ]\n                                            : []),\n                                    ],\n                                },\n                            ]}\n                        />\n                    </Flyout>\n                </div>\n            )}\n        </button>\n    );\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { Color } from '@frontify/fondue';\n\ntype ShortNotationColor = {\n    r: number;\n    g: number;\n    b: number;\n    a?: number;\n};\n\n/**\n * Maps color object from long to short rgba notation.\n *\n * @param {Object} Color object\n * @returns {Object} ShortNotationColor object\n */\n\nexport const toShortRgba = (color: unknown): ShortNotationColor => {\n    const isRgbaLongFormat = (value: Color) => {\n        const requiredKeys = ['red', 'green', 'blue'];\n        return typeof value === 'object' && requiredKeys.every((i) => value.hasOwnProperty(i));\n    };\n\n    const mapToShortFormat = (value: Color): ShortNotationColor => {\n        const alpha = typeof value.alpha === 'number' ? value.alpha : 1;\n        return { r: value.red, g: value.green, b: value.blue, a: alpha };\n    };\n\n    if (isRgbaLongFormat(color as Color)) {\n        return mapToShortFormat(color as Color);\n    }\n\n    return color as ShortNotationColor;\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport tinycolor, { ColorInput } from '@ctrl/tinycolor';\nimport { toShortRgba } from './toShortRgba';\nimport { Color } from '@frontify/sidebar-settings';\n\n/**\n * Calculates if text should be in a light color depending on color (e.g. background-color)\n *\n * @param {Object} value Object of RGBA values\n * @param {Number|undefined} threshold Threshold for the brightness\n * @returns {Boolean} Return if the color is dark\n */\n\nconst isRgbaLongFormat = (value: unknown): value is Color => {\n    const requiredKeys = ['red', 'green', 'blue'];\n    return typeof value === 'object' && requiredKeys.every((i) => value?.hasOwnProperty(i));\n};\n\nexport const isDark = (color: unknown, threshold?: number): boolean => {\n    const inputColor = isRgbaLongFormat(color) ? toShortRgba(color) : (color as ColorInput);\n    const parsedColor = tinycolor(inputColor);\n\n    if (threshold) {\n        return parsedColor.getBrightness() < threshold;\n    }\n\n    return parsedColor.isDark() || (parsedColor.getAlpha() > 0.25 && parsedColor.getAlpha() < 1);\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { Color } from '@frontify/fondue';\nimport tinycolor from '@ctrl/tinycolor';\nimport { toShortRgba } from './toShortRgba';\n\n/**\n * Maps color object of rgba values to hex alpha string.\n *\n * @param {Object} Color object\n * @returns {String} To be used as css value.\n */\n\nexport const toHex8String = (color: Color): string => tinycolor(toShortRgba(color)).toHex8String();\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { Color } from '@frontify/fondue';\nimport tinycolor from '@ctrl/tinycolor';\nimport { toShortRgba } from './toShortRgba';\n\n/**\n * Maps color object of rgba values to hex alpha string.\n */\nexport const toHexString = (color: Color): string => tinycolor(toShortRgba(color)).toHexString();\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { Color } from '@frontify/fondue';\nimport tinycolor from '@ctrl/tinycolor';\nimport { toShortRgba } from './toShortRgba';\n\n/**\n * Maps color object of rgba values to rgba string.\n *\n * @param {Object} Color object\n * @returns {String} To be used as css value.\n */\n\nexport const toRgbaString = (color: Color): string => tinycolor(toShortRgba(color)).toRgbString();\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport tinycolor from '@ctrl/tinycolor';\n\n/**\n * Sets alpha value and returns rgba string.\n *\n * @param {string} color Rgb or hex string.\n * @returns {String} To be used as css value.\n */\n\nexport const setAlpha = (alpha: number, color?: string): string => {\n    return tinycolor(color).setAlpha(alpha).toRgbString();\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { Color } from '@frontify/fondue';\nimport tinycolor from '@ctrl/tinycolor';\n\n/**\n * Maps color strings to color objects.\n *\n * @param {String} String representing color\n * @returns {Color} Color object\n */\n\nexport const toColorObject = (colorString: string): Color => {\n    const { r, g, b, a } = tinycolor(colorString);\n    return { red: r, green: g, blue: b, alpha: a };\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport tinycolor, { ColorInput, readability } from '@ctrl/tinycolor';\nimport { toShortRgba } from './toShortRgba';\nimport { Color } from '@frontify/sidebar-settings';\n\n/**\n * Returns darkened text color for a given background color, so that it is readable and has enough contrast (above 4.5)\n *\n * @param {Object} textColor Object of RGBA values\n * @param {Object} backgroundColor Object of RGBA values\n * @returns {string} To be used as css value\n */\n\nconst isRgbaLongFormat = (value: unknown): value is Color => {\n    const requiredKeys = ['red', 'green', 'blue'];\n    return typeof value === 'object' && requiredKeys.every((i) => value?.hasOwnProperty(i));\n};\n\nexport const getReadableColor = (textColor: unknown, backgroundColor: unknown): string => {\n    const inputTextColor = isRgbaLongFormat(textColor) ? toShortRgba(textColor) : (textColor as ColorInput);\n    const inputBackgroundColor = isRgbaLongFormat(backgroundColor)\n        ? toShortRgba(backgroundColor)\n        : (backgroundColor as ColorInput);\n    let parsedTextColor = tinycolor(inputTextColor);\n    const parsedBackgroundColor = tinycolor(inputBackgroundColor);\n\n    //darken the text color until readability is good\n    while (readability(parsedTextColor, parsedBackgroundColor) < 4.5) {\n        parsedTextColor = parsedTextColor.darken(1);\n    }\n\n    return parsedTextColor.toRgbString();\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\n/**\n * Moves an item from the 'from' position to the 'to' position and updates the array\n *\n * @param {Array} array Array of items\n * @param {Number} from Initial index of the item\n * @param {Number} to New index of the item\n * @returns {Array} New array with the item moved to the new position\n */\nexport const moveItemInArray = <T>(array: T[], from: number, to: number): T[] => {\n    const newArray = [...array];\n    const toIndex = to < 0 ? newArray.length + to : to;\n\n    if (toIndex >= 0 && toIndex < newArray.length) {\n        const slice = newArray.splice(from, 1)[0];\n        newArray.splice(toIndex, 0, slice);\n    }\n\n    return newArray;\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport type { CSSProperties } from 'react';\nimport type { Color } from '@frontify/fondue';\n\nimport { toRgbaString } from '../color';\n\nexport const getBackgroundColorStyles = (backgroundColor: Color): CSSProperties => ({\n    backgroundColor: toRgbaString(backgroundColor),\n});\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { Color } from '@frontify/sidebar-settings';\n\nexport enum BorderStyle {\n    Solid = 'Solid',\n    Dashed = 'Dashed',\n    Dotted = 'Dotted',\n}\n\nexport const borderStyleMap: Record<BorderStyle, string> = {\n    [BorderStyle.Solid]: 'solid',\n    [BorderStyle.Dotted]: 'dotted',\n    [BorderStyle.Dashed]: 'dashed',\n};\n\nexport enum Radius {\n    None = 'None',\n    Small = 'Small',\n    Medium = 'Medium',\n    Large = 'Large',\n}\n\nexport const radiusStyleMap: Record<Radius, string> = {\n    [Radius.None]: '0px',\n    [Radius.Small]: '2px',\n    [Radius.Medium]: '4px',\n    [Radius.Large]: '12px',\n};\n\nexport enum Padding {\n    None = 'None',\n    Small = 'Small',\n    Medium = 'Medium',\n    Large = 'Large',\n}\n\nexport const paddingStyleMap: Record<Padding, string> = {\n    [Padding.None]: '0px',\n    [Padding.Small]: '24px',\n    [Padding.Medium]: '36px',\n    [Padding.Large]: '60px',\n};\n\nexport type PaddingSettings = {\n    paddingChoice: Padding;\n    hasCustomPaddingValue: boolean;\n    paddingValue: string;\n};\n\nexport type PaddingExtendedSettings = {\n    hasExtendedCustomPadding: boolean;\n    extendedPaddingChoice: Padding;\n    extendedPaddingTop: string;\n    extendedPaddingRight: string;\n    extendedPaddingBottom: string;\n    extendedPaddingLeft: string;\n};\n\nexport type RadiusExtendedSettings = {\n    hasExtendedCustomRadius: boolean;\n    extendedRadiusChoice: Radius;\n    extendedRadiusTopLeft: string;\n    extendedRadiusTopRight: string;\n    extendedRadiusBottomLeft: string;\n    extendedRadiusBottomRight: string;\n};\n\nexport type BorderSettings = {\n    hasBorder: boolean;\n    borderStyle: BorderStyle;\n    borderWidth: string;\n    borderColor: Color;\n};\n\nexport type RadiusSettings = {\n    hasRadius: boolean;\n    radiusValue: string;\n    radiusChoice: Radius;\n};\n\nexport enum Margin {\n    None = 'None',\n    Small = 'Small',\n    Medium = 'Medium',\n    Large = 'Large',\n}\n\nexport const marginStyleMap: Record<Margin, string> = {\n    [Margin.None]: '0px',\n    [Margin.Small]: '24px',\n    [Margin.Medium]: '36px',\n    [Margin.Large]: '60px',\n};\n\nexport type MarginSettings = {\n    marginChoice: Margin;\n    hasCustomMarginValue: boolean;\n    marginValue: string;\n};\n\nexport type MarginExtendedSettings = {\n    hasExtendedCustomMargin: boolean;\n    extendedMarginChoice: Margin;\n    extendedMarginTop: string;\n    extendedMarginRight: string;\n    extendedMarginBottom: string;\n    extendedMarginLeft: string;\n};\n\nexport enum Security {\n    Global = 'Global',\n    Custom = 'Custom',\n}\n\nexport enum GutterSpacing {\n    Auto = 'Auto',\n    S = 'S',\n    M = 'M',\n    L = 'L',\n}\n\nexport const gutterSpacingStyleMap: Record<GutterSpacing, string> = {\n    [GutterSpacing.Auto]: '4px',\n    [GutterSpacing.S]: '10px',\n    [GutterSpacing.M]: '30px',\n    [GutterSpacing.L]: '50px',\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nexport const BACKGROUND_COLOR_DEFAULT_VALUE = {\n    red: 241,\n    green: 241,\n    blue: 241,\n    alpha: 1,\n};\n\nexport const BORDER_COLOR_DEFAULT_VALUE = {\n    red: 234,\n    green: 235,\n    blue: 235,\n    alpha: 1,\n};\n\nexport const BORDER_WIDTH_DEFAULT_VALUE = '1px';\n\nexport const PADDING_DEFAULT_PLACEHOLDER = '24px';\n\nexport const MARGIN_DEFAULT_PLACEHOLDER = '24px';\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport type { CSSProperties } from 'react';\nimport type { Color } from '@frontify/fondue';\n\nimport { BorderStyle, borderStyleMap } from '../../settings/types';\nimport { BORDER_COLOR_DEFAULT_VALUE } from '../../settings/defaultValues';\nimport { toRgbaString } from '../color';\n\nexport const getBorderStyles = (\n    style = BorderStyle.Solid,\n    borderWidth = '1px',\n    color = BORDER_COLOR_DEFAULT_VALUE as Color,\n): CSSProperties => {\n    return {\n        borderStyle: borderStyleMap[style],\n        borderWidth,\n        borderColor: toRgbaString(color),\n    };\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport type { CSSProperties } from 'react';\nimport { Radius, radiusStyleMap } from '../../settings/types';\n\nexport const getRadiusStyles = (radiusChoice: Radius, hasRadius = false, radiusValue?: number): CSSProperties => ({\n    borderRadius: hasRadius ? radiusValue : radiusStyleMap[radiusChoice],\n});\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nexport const DEFAULT_DRAG_TOOLTIP = 'Drag or press ↵ to move';\nexport const DEFAULT_DRAGGING_TOOLTIP = 'Move with ↑↓←→ and confirm with ↵';\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport {\n    ActionMenu,\n    Flyout,\n    IconDotsHorizontal16,\n    MenuItemContentSize,\n    Tooltip,\n    TooltipPosition,\n} from '@frontify/fondue';\nimport { ToolbarProps } from './types';\nimport { joinClassNames } from '../../utilities';\nimport { DEFAULT_DRAGGING_TOOLTIP, DEFAULT_DRAG_TOOLTIP } from './constants';\n\nexport const Toolbar = ({\n    items,\n    flyoutItems,\n    isFlyoutOpen,\n    setIsFlyoutOpen,\n    isDragging,\n    isFlyoutDisabled,\n}: ToolbarProps) => {\n    return (\n        <div data-test-id=\"block-item-wrapper-toolbar\" className=\"tw-flex tw-justify-end\">\n            <div className=\"tw-bg-white tw-text-box-selected-inverse tw-pointer-events-auto tw-flex tw-flex-shrink-0 tw-gap-[2px] tw-px-[1px] tw-spacing tw-items-center tw-h-7 tw-self-start tw-border tw-border-box-selected-inverse tw-rounded\">\n                {items.map((item, i) =>\n                    'draggableProps' in item ? (\n                        <Tooltip\n                            key={i}\n                            withArrow\n                            hoverDelay={0}\n                            enterDelay={300}\n                            open={isDragging}\n                            position={TooltipPosition.Top}\n                            content={\n                                <div>\n                                    {isDragging ? DEFAULT_DRAGGING_TOOLTIP : item.tooltip ?? DEFAULT_DRAG_TOOLTIP}\n                                </div>\n                            }\n                            triggerElement={\n                                <button\n                                    ref={item.setActivatorNodeRef}\n                                    data-test-id=\"block-item-wrapper-toolbar-btn\"\n                                    {...item.draggableProps}\n                                    className={joinClassNames([\n                                        'tw-bg-base tw-inline-flex tw-items-center tw-justify-center tw-w-6 tw-h-6 tw-rounded-sm',\n                                        isDragging\n                                            ? 'tw-cursor-grabbing tw-bg-box-selected-pressed'\n                                            : 'tw-cursor-grab hover:tw-bg-box-selected-hover',\n                                    ])}\n                                >\n                                    {item.icon}\n                                </button>\n                            }\n                        />\n                    ) : (\n                        <Tooltip\n                            key={i}\n                            withArrow\n                            enterDelay={300}\n                            hoverDelay={0}\n                            disabled={isDragging}\n                            position={TooltipPosition.Top}\n                            content={<div>{item.tooltip ?? ''}</div>}\n                            triggerElement={\n                                <button\n                                    data-test-id=\"block-item-wrapper-toolbar-btn\"\n                                    onClick={item.onClick}\n                                    className=\"tw-bg-base hover:tw-bg-box-selected-hover active:tw-bg-box-selected-pressed tw-cursor-pointer tw-inline-flex tw-items-center tw-justify-center tw-w-6 tw-h-6 tw-rounded-sm\"\n                                >\n                                    {item.icon}\n                                </button>\n                            }\n                        />\n                    ),\n                )}\n                {flyoutItems.length > 0 && (\n                    <div className=\"tw-flex tw-flex-shrink-0 tw-flex-1 tw-h-6\">\n                        <Flyout\n                            isOpen={isFlyoutOpen && !isDragging}\n                            isTriggerDisabled={isFlyoutDisabled}\n                            legacyFooter={false}\n                            fitContent\n                            hug={false}\n                            onOpenChange={setIsFlyoutOpen}\n                            trigger={\n                                <Tooltip\n                                    withArrow\n                                    hoverDelay={0}\n                                    enterDelay={300}\n                                    disabled={isDragging}\n                                    position={TooltipPosition.Top}\n                                    content={<div>Options</div>}\n                                    triggerElement={\n                                        <div\n                                            data-test-id=\"block-item-wrapper-toolbar-flyout\"\n                                            className=\"tw-bg-base hover:tw-bg-box-selected-hover active:tw-bg-box-selected-pressed tw-cursor-pointer tw-inline-flex  tw-items-center tw-justify-center tw-w-6 tw-h-6 tw-rounded-sm\"\n                                        >\n                                            <IconDotsHorizontal16 />\n                                        </div>\n                                    }\n                                />\n                            }\n                        >\n                            <ActionMenu\n                                menuBlocks={flyoutItems.map((block, blockIndex) => ({\n                                    id: blockIndex.toString(),\n                                    menuItems: block.map((item, itemIndex) => ({\n                                        id: blockIndex.toString() + itemIndex.toString(),\n                                        size: MenuItemContentSize.XSmall,\n                                        title: item.title,\n                                        style: item.style,\n                                        onClick: () => {\n                                            setIsFlyoutOpen(false);\n                                            item.onClick();\n                                        },\n                                        initialValue: true,\n                                        decorator: <div className=\"tw-mr-2\">{item.icon}</div>,\n                                    })),\n                                }))}\n                            />\n                        </Flyout>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { PropsWithChildren, useEffect, useRef, useState } from 'react';\nimport { joinClassNames } from '../../utilities';\nimport { Toolbar } from './Toolbar';\nimport { BlockItemWrapperProps, ToolbarItem } from './types';\n\nexport const BlockItemWrapper = ({\n    children,\n    toolbarFlyoutItems,\n    toolbarItems,\n    shouldHideWrapper,\n    shouldHideComponent = false,\n    isDragging,\n    shouldFillContainer,\n    outlineOffset = 2,\n    shouldBeShown = false,\n}: PropsWithChildren<BlockItemWrapperProps>) => {\n    const [isFlyoutOpen, setIsFlyoutOpen] = useState(shouldBeShown);\n    const [isFlyoutDisabled, setIsFlyoutDisabled] = useState(false);\n    const wrapperRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (!isFlyoutOpen) {\n            // This prevents automatic refocusing of the trigger element\n            setIsFlyoutDisabled(true);\n        }\n    }, [isFlyoutOpen]);\n\n    if (shouldHideWrapper) {\n        return children;\n    }\n\n    const items = toolbarItems?.filter((item): item is ToolbarItem => item !== undefined);\n\n    return (\n        <div\n            ref={wrapperRef}\n            onFocus={() => setIsFlyoutDisabled(false)}\n            onPointerEnter={() => setIsFlyoutDisabled(false)}\n            data-test-id=\"block-item-wrapper\"\n            style={{\n                outlineOffset,\n            }}\n            className={joinClassNames([\n                'tw-relative tw-group tw-outline-1 tw-outline-box-selected-inverse',\n                shouldFillContainer && 'tw-flex-1 tw-h-full tw-w-full',\n                'hover:tw-outline focus-within:tw-outline',\n                (isFlyoutOpen || shouldBeShown) && 'tw-outline',\n                shouldHideComponent && 'tw-opacity-0',\n            ])}\n        >\n            <div\n                style={{\n                    right: -1 - outlineOffset,\n                    bottom: `calc(100% - ${2 + outlineOffset}px)`,\n                }}\n                className={joinClassNames([\n                    'tw-pointer-events-none tw-absolute tw-bottom-[calc(100%-4px)] tw-right-[-3px] tw-w-full tw-opacity-0 tw-z-10',\n                    'group-hover:tw-opacity-100 group-focus:tw-opacity-100 focus-within:tw-opacity-100',\n                    (isFlyoutOpen || shouldBeShown) && 'tw-opacity-100',\n                ])}\n            >\n                <Toolbar\n                    isFlyoutOpen={isFlyoutOpen}\n                    isFlyoutDisabled={isFlyoutDisabled}\n                    setIsFlyoutOpen={setIsFlyoutOpen}\n                    flyoutItems={toolbarFlyoutItems}\n                    items={items}\n                    isDragging={isDragging}\n                />\n            </div>\n            {children}\n        </div>\n    );\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { MutableRefObject, forwardRef, useEffect, useState } from 'react';\nimport { Asset, useAssetUpload, useFileInput } from '@frontify/app-bridge';\nimport { useSortable } from '@dnd-kit/sortable';\nimport { useFocusRing } from '@react-aria/focus';\n\nimport {\n    ActionMenu,\n    Button,\n    ButtonEmphasis,\n    FOCUS_STYLE,\n    Flyout,\n    FlyoutPlacement,\n    IconArrowCircleUp20,\n    IconDocument24,\n    IconGrabHandle20,\n    IconImage24,\n    IconImageStack20,\n    IconMusicNote24,\n    IconPen20,\n    IconPlayFrame24,\n    IconTrashBin20,\n    LoadingCircle,\n    LoadingCircleSize,\n    MenuItemContentSize,\n    MenuItemStyle,\n} from '@frontify/fondue';\nimport { AttachmentItemProps, SortableAttachmentItemProps } from './types';\nimport { joinClassNames } from '../../utilities';\n\nconst getDecorator = (type: string) => {\n    if (type === 'IMAGE') {\n        return <IconImage24 />;\n    } else if (type === 'VIDEO') {\n        return <IconPlayFrame24 />;\n    } else if (type === 'AUDIO') {\n        return <IconMusicNote24 />;\n    } else {\n        return <IconDocument24 />;\n    }\n};\n\nexport const AttachmentItem = forwardRef<HTMLButtonElement, AttachmentItemProps>(\n    (\n        {\n            item,\n            isEditing,\n            draggableProps,\n            transformStyle,\n            isDragging,\n            isOverlay,\n            isLoading,\n            onDelete,\n            onReplaceWithBrowse,\n            onReplaceWithUpload,\n        },\n        ref,\n    ) => {\n        const [selectedAsset, setSelectedAsset] = useState<Asset | undefined>();\n        const [openFileDialog, { selectedFiles }] = useFileInput({ multiple: true, accept: 'image/*' });\n        const [uploadFile, { results: uploadResults, doneAll }] = useAssetUpload();\n        const { focusProps, isFocusVisible } = useFocusRing();\n\n        useEffect(() => {\n            if (selectedFiles) {\n                uploadFile(selectedFiles[0]);\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [selectedFiles]);\n\n        useEffect(() => {\n            if (doneAll) {\n                onReplaceWithUpload(uploadResults[0]);\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [doneAll, uploadResults]);\n\n        const download = (url: string, filename: string) => {\n            fetch(url).then((response) => {\n                response.blob().then((blob) => {\n                    const url = URL.createObjectURL(blob);\n                    const a = document.createElement('a');\n                    a.href = url;\n                    a.download = filename;\n                    a.click();\n                });\n            });\n        };\n\n        const showLoadingCircle = isLoading || (selectedFiles && !doneAll);\n\n        return (\n            <button\n                aria-label=\"Download attachment\"\n                data-test-id=\"attachments-item\"\n                onClick={() => download(item.genericUrl, item.fileName)}\n                ref={ref}\n                style={{\n                    ...transformStyle,\n                    opacity: isDragging && !isOverlay ? 0.3 : 1,\n                    fontFamily: 'var(-f-theme-settings-body-font-family)',\n                }}\n                className={joinClassNames([\n                    'tw-cursor-pointer tw-text-left tw-w-full tw-relative tw-flex tw-gap-3 tw-px-5 tw-py-3 tw-items-center tw-group hover:tw-bg-box-neutral-hover',\n                    isDragging ? 'tw-bg-box-neutral-hover' : '',\n                ])}\n            >\n                <div className=\"tw-text-text-weak group-hover:tw-text-box-neutral-inverse-hover\">\n                    {showLoadingCircle ? (\n                        <LoadingCircle size={LoadingCircleSize.Small} />\n                    ) : (\n                        getDecorator(item.objectType)\n                    )}\n                </div>\n                <div className=\"tw-text-s tw-flex-1 tw-min-w-0\">\n                    <div className=\"tw-whitespace-nowrap tw-overflow-hidden tw-text-ellipsis tw-font-bold tw-text-text-weak group-hover:tw-text-box-neutral-inverse-hover\">\n                        {item.title}\n                    </div>\n                    <div className=\"tw-text-text-weak\">{`${item.fileSizeHumanReadable} - ${item.extension}`}</div>\n                </div>\n                {isEditing && (\n                    <div\n                        data-test-id=\"attachments-actionbar\"\n                        className={joinClassNames([\n                            'tw-flex tw-gap-0.5 group-focus:tw-opacity-100 focus-visible:tw-opacity-100 focus-within:tw-opacity-100 group-hover:tw-opacity-100',\n                            isOverlay || selectedAsset?.id === item.id ? 'tw-opacity-100' : 'tw-opacity-0',\n                        ])}\n                    >\n                        <button\n                            {...focusProps}\n                            {...draggableProps}\n                            aria-label=\"Drag attachment\"\n                            className={joinClassNames([\n                                ' tw-border-button-border tw-bg-button-background active:tw-bg-button-background-pressed tw-group tw-border tw-box-box tw-relative tw-flex tw-items-center tw-justify-center tw-outline-none tw-font-medium tw-rounded tw-h-9 tw-w-9 ',\n                                isDragging || isOverlay\n                                    ? 'tw-cursor-grabbing tw-bg-button-background-pressed hover:tw-bg-button-background-pressed'\n                                    : 'tw-cursor-grab hover:tw-bg-button-background-hover',\n                                isFocusVisible && FOCUS_STYLE,\n                                isFocusVisible && 'tw-z-[2]',\n                            ])}\n                        >\n                            <IconGrabHandle20 />\n                        </button>\n                        <div data-test-id=\"attachments-actionbar-flyout\">\n                            <Flyout\n                                placement={FlyoutPlacement.Right}\n                                isOpen={selectedAsset?.id === item.id}\n                                fitContent\n                                legacyFooter={false}\n                                onOpenChange={(isOpen) => setSelectedAsset(isOpen ? item : undefined)}\n                                trigger={(_, ref) => (\n                                    <Button\n                                        ref={ref as MutableRefObject<HTMLButtonElement>}\n                                        icon={<IconPen20 />}\n                                        emphasis={ButtonEmphasis.Default}\n                                        onClick={() => setSelectedAsset(item)}\n                                    />\n                                )}\n                            >\n                                <ActionMenu\n                                    menuBlocks={[\n                                        {\n                                            id: 'menu',\n                                            menuItems: [\n                                                {\n                                                    id: 'upload',\n                                                    size: MenuItemContentSize.XSmall,\n                                                    title: 'Replace with upload',\n                                                    onClick: () => {\n                                                        openFileDialog();\n                                                        setSelectedAsset(undefined);\n                                                    },\n\n                                                    initialValue: true,\n                                                    decorator: (\n                                                        <div className=\"tw-mr-2\">\n                                                            <IconArrowCircleUp20 />\n                                                        </div>\n                                                    ),\n                                                },\n\n                                                {\n                                                    id: 'asset',\n                                                    size: MenuItemContentSize.XSmall,\n                                                    title: 'Replace with asset',\n                                                    onClick: () => {\n                                                        onReplaceWithBrowse();\n                                                        setSelectedAsset(undefined);\n                                                    },\n                                                    initialValue: true,\n                                                    decorator: (\n                                                        <div className=\"tw-mr-2\">\n                                                            <IconImageStack20 />\n                                                        </div>\n                                                    ),\n                                                },\n                                            ],\n                                        },\n                                        {\n                                            id: 'menu-delete',\n                                            menuItems: [\n                                                {\n                                                    id: 'delete',\n                                                    size: MenuItemContentSize.XSmall,\n                                                    title: 'Delete',\n                                                    style: MenuItemStyle.Danger,\n                                                    onClick: () => {\n                                                        onDelete();\n                                                        setSelectedAsset(undefined);\n                                                    },\n\n                                                    initialValue: true,\n                                                    decorator: (\n                                                        <div className=\"tw-mr-2\">\n                                                            <IconTrashBin20 />\n                                                        </div>\n                                                    ),\n                                                },\n                                            ],\n                                        },\n                                    ]}\n                                />\n                            </Flyout>\n                        </div>\n                    </div>\n                )}\n            </button>\n        );\n    },\n);\n\nAttachmentItem.displayName = 'AttachmentItem';\n\nexport const SortableAttachmentItem = (props: SortableAttachmentItemProps) => {\n    const { attributes, listeners, setNodeRef, transform, transition, isDragging } = useSortable({\n        id: props.item.id,\n    });\n\n    const transformStyle = {\n        transform: transform ? `translate(${transform.x}px, ${transform.y}px)` : '',\n        transition,\n        zIndex: isDragging ? 2 : 1,\n    };\n\n    const draggableProps = { ...attributes, ...listeners };\n\n    return (\n        <AttachmentItem\n            ref={setNodeRef}\n            isDragging={isDragging}\n            transformStyle={transformStyle}\n            draggableProps={draggableProps}\n            {...props}\n        />\n    );\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { useEffect, useState } from 'react';\nimport {\n    DndContext,\n    DragEndEvent,\n    DragOverlay,\n    DragStartEvent,\n    KeyboardSensor,\n    PointerSensor,\n    closestCenter,\n    useSensor,\n    useSensors,\n} from '@dnd-kit/core';\nimport { SortableContext, arrayMove, rectSortingStrategy } from '@dnd-kit/sortable';\nimport { Asset, useAssetUpload, useEditorState } from '@frontify/app-bridge';\nimport {\n    AssetInput,\n    AssetInputSize,\n    Flyout,\n    FlyoutPlacement,\n    IconCaretDown12,\n    IconPaperclip16,\n    Tooltip,\n    TooltipPosition,\n} from '@frontify/fondue';\nimport { AttachmentItem, SortableAttachmentItem } from './AttachmentItem';\nimport { AttachmentsProps } from './types';\nimport { restrictToWindowEdges } from '@dnd-kit/modifiers';\n\nexport const Attachments = ({\n    items = [],\n    onDelete,\n    onReplaceWithBrowse,\n    onReplaceWithUpload,\n    onBrowse,\n    onUpload,\n    onSorted,\n    appBridge,\n}: AttachmentsProps) => {\n    const [internalItems, setInternalItems] = useState<Asset[]>(items);\n    const [isFlyoutOpen, setIsFlyoutOpen] = useState(false);\n    const sensors = useSensors(useSensor(PointerSensor), useSensor(KeyboardSensor));\n    const [draggedAssetId, setDraggedAssetId] = useState<number | undefined>(undefined);\n    const [isUploadLoading, setIsUploadLoading] = useState(false);\n    const [assetIdsLoading, setAssetIdsLoading] = useState<number[]>([]);\n    const [selectedFiles, setSelectedFiles] = useState<FileList | null>(null);\n    const isEditing = useEditorState(appBridge);\n\n    const draggedItem = internalItems?.find((item) => item.id === draggedAssetId);\n\n    const [uploadFile, { results: uploadResults, doneAll }] = useAssetUpload({\n        onUploadProgress: () => !isUploadLoading && setIsUploadLoading(true),\n    });\n\n    useEffect(() => {\n        setInternalItems(items);\n    }, [items]);\n\n    useEffect(() => {\n        if (selectedFiles) {\n            setIsUploadLoading(true);\n            uploadFile(selectedFiles);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedFiles]);\n\n    useEffect(() => {\n        const uploadDone = async () => {\n            if (doneAll) {\n                await onUpload(uploadResults);\n                setIsUploadLoading(false);\n            }\n        };\n        uploadDone();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [doneAll, uploadResults]);\n\n    const onOpenAssetChooser = () => {\n        setIsFlyoutOpen(false);\n        appBridge.openAssetChooser(\n            (result: Asset[]) => {\n                onBrowse(result);\n                appBridge.closeAssetChooser();\n                setIsFlyoutOpen(true);\n            },\n            {\n                multiSelection: true,\n                selectedValueIds: internalItems.map((internalItem) => internalItem.id),\n            },\n        );\n    };\n\n    const onReplaceItemWithBrowse = (toReplace: Asset) => {\n        setIsFlyoutOpen(false);\n        appBridge.openAssetChooser(\n            async (result: Asset[]) => {\n                setIsFlyoutOpen(true);\n                appBridge.closeAssetChooser();\n                setAssetIdsLoading([...assetIdsLoading, toReplace.id]);\n                await onReplaceWithBrowse(toReplace, result[0]);\n                setAssetIdsLoading(assetIdsLoading.filter((id) => id !== toReplace.id));\n            },\n            {\n                multiSelection: false,\n                selectedValueIds: internalItems.map((internalItem) => internalItem.id),\n            },\n        );\n    };\n\n    const onReplaceItemWithUpload = async (toReplace: Asset, uploadedAsset: Asset) => {\n        setAssetIdsLoading([...assetIdsLoading, toReplace.id]);\n        await onReplaceWithUpload(toReplace, uploadedAsset);\n        setAssetIdsLoading(assetIdsLoading.filter((id) => id !== toReplace.id));\n    };\n\n    const handleDragStart = (event: DragStartEvent) => {\n        const { active } = event;\n        setDraggedAssetId(active.id as number);\n    };\n\n    const handleDragEnd = (event: DragEndEvent) => {\n        const { active, over } = event;\n        if (over && active.id !== over.id && internalItems) {\n            const oldIndex = internalItems.findIndex((i) => i.id === active.id);\n            const newIndex = internalItems.findIndex((i) => i.id === over.id);\n            const sortedItems = arrayMove(internalItems, oldIndex, newIndex);\n            setInternalItems(sortedItems);\n            onSorted(sortedItems);\n        }\n        setDraggedAssetId(undefined);\n    };\n\n    return isEditing || (internalItems?.length ?? 0) > 0 ? (\n        <Tooltip\n            withArrow\n            position={TooltipPosition.Top}\n            content=\"Attachments\"\n            disabled={isFlyoutOpen}\n            enterDelay={500}\n            triggerElement={\n                <div data-test-id=\"attachments-flyout-button\">\n                    <Flyout\n                        placement={FlyoutPlacement.BottomRight}\n                        onOpenChange={(isOpen) => setIsFlyoutOpen(!!draggedItem ? true : isOpen)}\n                        isOpen={isFlyoutOpen}\n                        hug={false}\n                        fitContent\n                        legacyFooter={false}\n                        trigger={\n                            <div className=\"tw-flex tw-text-[13px] tw-font-body tw-items-center tw-gap-1 tw-rounded-full tw-bg-box-neutral-strong-inverse hover:tw-bg-box-neutral-strong-inverse-hover active:tw-bg-box-neutral-strong-inverse-pressed tw-text-box-neutral-strong tw-outline tw-outline-1 tw-outline-offset-[1px] tw-p-[6px] tw-outline-line\">\n                                <IconPaperclip16 />\n                                <div>{items.length > 0 ? items.length : 'Add'}</div>\n                                <IconCaretDown12 />\n                            </div>\n                        }\n                    >\n                        <div className=\"tw-w-[300px]\">\n                            {internalItems.length > 0 && (\n                                <DndContext\n                                    sensors={sensors}\n                                    collisionDetection={closestCenter}\n                                    onDragStart={handleDragStart}\n                                    onDragEnd={handleDragEnd}\n                                    modifiers={[restrictToWindowEdges]}\n                                >\n                                    <SortableContext items={internalItems} strategy={rectSortingStrategy}>\n                                        <div className=\"tw-border-b tw-border-b-line\">\n                                            {internalItems.map((item) => (\n                                                <SortableAttachmentItem\n                                                    isEditing={isEditing}\n                                                    isLoading={assetIdsLoading.includes(item.id)}\n                                                    key={item.id}\n                                                    item={item}\n                                                    onDelete={() => onDelete(item)}\n                                                    onReplaceWithBrowse={() => onReplaceItemWithBrowse(item)}\n                                                    onReplaceWithUpload={(uploadedAsset: Asset) =>\n                                                        onReplaceItemWithUpload(item, uploadedAsset)\n                                                    }\n                                                />\n                                            ))}\n                                        </div>\n                                    </SortableContext>\n                                    <DragOverlay>\n                                        {draggedItem && (\n                                            <AttachmentItem\n                                                isOverlay={true}\n                                                isEditing={isEditing}\n                                                key={draggedAssetId}\n                                                item={draggedItem}\n                                                isDragging={true}\n                                                onDelete={() => onDelete(draggedItem)}\n                                                onReplaceWithBrowse={() => onReplaceItemWithBrowse(draggedItem)}\n                                                onReplaceWithUpload={(uploadedAsset: Asset) =>\n                                                    onReplaceItemWithUpload(draggedItem, uploadedAsset)\n                                                }\n                                            />\n                                        )}\n                                    </DragOverlay>\n                                </DndContext>\n                            )}\n                            {isEditing && (\n                                <div className=\"tw-px-5 tw-py-3\">\n                                    <div className=\"tw-font-body tw-font-medium tw-text-text tw-text-s tw-my-4\">\n                                        Add attachments\n                                    </div>\n                                    <AssetInput\n                                        isLoading={isUploadLoading}\n                                        size={AssetInputSize.Small}\n                                        onUploadClick={(fileList) => setSelectedFiles(fileList)}\n                                        onLibraryClick={onOpenAssetChooser}\n                                    />\n                                </div>\n                            )}\n                        </div>\n                    </Flyout>\n                </div>\n            }\n        />\n    ) : null;\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { DownloadButtonProps } from './types';\nimport { useFocusRing } from '@react-aria/focus';\nimport { FOCUS_STYLE, IconArrowCircleDown16, Tooltip, TooltipPosition } from '@frontify/fondue';\nimport { joinClassNames } from '../../utilities';\n\nexport const DownloadButton = ({ onDownload }: DownloadButtonProps) => {\n    const { isFocused, focusProps } = useFocusRing();\n\n    return (\n        <Tooltip\n            withArrow\n            position={TooltipPosition.Top}\n            content=\"Download\"\n            enterDelay={500}\n            triggerElement={\n                <button\n                    tabIndex={0}\n                    aria-label=\"Download\"\n                    {...focusProps}\n                    className={joinClassNames(['tw-outline-none tw-rounded', isFocused && FOCUS_STYLE])}\n                    onClick={onDownload}\n                    onPointerDown={(e) => e.preventDefault()}\n                >\n                    <span\n                        data-test-id=\"download-button\"\n                        className=\"tw-flex tw-text-xs tw-font-body tw-items-center tw-gap-1 tw-rounded-full tw-bg-box-neutral-strong-inverse hover:tw-bg-box-neutral-strong-inverse-hover active:tw-bg-box-neutral-strong-inverse-pressed tw-text-box-neutral-strong tw-outline tw-outline-1 tw-outline-offset-1 tw-p-1.5 tw-outline-line\"\n                    >\n                        <IconArrowCircleDown16 />\n                    </span>\n                </button>\n            }\n        />\n    );\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport {\n    ELEMENT_LINK,\n    FloatingLinkProps,\n    HTMLPropsAs,\n    LinkPlugin,\n    floatingLinkActions,\n    getPluginOptions,\n    getSelectionBoundingClientRect,\n    triggerFloatingLinkInsert,\n    useComposedRef,\n    useEditorRef,\n    useFloatingLinkEscape,\n    useFloatingLinkSelectors,\n    useHotkeys,\n    useVirtualFloatingLink,\n} from '@udecode/plate';\nimport { useEffect } from 'react';\nimport { useFocused } from 'slate-react';\n\nexport const useFloatingLinkInsert = ({ floatingOptions, ...props }: FloatingLinkProps): HTMLPropsAs<'div'> => {\n    const editor = useEditorRef();\n    const focused = useFocused();\n    const mode = useFloatingLinkSelectors().mode();\n    const open = useFloatingLinkSelectors().isOpen(editor.id);\n\n    const { triggerFloatingLinkHotkeys } = getPluginOptions<LinkPlugin>(editor, ELEMENT_LINK);\n\n    useHotkeys(\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        triggerFloatingLinkHotkeys!,\n        (e) => {\n            if (triggerFloatingLinkInsert(editor, { focused })) {\n                e.preventDefault();\n            }\n        },\n        {\n            enableOnContentEditable: true,\n        },\n        [focused],\n    );\n\n    const { update, style, floating } = useVirtualFloatingLink({\n        editorId: editor.id,\n        open: open && mode === 'insert',\n        getBoundingClientRect: getSelectionBoundingClientRect,\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        whileElementsMounted: () => {},\n        ...floatingOptions,\n    });\n\n    // wait for update before focusing input\n    useEffect(() => {\n        if (open) {\n            update();\n            floatingLinkActions.updated(true);\n        } else {\n            floatingLinkActions.updated(false);\n        }\n    }, [open, update]);\n\n    useFloatingLinkEscape();\n\n    return {\n        style: {\n            ...style,\n            zIndex: 1000,\n        },\n        ...props,\n        ref: useComposedRef<HTMLElement | null>(props.ref, floating),\n    };\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport {\n    FloatingLinkProps,\n    FloatingLink as PlateFloatingLink,\n    createComponentAs,\n    createElementAs,\n} from '@udecode/plate';\nimport { useFloatingLinkEdit } from './EditLinkModal';\nimport { useFloatingLinkInsert } from './InsertLinkModal/useFloatingLinkInsert';\n\nconst FloatingLinkInsertRoot = createComponentAs<FloatingLinkProps>((props) => {\n    const htmlProps = useFloatingLinkInsert({\n        ...props,\n        floatingOptions: {\n            strategy: 'absolute',\n        },\n    });\n\n    if (htmlProps.style?.display === 'none') {\n        return null;\n    }\n\n    return createElementAs('div', htmlProps);\n});\n\nconst FloatingLinkEditRoot = createComponentAs<FloatingLinkProps>((props) => {\n    const htmlProps = useFloatingLinkEdit({\n        ...props,\n        floatingOptions: {\n            strategy: 'absolute',\n        },\n    });\n\n    if (htmlProps.style?.display === 'none') {\n        return null;\n    }\n\n    return createElementAs('div', htmlProps);\n});\n\nPlateFloatingLink.EditRoot = FloatingLinkEditRoot;\nPlateFloatingLink.InsertRoot = FloatingLinkInsertRoot;\n\nexport const FloatingLink = PlateFloatingLink;\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nexport const LINK_PLUGIN = 'link-plugin';\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\ntype TextElement = {\n    text: string;\n    children?: TextElement[];\n};\n\nexport const hasRichTextValue = (string?: string): boolean => {\n    if (!string) {\n        return false;\n    }\n    const hasText = (children: TextElement[]): boolean =>\n        children.some((child: TextElement) => {\n            if (child.text) {\n                return child.text !== '';\n            }\n            if (child.children) {\n                return hasText(child.children);\n            }\n            return false;\n        });\n\n    try {\n        const json = JSON.parse(string);\n        return hasText(json);\n    } catch (error) {\n        return false;\n    }\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { hasRichTextValue } from './hasRichTextValue';\n\nexport const convertToRteValue = (textStyle = 'p', text = '', align?: 'center' | 'right' | 'left' | 'justify') =>\n    hasRichTextValue(text) ? text : JSON.stringify([{ type: textStyle, children: [{ text, textStyle }], align }]);\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { KeyboardCode, KeyboardCoordinateGetter } from '@dnd-kit/core';\n\nconst directions: string[] = [KeyboardCode.Down, KeyboardCode.Right, KeyboardCode.Up, KeyboardCode.Left];\n\nexport const customCoordinatesGetterFactory =\n    (columnGap: number, rowGap: number): KeyboardCoordinateGetter =>\n    (event, { currentCoordinates, context: { activeNode } }) => {\n        event.preventDefault();\n        if (directions.includes(event.code)) {\n            const width = activeNode?.offsetWidth ?? 0;\n            const height = activeNode?.offsetHeight ?? 0;\n\n            switch (event.code) {\n                case KeyboardCode.Right:\n                    return {\n                        ...currentCoordinates,\n                        x: currentCoordinates.x + width + columnGap,\n                    };\n                case KeyboardCode.Left:\n                    return {\n                        ...currentCoordinates,\n                        x: currentCoordinates.x - width - columnGap,\n                    };\n                case KeyboardCode.Down:\n                    return {\n                        ...currentCoordinates,\n                        y: currentCoordinates.y + height + rowGap,\n                    };\n                case KeyboardCode.Up:\n                    return {\n                        ...currentCoordinates,\n                        y: currentCoordinates.y - height - rowGap,\n                    };\n            }\n        }\n        return undefined;\n    };\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { Security } from '../settings/types';\n\nexport const isDownloadable = (security: Security, downloadable: boolean, globalAssetDownloadEnabled: boolean) => {\n    return security === Security.Custom ? downloadable : globalAssetDownloadEnabled;\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { ColorPalette } from '@frontify/app-bridge';\nimport { Palette } from '@frontify/fondue';\n\nexport const mapAppBridgeColorPalettesToFonduePalettes = (colorPalettes: ColorPalette[]): Palette[] => {\n    return colorPalettes.map(mapAppBridgeColorPaletteToFonduePalette);\n};\n\nexport const mapAppBridgeColorPaletteToFonduePalette = (colorPalette: ColorPalette): Palette => {\n    return {\n        id: colorPalette.id,\n        title: colorPalette.name,\n        colors: colorPalette.colors.map((color) => ({\n            alpha: color.alpha ? color.alpha / 255 : 1,\n            red: color.red ?? 0,\n            green: color.green ?? 0,\n            blue: color.blue ?? 0,\n            name: color.name ?? '',\n        })),\n    };\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { ELEMENT_LINK, PlateEditor, getAboveNode } from '@udecode/plate';\nimport { TLinkElement } from '../types';\n\nconst getLinkNode = (editor: PlateEditor, cb: (link: TLinkElement) => string): string => {\n    const linkNode = getAboveNode<TLinkElement>(editor, { match: { type: ELEMENT_LINK } });\n\n    if (!Array.isArray(linkNode)) {\n        return '';\n    }\n\n    return cb(linkNode[0]);\n};\n\nexport const getLegacyUrl = (editor: PlateEditor) => {\n    return getLinkNode(editor, (link) => link.chosenLink?.searchResult?.link || '');\n};\n\nexport const getUrl = (editor: PlateEditor) => {\n    return getLinkNode(editor, (link) => link.url || '');\n};\n\nexport const getUrlFromLinkOrLegacyLink = (link: TLinkElement): string => {\n    return link.url || link.chosenLink?.searchResult?.link || '';\n};\n\nexport const getUrlFromEditor = (editor: PlateEditor) => {\n    return getLinkNode(editor, getUrlFromLinkOrLegacyLink);\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nexport const relativeUrlRegex = /^\\/(document|r)\\/\\S+$/i;\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { relativeUrlRegex } from '../components/RichTextEditor/plugins/LinkPlugin/utils';\n\nexport const addHttps = (url: string) => {\n    if (relativeUrlRegex.test(url)) {\n        return url;\n    }\n    try {\n        new URL(url);\n        return url;\n    } catch {\n        return `https://${url}`;\n    }\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { addHttps } from '../../../../../helpers';\nimport { relativeUrlRegex } from './relativeUrlRegex';\n\nexport const isValidUrl = (url: string) => {\n    if (relativeUrlRegex.test(url)) {\n        return true;\n    }\n    try {\n        const parsedUrl = new URL(url);\n        const validProtocols = ['http:', 'https:', 'mailto:', 'tel:'];\n        return validProtocols.includes(parsedUrl.protocol) && parsedUrl.pathname !== '';\n    } catch (error) {\n        return false;\n    }\n};\n\nexport const isValidUrlOrEmpty = (url: string) => {\n    return isValidUrl(addHttps(url)) || url === '';\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { PlateEditor, getAboveNode } from '@udecode/plate';\nimport { ELEMENT_BUTTON, TButtonElement } from '..';\n\nconst getLinkNode = (editor: PlateEditor, cb: (link: TButtonElement) => string): string => {\n    const linkNode = getAboveNode<TButtonElement>(editor, { match: { type: ELEMENT_BUTTON } });\n\n    if (!Array.isArray(linkNode)) {\n        return '';\n    }\n\n    return cb(linkNode[0]);\n};\n\nexport const getUrlFromEditor = (editor: PlateEditor) => {\n    return getLinkNode(editor, (link) => link.url ?? '');\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { PlateEditor, TText, Value, getPluginType } from '@udecode/plate';\nimport { RichTextButtonStyle, TButtonElement } from '..';\nimport { ELEMENT_BUTTON } from '../createButtonPlugin';\n\nexport interface CreateButtonNodeOptions {\n    url: string;\n    text?: string;\n    buttonStyle?: RichTextButtonStyle;\n    target?: string;\n    children?: TText[];\n}\n\nexport const createButtonNode = <V extends Value>(\n    editor: PlateEditor<V>,\n    { url, text = '', buttonStyle = 'primary', target, children }: CreateButtonNodeOptions,\n): TButtonElement => {\n    const type = getPluginType(editor, ELEMENT_BUTTON);\n\n    return {\n        type,\n        url,\n        target,\n        buttonStyle,\n        children: children ?? [{ text }],\n    };\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { createStore } from '@udecode/plate';\nimport { RichTextButtonStyle } from '../../types';\n\nexport type FloatingButtonMode = '' | 'insert' | 'edit';\n\nexport const floatingButtonStore: any = createStore('floatingButton')({\n    openEditorId: null as null | string,\n    mouseDown: false,\n    updated: false,\n    url: '',\n    text: '',\n    buttonStyle: 'primary' as RichTextButtonStyle,\n    newTab: false,\n    mode: '' as FloatingButtonMode,\n    isEditing: false,\n})\n    .extendActions((set) => ({\n        reset: () => {\n            set.url('');\n            set.text('');\n            set.buttonStyle('primary');\n            set.newTab(false);\n            set.mode('');\n            set.isEditing(false);\n        },\n    }))\n    .extendActions((set) => ({\n        show: (mode: FloatingButtonMode, editorId: string) => {\n            set.mode(mode);\n            set.isEditing(false);\n            set.openEditorId(editorId);\n        },\n        hide: () => {\n            set.reset();\n            set.openEditorId(null);\n        },\n    }))\n    .extendSelectors((state) => ({\n        isOpen: (editorId: string) => state.openEditorId === editorId,\n    }));\n\nexport const floatingButtonActions = floatingButtonStore.set;\nexport const floatingButtonSelectors = floatingButtonStore.get;\nexport const useFloatingButtonSelectors = () => floatingButtonStore.use;\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { PlateEditor, Value, findNode, getEditorString, getPluginType } from '@udecode/plate';\nimport { ELEMENT_BUTTON, TButtonElement } from '..';\nimport { floatingButtonActions } from '../components/FloatingButton/floatingButtonStore';\n\nexport const triggerFloatingButtonEdit = <V extends Value>(editor: PlateEditor<V>) => {\n    const entry = findNode<TButtonElement>(editor, {\n        match: { type: getPluginType(editor, ELEMENT_BUTTON) },\n    });\n    if (!entry) {\n        return;\n    }\n\n    const [link, path] = entry;\n\n    let text = getEditorString(editor, path);\n\n    floatingButtonActions.url(link.url);\n\n    floatingButtonActions.newTab(link.target === undefined);\n\n    if (text === link.url) {\n        text = '';\n    }\n\n    floatingButtonActions.text(text);\n\n    floatingButtonActions.isEditing(true);\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport {\n    HTMLPropsAs,\n    getAboveNode,\n    getDefaultBoundingClientRect,\n    getEndPoint,\n    getPluginOptions,\n    getPluginType,\n    getRangeBoundingClientRect,\n    getStartPoint,\n    someNode,\n    useComposedRef,\n    useEditorRef,\n    useHotkeys,\n    usePlateSelectors,\n} from '@udecode/plate';\nimport { useCallback, useEffect } from 'react';\nimport { ButtonPlugin, ELEMENT_BUTTON } from '../../createButtonPlugin';\nimport { getUrlFromEditor } from '../../utils';\nimport { triggerFloatingButtonEdit } from '../../utils/triggerFloatingButtonEdit';\nimport {\n    FloatingButtonProps,\n    floatingButtonActions,\n    floatingButtonSelectors,\n    useFloatingButtonEnter,\n    useFloatingButtonEscape,\n    useFloatingButtonSelectors,\n    useVirtualFloatingButton,\n} from '.';\n\nexport const useFloatingButtonEdit = ({ floatingOptions, ...props }: FloatingButtonProps): HTMLPropsAs<'div'> => {\n    const editor = useEditorRef();\n    const keyEditor = usePlateSelectors(editor.id).keyEditor();\n    const mode = useFloatingButtonSelectors().mode();\n    const open = useFloatingButtonSelectors().isOpen(editor.id);\n\n    const { triggerFloatingButtonHotkeys } = getPluginOptions<ButtonPlugin>(editor, ELEMENT_BUTTON);\n\n    const getBoundingClientRect = useCallback(() => {\n        const entry = getAboveNode(editor, {\n            match: { type: getPluginType(editor, ELEMENT_BUTTON) },\n        });\n\n        if (entry) {\n            const [, path] = entry;\n            return getRangeBoundingClientRect(editor, {\n                anchor: getStartPoint(editor, path),\n                focus: getEndPoint(editor, path),\n            });\n        }\n\n        return getDefaultBoundingClientRect();\n    }, [editor]);\n\n    const isOpen = open && mode === 'edit';\n\n    const { update, style, floating } = useVirtualFloatingButton({\n        open: isOpen,\n        getBoundingClientRect,\n        ...floatingOptions,\n    });\n\n    useEffect(() => {\n        const url = getUrlFromEditor(editor);\n        if (url) {\n            floatingButtonActions.url(url);\n        }\n\n        if (\n            editor.selection &&\n            someNode(editor, {\n                match: { type: getPluginType(editor, ELEMENT_BUTTON) },\n            })\n        ) {\n            floatingButtonActions.show('edit', editor.id);\n            update();\n            return;\n        }\n\n        if (floatingButtonSelectors.mode() === 'edit') {\n            floatingButtonActions.hide();\n        }\n    }, [editor, keyEditor, update]);\n\n    useHotkeys(\n        triggerFloatingButtonHotkeys,\n        (e) => {\n            e.preventDefault();\n\n            if (floatingButtonSelectors.mode() === 'edit') {\n                triggerFloatingButtonEdit(editor);\n            }\n        },\n        {\n            enableOnContentEditable: true,\n        },\n        [],\n    );\n\n    useFloatingButtonEnter();\n\n    useFloatingButtonEscape();\n\n    return {\n        style: {\n            ...style,\n            zIndex: 1000,\n        },\n        ...props,\n        ref: useComposedRef<HTMLElement | null>(props.ref, floating),\n    };\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { PlateEditor, Value, getEditorString, getPluginType, isRangeAcrossBlocks, someNode } from '@udecode/plate';\nimport { floatingButtonActions, floatingButtonSelectors } from '../components/FloatingButton/floatingButtonStore';\nimport { ELEMENT_BUTTON } from '../createButtonPlugin';\n\n/**\n * Trigger floating button.\n *\n * Do not trigger when:\n * - selection is across blocks\n * - selection has more than one leaf node\n * - lowest selection is not text\n * - selection has a button node\n */\nexport const triggerFloatingButtonInsert = <V extends Value>(\n    editor: PlateEditor<V>,\n    {\n        focused,\n    }: {\n        focused?: boolean;\n    } = {},\n) => {\n    if (floatingButtonSelectors.mode()) {\n        return;\n    }\n\n    if (!focused) {\n        return;\n    }\n\n    if (isRangeAcrossBlocks(editor, { at: editor.selection })) {\n        return;\n    }\n\n    const hasButton = someNode(editor, {\n        match: { type: getPluginType(editor, ELEMENT_BUTTON) },\n    });\n    if (hasButton) {\n        return;\n    }\n\n    floatingButtonActions.text(getEditorString(editor, editor.selection));\n    floatingButtonActions.show('insert', editor.id);\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport {\n    HTMLPropsAs,\n    getPluginOptions,\n    getSelectionBoundingClientRect,\n    useComposedRef,\n    useEditorRef,\n    useHotkeys,\n} from '@udecode/plate';\nimport { useEffect } from 'react';\nimport { useFocused } from 'slate-react';\nimport { ButtonPlugin, ELEMENT_BUTTON } from '../../createButtonPlugin';\nimport { triggerFloatingButtonInsert } from '../../utils/triggerFloatingButtonInsert';\nimport {\n    FloatingButtonProps,\n    floatingButtonActions,\n    useFloatingButtonEscape,\n    useFloatingButtonSelectors,\n    useVirtualFloatingButton,\n} from '.';\n\nexport const useFloatingButtonInsert = ({ floatingOptions, ...props }: FloatingButtonProps): HTMLPropsAs<'div'> => {\n    const editor = useEditorRef();\n    const focused = useFocused();\n    const mode = useFloatingButtonSelectors().mode();\n    const open = useFloatingButtonSelectors().isOpen(editor.id);\n\n    const { triggerFloatingButtonHotkeys } = getPluginOptions<ButtonPlugin>(editor, ELEMENT_BUTTON);\n\n    useHotkeys(\n        triggerFloatingButtonHotkeys,\n        (e) => {\n            e.preventDefault();\n\n            triggerFloatingButtonInsert(editor, {\n                focused,\n            });\n        },\n        {\n            enableOnContentEditable: true,\n        },\n        [focused],\n    );\n\n    const { update, style, floating } = useVirtualFloatingButton({\n        open: open && mode === 'insert',\n        getBoundingClientRect: getSelectionBoundingClientRect,\n        whileElementsMounted: undefined,\n        ...floatingOptions,\n    });\n\n    // wait for update before focusing input\n    useEffect(() => {\n        if (open) {\n            update();\n        }\n        floatingButtonActions.updated(open);\n    }, [open, update]);\n\n    useFloatingButtonEscape();\n\n    return {\n        style: {\n            ...style,\n            zIndex: 1000,\n        },\n        ...props,\n        ref: useComposedRef<HTMLElement | null>(props.ref, floating),\n    };\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { useCallback } from 'react';\nimport { AsProps, HTMLPropsAs, createComponentAs, createElementAs, useEditorRef } from '@udecode/plate';\nimport { triggerFloatingButtonEdit } from '../../utils/triggerFloatingButtonEdit';\n\nexport const useFloatingButtonEditButton = (props: HTMLPropsAs<'button'>): HTMLPropsAs<'button'> => {\n    const editor = useEditorRef();\n\n    return {\n        onClick: useCallback(() => {\n            triggerFloatingButtonEdit(editor);\n        }, [editor]),\n        ...props,\n    };\n};\n\nexport const FloatingButtonEditButton = createComponentAs<AsProps<'button'>>((props) => {\n    const htmlProps = useFloatingButtonEditButton(props);\n\n    return createElementAs('button', htmlProps);\n});\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { InsertNodesOptions, PlateEditor, TText, Value, insertNodes } from '@udecode/plate';\nimport { TButtonElement } from '../types';\nimport { CreateButtonNodeOptions, createButtonNode } from '../utils/index';\n\nexport const insertButton = <V extends Value>(\n    editor: PlateEditor<V>,\n    createButtonNodeOptions: CreateButtonNodeOptions,\n    options?: InsertNodesOptions<V>,\n) => {\n    insertNodes<TButtonElement | TText>(\n        editor,\n        [createButtonNode(editor, createButtonNodeOptions)],\n        options as InsertNodesOptions,\n    );\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { PlateEditor, Value, focusEditor, getPluginOptions } from '@udecode/plate';\nimport { floatingButtonActions, floatingButtonSelectors } from '../components/FloatingButton/floatingButtonStore';\nimport { ButtonPlugin, ELEMENT_BUTTON } from '../createButtonPlugin';\nimport { upsertButton } from '.';\n\nexport const submitFloatingButton = <V extends Value>(editor: PlateEditor<V>) => {\n    if (!editor.selection) {\n        return;\n    }\n\n    const { isUrl, forceSubmit } = getPluginOptions<ButtonPlugin, V>(editor, ELEMENT_BUTTON);\n    const url = floatingButtonSelectors.url();\n\n    const isValid = isUrl?.(url) || forceSubmit;\n    if (!isValid) {\n        return;\n    }\n\n    const text = floatingButtonSelectors.text();\n    const buttonStyle = floatingButtonSelectors.buttonStyle();\n    const target = floatingButtonSelectors.newTab() ? undefined : '_self';\n\n    floatingButtonActions.hide();\n\n    upsertButton(editor, {\n        url,\n        text,\n        buttonStyle,\n        target,\n        isUrl: (_url) => (forceSubmit || !isUrl ? true : isUrl(_url)),\n    });\n\n    setTimeout(() => {\n        focusEditor(editor, editor.selection ?? undefined);\n    }, 0);\n\n    return true;\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport {\n    PlateEditor,\n    UnwrapNodesOptions,\n    Value,\n    getAboveNode,\n    getPluginType,\n    isElement,\n    splitNodes,\n    unwrapNodes,\n    withoutNormalizing,\n} from '@udecode/plate';\nimport { ELEMENT_BUTTON } from '../createButtonPlugin';\n\n/**\n * Unwrap button node.\n */\nexport const unwrapButton = <V extends Value>(\n    editor: PlateEditor<V>,\n    options?: UnwrapNodesOptions & {\n        split?: boolean;\n    },\n) => {\n    return withoutNormalizing(editor, () => {\n        if (options?.split) {\n            const buttonAboveAnchor = getAboveNode(editor, {\n                at: editor.selection?.anchor,\n                match: { type: getPluginType(editor, ELEMENT_BUTTON) },\n            });\n\n            // anchor in button\n            if (buttonAboveAnchor) {\n                splitNodes(editor, {\n                    at: editor.selection?.anchor,\n                    match: (n) => isElement(n) && n.type === getPluginType(editor, ELEMENT_BUTTON),\n                });\n                unwrapButton(editor, {\n                    at: editor.selection?.anchor,\n                });\n                return true;\n            }\n            const buttonAboveFocus = getAboveNode(editor, {\n                at: editor.selection?.focus,\n                match: { type: getPluginType(editor, ELEMENT_BUTTON) },\n            });\n\n            // focus in button\n            if (buttonAboveFocus) {\n                splitNodes(editor, {\n                    at: editor.selection?.focus,\n                    match: (n) => isElement(n) && n.type === getPluginType(editor, ELEMENT_BUTTON),\n                });\n                unwrapButton(editor, {\n                    at: editor.selection?.focus,\n                });\n                return true;\n            }\n        }\n\n        unwrapNodes(editor, {\n            match: { type: getPluginType(editor, ELEMENT_BUTTON) },\n            ...options,\n        });\n\n        return;\n    });\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport {\n    InsertNodesOptions,\n    PlateEditor,\n    TNode,\n    TNodeEntry,\n    UnwrapNodesOptions,\n    Value,\n    WrapNodesOptions,\n    findNode,\n    getAboveNode,\n    getEditorString,\n    getNodeLeaf,\n    getNodeProps,\n    getPluginOptions,\n    getPluginType,\n    isDefined,\n    isExpanded,\n    removeNodes,\n    setNodes,\n} from '@udecode/plate';\nimport { Path } from 'slate';\nimport { ButtonPlugin, ELEMENT_BUTTON } from '../createButtonPlugin';\nimport { RichTextButtonStyle, TButtonElement } from '../types';\nimport { CreateButtonNodeOptions } from '../utils/index';\nimport { insertButton, unwrapButton, upsertButtonText, wrapButton } from '.';\n\nexport type UpsertButtonOptions<V extends Value = Value> = CreateButtonNodeOptions & {\n    /**\n     * If true, insert text when selection is in url.\n     */\n    insertTextInButton?: boolean;\n    insertNodesOptions?: InsertNodesOptions<V>;\n    unwrapNodesOptions?: UnwrapNodesOptions<V>;\n    wrapNodesOptions?: WrapNodesOptions<V>;\n    isUrl?: (url: string) => boolean;\n};\n\n/**\n * If selection in a button or is not url:\n * - insert text with url, exit\n * If selection is expanded or `update` in a button:\n * - remove button node, get button text\n * Then:\n * - insert button node\n */\nexport const upsertButton = <V extends Value>(\n    editor: PlateEditor<V>,\n    {\n        url,\n        text,\n        buttonStyle,\n        target,\n        insertTextInButton,\n        insertNodesOptions,\n        isUrl = getPluginOptions<ButtonPlugin, V>(editor, ELEMENT_BUTTON).isUrl,\n    }: UpsertButtonOptions<V>,\n) => {\n    const at = editor.selection;\n    if (!at) {\n        return;\n    }\n\n    const buttonAbove = getAboveNode<TButtonElement>(editor, {\n        at,\n        match: { type: getPluginType(editor, ELEMENT_BUTTON) },\n    });\n\n    // anchor and focus in button -> insert text\n    if (insertTextInButton && buttonAbove) {\n        // we don't want to insert marks in buttons\n        editor.insertText(url);\n        return true;\n    }\n\n    if (!isUrl?.(url)) {\n        return;\n    }\n\n    if (isDefined(text) && text.length === 0) {\n        text = url;\n    }\n\n    if (buttonAbove) {\n        editButtonUrlAndTarget<V>(url, editor, buttonAbove, target, buttonStyle, text);\n        return true;\n    }\n\n    // selection contains at one edge edge or between the edges\n    const buttonEntry = findNode<TButtonElement>(editor, {\n        at,\n        match: { type: getPluginType(editor, ELEMENT_BUTTON) },\n    });\n\n    const [buttonNode, buttonPath] = buttonEntry ?? [];\n\n    const shouldReplaceText = shouldReplaceButtonText<V>(editor, buttonPath, text);\n\n    if (isExpanded(at)) {\n        anchorAndFocusInButton<V>(buttonAbove, editor, url, buttonStyle, target, text);\n        return true;\n    }\n\n    if (shouldReplaceText) {\n        removeNodes(editor, {\n            at: buttonPath,\n        });\n    }\n\n    const props = getNodeProps(buttonNode ?? ({} as TNode));\n\n    const path = editor.selection?.focus.path;\n    if (!path) {\n        return;\n    }\n\n    // button text should have the focused leaf marks\n    const leaf = getNodeLeaf(editor, path);\n\n    // if text is empty, text is url\n    if (!text?.length) {\n        text = url;\n    }\n\n    insertButton(\n        editor,\n        {\n            ...props,\n            url,\n            target,\n            children: [\n                {\n                    ...leaf,\n                    text,\n                },\n            ],\n        },\n        insertNodesOptions,\n    );\n    return true;\n};\n\nfunction shouldReplaceButtonText<V extends Value>(editor: PlateEditor<V>, buttonPath?: Path, text?: string) {\n    return buttonPath && text?.length && text !== getEditorString(editor, buttonPath);\n}\n\nfunction anchorAndFocusInButton<V extends Value>(\n    buttonAbove: undefined,\n    editor: PlateEditor<V>,\n    url: string,\n    buttonStyle?: RichTextButtonStyle,\n    target?: string,\n    text?: string,\n) {\n    if (buttonAbove) {\n        unwrapButton(editor, {\n            at: buttonAbove[1],\n        });\n    } else {\n        unwrapButton(editor, {\n            split: true,\n        });\n    }\n\n    wrapButton(editor, {\n        url,\n        buttonStyle,\n        target,\n    });\n\n    upsertButtonText(editor, { url, target, text });\n}\n\nfunction editButtonUrlAndTarget<V extends Value>(\n    url: string,\n    editor: PlateEditor<V>,\n    buttonAbove: TNodeEntry<TButtonElement>,\n    target?: string,\n    buttonStyle?: string,\n    text?: string,\n) {\n    if (\n        url !== buttonAbove[0]?.url ||\n        target !== buttonAbove[0]?.target ||\n        buttonStyle !== buttonAbove[0]?.buttonStyle\n    ) {\n        setNodes<TButtonElement>(\n            editor,\n            { url, target, buttonStyle },\n            {\n                at: buttonAbove[1],\n            },\n        );\n    }\n\n    upsertButtonText(editor, { url, text, target });\n}\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport {\n    PlateEditor,\n    TText,\n    Value,\n    getAboveNode,\n    getEditorString,\n    getPluginType,\n    replaceNodeChildren,\n} from '@udecode/plate';\nimport { ELEMENT_BUTTON, TButtonElement } from '..';\nimport { UpsertButtonOptions } from './upsertButton';\n\n/**\n * If the text is different than the button above text, replace button children by a new text.\n * The new text has the same marks than the first text replaced.\n */\nexport const upsertButtonText = <V extends Value>(editor: PlateEditor<V>, { text }: UpsertButtonOptions<V>) => {\n    const newButton = getAboveNode<TButtonElement>(editor, {\n        match: { type: getPluginType(editor, ELEMENT_BUTTON) },\n    });\n\n    if (newButton) {\n        const [newButtonNode, newButtonPath] = newButton;\n\n        if (text?.length && text !== getEditorString(editor, newButtonPath)) {\n            const firstText = newButtonNode.children[0];\n\n            // remove button children\n            replaceNodeChildren<TText>(editor, {\n                at: newButtonPath,\n                nodes: { ...firstText, text },\n                insertOptions: {\n                    select: true,\n                },\n            });\n        }\n    }\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { PlateEditor, Value, WrapNodesOptions, getPluginType, wrapNodes } from '@udecode/plate';\nimport { ELEMENT_BUTTON, RichTextButtonStyle, TButtonElement } from '..';\n\nexport interface WrapButtonOptions<V extends Value = Value> extends WrapNodesOptions<V> {\n    url: string;\n    buttonStyle?: RichTextButtonStyle;\n    target?: string;\n}\n\n/**\n * Wrap a button node with split.\n */\nexport const wrapButton = <V extends Value>(\n    editor: PlateEditor<V>,\n    { url, buttonStyle, target, ...options }: WrapButtonOptions<V>,\n) => {\n    wrapNodes<TButtonElement, Value>(\n        editor,\n        {\n            type: getPluginType(editor, ELEMENT_BUTTON),\n            url,\n            buttonStyle,\n            target,\n            children: [],\n        },\n        { split: true, ...options } as WrapNodesOptions,\n    );\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { useCallback } from 'react';\nimport {\n    AsProps,\n    Button,\n    HTMLPropsAs,\n    createComponentAs,\n    createElementAs,\n    focusEditor,\n    useEditorRef,\n} from '@udecode/plate';\nimport { unwrapButton } from '../../transforms/index';\n\nexport const useUnlinkButton = (props: HTMLPropsAs<'button'>): HTMLPropsAs<'button'> => {\n    const editor = useEditorRef();\n\n    return {\n        onClick: useCallback(() => {\n            unwrapButton(editor);\n            focusEditor(editor, editor.selection ?? undefined);\n        }, [editor]),\n        ...props,\n    };\n};\n\nexport const UnlinkButton = createComponentAs<AsProps<'button'>>((props) => {\n    const htmlProps = useUnlinkButton(props);\n\n    return createElementAs(Button, htmlProps);\n});\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { HTMLPropsAs, UseVirtualFloatingOptions, createComponentAs, createElementAs } from '@udecode/plate';\nimport { useFloatingButtonEdit } from './useFloatingButtonEdit';\nimport { useFloatingButtonInsert } from './useFloatingButtonInsert';\nimport { FloatingButtonEditButton } from './FloatingButtonEditButton';\nimport { UnlinkButton } from './UnlinkButton';\n\nexport type FloatingButtonProps = HTMLPropsAs<'div'> & {\n    floatingOptions?: UseVirtualFloatingOptions;\n};\n\nexport const FloatingButtonEditRoot = createComponentAs<FloatingButtonProps>((props) => {\n    const htmlProps = useFloatingButtonEdit(props);\n\n    if (htmlProps.style?.display === 'none') {\n        return null;\n    }\n\n    return createElementAs('div', htmlProps);\n});\n\nexport const FloatingButtonInsertRoot = createComponentAs<FloatingButtonProps>((props) => {\n    const htmlProps = useFloatingButtonInsert(props);\n\n    if (htmlProps.style?.display === 'none') {\n        return null;\n    }\n    return createElementAs('div', htmlProps);\n});\n\nexport const FloatingButton = {\n    EditRoot: FloatingButtonEditRoot,\n    InsertRoot: FloatingButtonInsertRoot,\n    EditButton: FloatingButtonEditButton,\n    UnlinkButton,\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { ChangeEventHandler, useCallback, useEffect, useRef } from 'react';\nimport { HTMLPropsAs, mergeProps, useComposedRef } from '@udecode/plate';\nimport { floatingButtonActions, floatingButtonSelectors, useFloatingButtonSelectors } from './floatingButtonStore';\n\nexport const useFloatingButtonUrlInput = (props: HTMLPropsAs<'input'>): HTMLPropsAs<'input'> => {\n    const updated = useFloatingButtonSelectors().updated();\n    const ref = useRef<HTMLInputElement>(null);\n\n    useEffect(() => {\n        if (ref.current && updated) {\n            setTimeout(() => {\n                ref.current?.focus();\n            }, 0);\n        }\n    }, [updated]);\n\n    const onChange: ChangeEventHandler<HTMLInputElement> = useCallback((e) => {\n        floatingButtonActions.url(e.target.value);\n    }, []);\n\n    return mergeProps(\n        {\n            onChange,\n            defaultValue: floatingButtonSelectors.url(),\n        },\n        { ...props, ref: useComposedRef<HTMLInputElement>(props.ref, ref) },\n    );\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { useEditorRef, useHotkeys } from '@udecode/plate';\nimport { submitFloatingButton } from '../../transforms/submitFloatingButton';\n\nexport const useFloatingButtonEnter = () => {\n    const editor = useEditorRef();\n\n    useHotkeys(\n        '*',\n        (e) => {\n            if (e.key === 'Enter' && submitFloatingButton(editor)) {\n                e.preventDefault();\n            }\n        },\n        {\n            enableOnFormTags: ['INPUT'],\n        },\n        [],\n    );\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { focusEditor, useEditorRef, useHotkeys } from '@udecode/plate';\nimport { floatingButtonActions, floatingButtonSelectors } from './floatingButtonStore';\n\nexport const useFloatingButtonEscape = () => {\n    const editor = useEditorRef();\n\n    useHotkeys(\n        'escape',\n        () => {\n            if (floatingButtonSelectors.mode() !== 'edit') {\n                return;\n            }\n\n            if (floatingButtonSelectors.isEditing()) {\n                floatingButtonActions.show('edit', editor.id);\n                focusEditor(editor, editor.selection ?? undefined);\n                return;\n            }\n\n            floatingButtonActions.hide();\n        },\n        {\n            enableOnFormTags: ['INPUT'],\n            enableOnContentEditable: true,\n        },\n        [],\n    );\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { UseVirtualFloatingOptions, flip, offset, useVirtualFloating } from '@udecode/plate';\n\nconst OFFSET_Y = 12;\nconst OFFSET_X = -22;\nconst PADDING = 96;\n\nexport const useVirtualFloatingButton = (floatingOptions?: UseVirtualFloatingOptions) =>\n    useVirtualFloating({\n        placement: 'bottom-start',\n        middleware: [\n            offset({\n                mainAxis: OFFSET_Y,\n                alignmentAxis: OFFSET_X,\n            }),\n            flip({\n                padding: PADDING,\n            }),\n        ],\n        ...floatingOptions,\n    });\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { PlateEditor, Value } from '@udecode/plate';\nimport { floatingButtonSelectors } from '../components';\nimport { triggerFloatingButtonEdit, triggerFloatingButtonInsert } from '.';\n\nexport const triggerFloatingButton = <V extends Value>(\n    editor: PlateEditor<V>,\n    {\n        focused,\n    }: {\n        focused?: boolean;\n    } = {},\n) => {\n    if (floatingButtonSelectors.mode() === 'edit') {\n        triggerFloatingButtonEdit(editor);\n        return;\n    }\n\n    triggerFloatingButtonInsert(editor, {\n        focused,\n    });\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { CSSProperties } from 'react';\n\nexport const BlockButtonStyles: Record<string, CSSProperties & { hover?: CSSProperties }> = {\n    buttonPrimary: {\n        fontFamily: 'var(--f-theme-settings-button-primary-font-family)',\n        fontSize: 'var(--f-theme-settings-button-primary-font-size)',\n        fontWeight: 'var(--f-theme-settings-button-primary-font-weight)',\n        lineHeight: 'var(--f-theme-settings-button-primary-line-height)',\n        paddingTop: 'var(--f-theme-settings-button-primary-padding-top)',\n        paddingRight: 'var(--f-theme-settings-button-primary-padding-right)',\n        paddingBottom: 'var(--f-theme-settings-button-primary-padding-bottom)',\n        paddingLeft: 'var(--f-theme-settings-button-primary-padding-left)',\n        fontStyle: 'var(--f-theme-settings-button-primary-font-style)',\n        textTransform: 'var(--f-theme-settings-button-primary-text-transform)' as CSSProperties['textTransform'],\n        backgroundColor: 'var(--f-theme-settings-button-primary-background-color)',\n        borderColor: 'var(--f-theme-settings-button-primary-border-color)',\n        borderRadius: 'var(--f-theme-settings-button-primary-border-radius)',\n        borderWidth: 'var(--f-theme-settings-button-primary-border-width)',\n        color: 'var(--f-theme-settings-button-primary-color)',\n        display: 'inline-block',\n        hover: {\n            backgroundColor: 'var(--f-theme-settings-button-primary-background-color-hover)',\n            borderColor: 'var(--f-theme-settings-button-primary-border-color-hover)',\n            color: 'var(--f-theme-settings-button-primary-color-hover)',\n        },\n    },\n\n    buttonSecondary: {\n        fontFamily: 'var(--f-theme-settings-button-secondary-font-family)',\n        fontSize: 'var(--f-theme-settings-button-secondary-font-size)',\n        fontWeight: 'var(--f-theme-settings-button-secondary-font-weight)',\n        lineHeight: 'var(--f-theme-settings-button-secondary-line-height)',\n        paddingTop: 'var(--f-theme-settings-button-secondary-padding-top)',\n        paddingRight: 'var(--f-theme-settings-button-secondary-padding-right)',\n        paddingBottom: 'var(--f-theme-settings-button-secondary-padding-bottom)',\n        paddingLeft: 'var(--f-theme-settings-button-secondary-padding-left)',\n        fontStyle: 'var(--f-theme-settings-button-secondary-font-style)',\n        textTransform: 'var(--f-theme-settings-button-secondary-text-transform)' as CSSProperties['textTransform'],\n        backgroundColor: 'var(--f-theme-settings-button-secondary-background-color)',\n        borderColor: 'var(--f-theme-settings-button-secondary-border-color)',\n        borderRadius: 'var(--f-theme-settings-button-secondary-border-radius)',\n        borderWidth: 'var(--f-theme-settings-button-secondary-border-width)',\n        color: 'var(--f-theme-settings-button-secondary-color)',\n        display: 'inline-block',\n        hover: {\n            backgroundColor: 'var(--f-theme-settings-button-secondary-background-color-hover)',\n            borderColor: 'var(--f-theme-settings-button-secondary-border-color-hover)',\n            color: 'var(--f-theme-settings-button-secondary-color-hover)',\n        },\n    },\n\n    buttonTertiary: {\n        fontFamily: 'var(--f-theme-settings-button-tertiary-font-family)',\n        fontSize: 'var(--f-theme-settings-button-tertiary-font-size)',\n        fontWeight: 'var(--f-theme-settings-button-tertiary-font-weight)',\n        lineHeight: 'var(--f-theme-settings-button-tertiary-line-height)',\n        paddingTop: 'var(--f-theme-settings-button-tertiary-padding-top)',\n        paddingRight: 'var(--f-theme-settings-button-tertiary-padding-right)',\n        paddingBottom: 'var(--f-theme-settings-button-tertiary-padding-bottom)',\n        paddingLeft: 'var(--f-theme-settings-button-tertiary-padding-left)',\n        fontStyle: 'var(--f-theme-settings-button-tertiary-font-style)',\n        textTransform: 'var(--f-theme-settings-button-tertiary-text-transform)' as CSSProperties['textTransform'],\n        backgroundColor: 'var(--f-theme-settings-button-tertiary-background-color)',\n        borderColor: 'var(--f-theme-settings-button-tertiary-border-color)',\n        borderRadius: 'var(--f-theme-settings-button-tertiary-border-radius)',\n        borderWidth: 'var(--f-theme-settings-button-tertiary-border-width)',\n        color: 'var(--f-theme-settings-button-tertiary-color)',\n        display: 'inline-block',\n        hover: {\n            backgroundColor: 'var(--f-theme-settings-button-tertiary-background-color-hover)',\n            borderColor: 'var(--f-theme-settings-button-tertiary-border-color-hover)',\n            color: 'var(--f-theme-settings-button-tertiary-color-hover)',\n        },\n    },\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { HTMLPropsAs, PlateRenderElementProps, Value, useElementProps } from '@udecode/plate';\nimport { CSSProperties, HTMLAttributeAnchorTarget, ReactElement, ReactNode, useState } from 'react';\nimport { RichTextButtonStyle, TButtonElement } from '../types';\nimport { BlockButtonStyles } from '../utils';\n\nexport type ButtonRootProps = PlateRenderElementProps<Value, TButtonElement> & HTMLPropsAs<'a'>;\n\nconst useButton = (props: ButtonRootProps): HTMLPropsAs<'a'> & { buttonStyle: RichTextButtonStyle } => {\n    const _props = useElementProps<TButtonElement, 'a'>({\n        ...props,\n        elementToAttributes: (element) => ({\n            url: element.href,\n            buttonStyle: element.buttonStyle || 'primary',\n            target: element.target || '_blank',\n        }),\n    });\n\n    return {\n        ...(_props as HTMLPropsAs<'a'> & { buttonStyle: RichTextButtonStyle }),\n        // quick fix: hovering <a> with href loses the editor focus\n        onMouseOver: (e) => {\n            e.stopPropagation();\n        },\n    };\n};\n\nexport const ButtonMarkupElementNode = (props: ButtonRootProps) => {\n    const { href, target, buttonStyle } = useButton(props);\n    const { attributes, children } = props;\n\n    return (\n        <HoverableButtonLink\n            attributes={attributes}\n            href={href}\n            target={target}\n            styles={BlockButtonStyles[`button${buttonStyle.charAt(0).toUpperCase() + buttonStyle.slice(1)}`]}\n        >\n            {children}\n        </HoverableButtonLink>\n    );\n};\n\ntype Props = {\n    attributes: ButtonRootProps['attributes'];\n    children: ReactNode;\n    styles?: CSSProperties & { hover?: CSSProperties };\n    href?: string;\n    target?: HTMLAttributeAnchorTarget;\n};\n\nconst HoverableButtonLink = ({\n    attributes,\n    styles = { hover: {} },\n    children,\n    href = '#',\n    target,\n}: Props): ReactElement => {\n    const [hovered, setHovered] = useState(false);\n\n    return (\n        <a\n            {...attributes}\n            onMouseEnter={() => setHovered(true)}\n            onMouseLeave={() => setHovered(false)}\n            href={href}\n            target={target}\n            style={hovered ? { ...styles, ...styles.hover } : styles}\n        >\n            {children}\n        </a>\n    );\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { MarkupElement } from '@frontify/fondue';\nimport { ELEMENT_BUTTON } from '../createButtonPlugin';\nimport { ButtonMarkupElementNode } from './ButtonMarkupElementNode';\n\nexport class ButtonMarkupElement extends MarkupElement {\n    constructor(id = ELEMENT_BUTTON, node = ButtonMarkupElementNode) {\n        super(id, node);\n    }\n}\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { getButtonClassNames, getHotkeyByPlatform, getTooltip } from '@frontify/fondue';\nimport {\n    BlockToolbarButtonProps,\n    ToolbarButton,\n    focusEditor,\n    isRangeInSameBlock,\n    someNode,\n    useEditorRef,\n} from '@udecode/plate';\n\nimport { triggerFloatingButton } from '../utils';\n\nexport interface LinkToolbarButtonProps extends BlockToolbarButtonProps {\n    /**\n     * Default onMouseDown is getting the link url by calling this promise before inserting the image.\n     */\n    getLinkUrl?: (prevUrl: string | null) => Promise<string | null>;\n}\n\nexport const ButtonToolbarButton = ({ type, ...props }: LinkToolbarButtonProps) => {\n    const editor = useEditorRef();\n    const isEnabled = !!isRangeInSameBlock(editor, {\n        at: editor.selection,\n    });\n\n    const isLink = !!editor?.selection && someNode(editor, { match: { type } });\n\n    return (\n        <ToolbarButton\n            tooltip={getTooltip(\n                isEnabled\n                    ? `Button\\n${getHotkeyByPlatform('Ctrl+Shift+K')}`\n                    : 'Buttons can only be set for a single text block.',\n            )}\n            classNames={getButtonClassNames(isEnabled)}\n            active={isLink}\n            onMouseDown={async (event) => {\n                if (!editor) {\n                    return;\n                }\n\n                event.preventDefault();\n                event.stopPropagation();\n\n                focusEditor(editor, editor.selection ?? editor.prevSelection ?? undefined);\n\n                setTimeout(() => {\n                    triggerFloatingButton(editor, { focused: true });\n                }, 0);\n            }}\n            {...props}\n        />\n    );\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { IconButton16, PluginButtonProps, buttonStyles } from '@frontify/fondue';\nimport { getPluginType } from '@udecode/plate';\nimport { ELEMENT_BUTTON } from '../createButtonPlugin';\nimport { ButtonToolbarButton } from './ButtonToolbarButton';\n\nexport const ButtonButton = ({ editor, id }: PluginButtonProps) => (\n    <div data-plugin-id={id}>\n        <ButtonToolbarButton\n            type={getPluginType(editor, ELEMENT_BUTTON)}\n            icon={\n                <span className=\"tw-p-2 tw-h-8 tw-justify-center tw-items-center tw-flex\">\n                    <IconButton16 />\n                </span>\n            }\n            styles={buttonStyles}\n        />\n    </div>\n);\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { IconPen16, IconTrashBin16 } from '@frontify/fondue';\nimport { FloatingButton, useFloatingButtonUrlInput } from '..';\nimport { BlockStyles } from '../../../..';\n\nexport const EditModal = () => {\n    const urlHtmlProps = useFloatingButtonUrlInput({});\n\n    return (\n        <div data-test-id=\"floating-button-edit\" className=\"tw-bg-white tw-rounded tw-shadow tw-p-4 tw-min-w-[400px]\">\n            <span data-test-id=\"preview-button-flyout\" className=\"tw-flex tw-justify-between\">\n                <span className=\"tw-pointer-events-none\" style={BlockStyles.p}>\n                    {urlHtmlProps.defaultValue}\n                </span>\n                <span className=\"tw-flex tw-gap-2\">\n                    <span\n                        role=\"button\"\n                        tabIndex={0}\n                        data-test-id=\"edit-button-button\"\n                        className=\"tw-transition tw-cursor-pointer tw-rounded hover:tw-bg-black-10 tw-p-1\"\n                    >\n                        <FloatingButton.EditButton>\n                            <IconPen16 />\n                        </FloatingButton.EditButton>\n                    </span>\n\n                    <span\n                        role=\"button\"\n                        tabIndex={0}\n                        data-test-id=\"remove-button-button\"\n                        className=\"tw-transition tw-cursor-pointer tw-rounded hover:tw-bg-black-10 tw-p-1\"\n                    >\n                        <FloatingButton.UnlinkButton>\n                            <IconTrashBin16 />\n                        </FloatingButton.UnlinkButton>\n                    </span>\n                </span>\n            </span>\n        </div>\n    );\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { IconDocumentText16, merge } from '@frontify/fondue';\n\ntype SectionLinkProps = {\n    section: {\n        id: number;\n        title: string;\n        permanentLink: string;\n    };\n    selectedUrl: string;\n    onSelectUrl: (url: string) => void;\n};\n\nexport const SectionLink = ({ section, selectedUrl, onSelectUrl }: SectionLinkProps) => {\n    const isActive = section.permanentLink === selectedUrl;\n\n    return (\n        <button\n            data-test-id=\"internal-link-selector-section-link\"\n            className={merge([\n                'tw-py-2 tw-px-2.5 tw-pl-14 tw-leading-5 tw-cursor-pointer tw-w-full',\n                isActive\n                    ? 'tw-bg-box-selected-strong tw-text-box-selected-strong-inverse hover:tw-bg-box-selected-strong-hover:hover hover:tw-text-box-selected-strong-inverse-hover:hover'\n                    : 'hover:tw-bg-box-neutral-hover hover:tw-text-box-neutral-inverse-hover',\n            ])}\n            onClick={() => onSelectUrl(section.permanentLink)}\n            onFocus={() => onSelectUrl(section.permanentLink)}\n        >\n            <div className=\"tw-flex tw-flex-1 tw-space-x-2 tw-items-center tw-h-6\">\n                <IconDocumentText16 />\n                <span className=\"tw-text-s\">{section.title}</span>\n                <span className=\"tw-flex-auto tw-font-sans tw-text-xs tw-text-right\">Section</span>\n            </div>\n        </button>\n    );\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { AppBridgeBlock, useDocumentSection } from '@frontify/app-bridge';\nimport { merge } from '@frontify/fondue';\nimport { useEffect, useState } from 'react';\nimport { InitiallyExpandedItems } from '../../LinkPlugin/FloatingLink/InsertLinkModal/types';\nimport { SectionLink } from './SectionLink';\n\ntype DocumentLinkProps = {\n    page: {\n        id: number;\n        title: string;\n        permanentLink: string;\n    };\n    selectedUrl: string;\n    onSelectUrl: (url: string) => void;\n    appBridge: AppBridgeBlock;\n    itemsToExpandInitially: InitiallyExpandedItems;\n};\n\nexport const PageLink = ({ page, selectedUrl, onSelectUrl, itemsToExpandInitially, appBridge }: DocumentLinkProps) => {\n    const [isExpanded, setIsExpanded] = useState(page.id === itemsToExpandInitially.documentId);\n    const isActive = page.permanentLink === selectedUrl;\n    const { documentSections } = useDocumentSection(appBridge, page.id);\n    const sectionsArray = [...documentSections.values()];\n    const hasSections = sectionsArray.length > 0;\n\n    useEffect(() => {\n        if (page.id === itemsToExpandInitially.pageId) {\n            setIsExpanded(true);\n        }\n    }, [itemsToExpandInitially, page.id]);\n\n    return (\n        <>\n            <div\n                tabIndex={0}\n                data-test-id=\"internal-link-selector-page-link\"\n                className={merge([\n                    'tw-py-2 tw-px-2.5 tw-leading-5 tw-cursor-pointer',\n                    hasSections ? 'tw-pl-7' : 'tw-pl-12',\n                    isActive\n                        ? 'tw-bg-box-selected-strong tw-text-box-selected-strong-inverse hover:tw-bg-box-selected-strong-hover:hover hover:tw-text-box-selected-strong-inverse-hover:hover'\n                        : 'hover:tw-bg-box-neutral-hover hover:tw-text-box-neutral-inverse-hover',\n                ])}\n                onClick={() => onSelectUrl(page.permanentLink)}\n                onFocus={() => onSelectUrl(page.permanentLink)}\n            >\n                <div key={page.id} className=\"tw-flex tw-flex-1 tw-space-x-1 tw-items-center tw-h-6\">\n                    {hasSections && (\n                        <button\n                            data-test-id=\"tree-item-toggle\"\n                            className=\"tw-flex tw-items-center tw-justify-center tw-p-1.5 tw-cursor-pointer\"\n                            onClick={() => setIsExpanded(!isExpanded)}\n                            onFocus={() => setIsExpanded(!isExpanded)}\n                        >\n                            <div\n                                className={merge([\n                                    'tw-transition-transform tw-w-0 tw-h-0 tw-font-normal tw-border-t-4 tw-border-t-transparent tw-border-b-4 tw-border-b-transparent tw-border-l-4 tw-border-l-x-strong',\n                                    isExpanded ? 'tw-rotate-90' : '',\n                                ])}\n                            ></div>\n                        </button>\n                    )}\n                    <span className=\"tw-text-s\">{page.title}</span>\n                    <span className=\"tw-flex-auto tw-font-sans tw-text-xs tw-text-right\">Page</span>\n                </div>\n            </div>\n            {isExpanded &&\n                sectionsArray.length > 0 &&\n                sectionsArray.map((section) => {\n                    return (\n                        <SectionLink\n                            key={section.id}\n                            section={section}\n                            selectedUrl={selectedUrl}\n                            onSelectUrl={onSelectUrl}\n                        />\n                    );\n                })}\n        </>\n    );\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { AppBridgeBlock, DocumentPage } from '@frontify/app-bridge';\nimport { LoadingCircle } from '@frontify/fondue';\nimport { ReactElement, useEffect, useState } from 'react';\nimport { InitiallyExpandedItems } from '../../LinkPlugin/FloatingLink/InsertLinkModal/types';\nimport { PageLink } from './PageLink';\n\ntype PageLinksProps = {\n    appBridge: AppBridgeBlock;\n    documentId: number;\n    selectedUrl: string;\n    onSelectUrl: (url: string) => void;\n    itemsToExpandInitially: InitiallyExpandedItems;\n};\n\nexport const PageLinks = ({\n    appBridge,\n    documentId,\n    selectedUrl,\n    onSelectUrl,\n    itemsToExpandInitially,\n}: PageLinksProps): ReactElement => {\n    const [pages, setPages] = useState<DocumentPage[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const pagesArray = [...pages.values()];\n    const hasPages = !isLoading && pagesArray.length > 0;\n\n    useEffect(() => {\n        appBridge\n            .getDocumentPagesByDocumentId(documentId)\n            .then((_pages) => {\n                setPages(_pages);\n            })\n            .finally(() => {\n                setIsLoading(false);\n            });\n    }, []);\n\n    if (isLoading) {\n        return (\n            <div className=\"tw-flex tw-justify-center tw-p-4\">\n                <LoadingCircle />\n            </div>\n        );\n    }\n\n    return hasPages ? (\n        <>\n            {pagesArray.map((page) => {\n                return (\n                    <PageLink\n                        key={page.id}\n                        page={page}\n                        appBridge={appBridge}\n                        selectedUrl={selectedUrl}\n                        onSelectUrl={onSelectUrl}\n                        itemsToExpandInitially={itemsToExpandInitially}\n                    />\n                );\n            })}\n        </>\n    ) : (\n        <div className=\"tw-py-2 tw-px-2.5 tw-pl-7 tw-leading-5 tw-text-s tw-text-text-weak\">\n            This document does not contain any pages.\n        </div>\n    );\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { AppBridgeBlock } from '@frontify/app-bridge';\nimport { useEffect, useState } from 'react';\nimport { PageLinks } from './PageLinks';\nimport { IconColorFan16, merge } from '@frontify/fondue';\nimport { InitiallyExpandedItems } from '../../LinkPlugin/FloatingLink/InsertLinkModal/types';\n\ntype DocumentLinkProps = {\n    document: {\n        id: number;\n        title: string;\n        permanentLink: string;\n    };\n    appBridge: AppBridgeBlock;\n    selectedUrl: string;\n    onSelectUrl: (url: string) => void;\n    itemsToExpandInitially: InitiallyExpandedItems;\n};\n\nexport const DocumentLink = ({\n    document,\n    appBridge,\n    selectedUrl,\n    onSelectUrl,\n    itemsToExpandInitially,\n}: DocumentLinkProps) => {\n    const [isExpanded, setIsExpanded] = useState(document.id === itemsToExpandInitially.documentId);\n    const isActive = document.permanentLink === selectedUrl;\n\n    useEffect(() => {\n        if (document.id === itemsToExpandInitially.documentId) {\n            setIsExpanded(true);\n        }\n    }, [itemsToExpandInitially, document.id]);\n\n    return (\n        <>\n            <button\n                data-test-id=\"internal-link-selector-document-link\"\n                className={merge([\n                    'tw-flex tw-flex-1 tw-space-x-2 tw-items-center tw-py-2 tw-px-2.5 tw-leading-5 tw-cursor-pointer tw-w-full',\n                    isActive\n                        ? 'tw-bg-box-selected-strong tw-text-box-selected-strong-inverse hover:tw-bg-box-selected-strong-hover:hover hover:tw-text-box-selected-strong-inverse-hover:hover'\n                        : 'hover:tw-bg-box-neutral-hover hover:tw-text-box-neutral-inverse-hover',\n                ])}\n                onClick={() => onSelectUrl(document.permanentLink)}\n                onFocus={() => onSelectUrl(document.permanentLink)}\n            >\n                <div\n                    role=\"button\"\n                    tabIndex={0}\n                    data-test-id=\"tree-item-toggle\"\n                    className=\"tw-flex tw-items-center tw-justify-center tw-p-1.5 tw-cursor-pointer\"\n                    onClick={() => setIsExpanded(!isExpanded)}\n                    onFocus={() => setIsExpanded(!isExpanded)}\n                >\n                    <div\n                        className={merge([\n                            'tw-transition-transform tw-w-0 tw-h-0 tw-font-normal tw-border-t-4 tw-border-t-transparent tw-border-b-4 tw-border-b-transparent tw-border-l-4 tw-border-l-x-strong',\n                            isExpanded ? 'tw-rotate-90' : '',\n                        ])}\n                    ></div>\n                </div>\n                <IconColorFan16 />\n                <span className=\"tw-text-s\">{document.title}</span>\n                <span className=\"tw-flex-auto tw-font-sans tw-text-xs tw-text-right\">Document</span>\n            </button>\n            {isExpanded && (\n                <PageLinks\n                    appBridge={appBridge}\n                    documentId={document.id}\n                    selectedUrl={selectedUrl}\n                    onSelectUrl={onSelectUrl}\n                    itemsToExpandInitially={itemsToExpandInitially}\n                />\n            )}\n        </>\n    );\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { AppBridgeBlock, Document } from '@frontify/app-bridge';\nimport { LoadingCircle } from '@frontify/fondue';\nimport { ReactElement, useEffect, useState } from 'react';\nimport { InitiallyExpandedItems } from '../../LinkPlugin/FloatingLink/InsertLinkModal/types';\nimport { DocumentLink } from './DocumentLink';\n\ntype DocumentLinksProps = {\n    appBridge: AppBridgeBlock;\n    selectedUrl: string;\n    onSelectUrl: (url: string) => void;\n};\n\nexport const DocumentLinks = ({ appBridge, selectedUrl, onSelectUrl }: DocumentLinksProps): ReactElement => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [documents, setDocuments] = useState<Document[]>([]);\n    const [itemsToExpandInitially, setItemsToExpandInitially] = useState<InitiallyExpandedItems>({\n        documentId: undefined,\n        pageId: undefined,\n    });\n\n    const documentArray = [...documents.values()];\n\n    useEffect(() => {\n        if (selectedUrl && documentArray.length > 0) {\n            findLocationOfSelectedUrl().then((items) => {\n                setItemsToExpandInitially(items);\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [documentArray.length]);\n\n    useEffect(() => {\n        appBridge\n            .getAllDocuments()\n            .then((_documents) => {\n                setDocuments(_documents);\n            })\n            .finally(() => {\n                setIsLoading(false);\n            });\n    }, []);\n\n    const findLocationOfSelectedUrl = async () => {\n        const itemsToExpand: InitiallyExpandedItems = {\n            documentId: undefined,\n            pageId: undefined,\n        };\n        const selectedUrlIsDocument = documentArray.find((document) => document.permanentLink === selectedUrl);\n        if (selectedUrlIsDocument) {\n            return itemsToExpand;\n        }\n        for (const document of documentArray) {\n            const pages = await appBridge.getDocumentPagesByDocumentId(document.id);\n            appBridge.getAllDocuments();\n            const pagesArray = [...pages.values()];\n            const selectedUrlIsPage = !!pagesArray.find((page) => page.permanentLink === selectedUrl);\n            if (selectedUrlIsPage) {\n                itemsToExpand.documentId = document.id;\n                return itemsToExpand;\n            }\n            for (const page of pagesArray) {\n                const sections = await appBridge.getDocumentSectionsByDocumentPageId(page.id);\n                const sectionsArray = [...sections.values()];\n                const selectedUrlIsSection = !!sectionsArray.find((section) => section.permanentLink === selectedUrl);\n                if (selectedUrlIsSection) {\n                    itemsToExpand.documentId = document.id;\n                    itemsToExpand.pageId = page.id;\n                    return itemsToExpand;\n                }\n            }\n        }\n        return itemsToExpand;\n    };\n\n    return isLoading ? (\n        <div className=\"tw-flex tw-justify-center tw-p-4\">\n            <LoadingCircle />\n        </div>\n    ) : (\n        <>\n            {documentArray.map((document) => {\n                return (\n                    <DocumentLink\n                        key={document.id}\n                        document={document}\n                        appBridge={appBridge}\n                        selectedUrl={selectedUrl}\n                        onSelectUrl={onSelectUrl}\n                        itemsToExpandInitially={itemsToExpandInitially}\n                    />\n                );\n            })}\n        </>\n    );\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { AppBridgeBlock } from '@frontify/app-bridge';\nimport { Button, ButtonEmphasis, ButtonSize, ButtonStyle, ButtonType, IconLink, Modal } from '@frontify/fondue';\nimport { useOverlayTriggerState } from '@react-stately/overlays';\nimport { KeyboardEvent, ReactElement, useEffect, useState } from 'react';\nimport { DocumentLinks } from './DocumentLinks';\n\ntype LinkSelectorProps = {\n    appBridge: AppBridgeBlock;\n    url: string;\n    onUrlChange: (value: string) => void;\n};\n\nexport const LinkSelector = ({ appBridge, url, onUrlChange }: LinkSelectorProps): ReactElement => {\n    const { open: openLinkTree, isOpen: isLinkTreeOpen, close: closeLinkTree } = useOverlayTriggerState({});\n    const [selectedUrl, setSelectedUrl] = useState<string>(url);\n\n    const onSelectUrl = (url: string) => {\n        setSelectedUrl(url);\n    };\n\n    const onPressEnter = (event: KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === 'Enter') {\n            saveLink();\n        }\n    };\n\n    useEffect(() => {\n        if (url && !selectedUrl) {\n            setSelectedUrl(url);\n        }\n    }, [url, selectedUrl]);\n\n    const saveLink = () => {\n        onUrlChange(selectedUrl);\n        closeLinkTree();\n    };\n\n    return (\n        <div data-test-id=\"internal-link-selector\" onKeyDown={onPressEnter}>\n            <Button\n                icon={<IconLink />}\n                size={ButtonSize.Medium}\n                type={ButtonType.Button}\n                style={ButtonStyle.Default}\n                emphasis={ButtonEmphasis.Default}\n                onClick={() => openLinkTree()}\n            >\n                Internal link\n            </Button>\n            <Modal zIndex={1001} onClose={() => closeLinkTree()} isOpen={isLinkTreeOpen} isDismissable>\n                <Modal.Header title=\"Select internal link\" />\n                <Modal.Body>\n                    <DocumentLinks appBridge={appBridge} selectedUrl={selectedUrl} onSelectUrl={onSelectUrl} />\n                </Modal.Body>\n                <Modal.Footer\n                    buttons={[\n                        {\n                            children: 'Cancel',\n                            onClick: () => closeLinkTree(),\n                            style: ButtonStyle.Default,\n                            emphasis: ButtonEmphasis.Default,\n                        },\n                        {\n                            children: 'Choose',\n                            onClick: (event) => {\n                                event?.preventDefault();\n                                saveLink();\n                            },\n                            style: ButtonStyle.Default,\n                            emphasis: ButtonEmphasis.Strong,\n                            disabled: !selectedUrl,\n                        },\n                    ]}\n                />\n            </Modal>\n        </div>\n    );\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { AppBridgeBlock } from '@frontify/app-bridge';\nimport {\n    Button,\n    ButtonEmphasis,\n    ButtonSize,\n    ButtonStyle,\n    Checkbox,\n    FormControl,\n    IconCheckMark20,\n    TextInput,\n} from '@frontify/fondue';\nimport { FC, ReactNode } from 'react';\nimport { LinkSelector } from '../../../shared/LinkSelector';\nimport { InsertModalStateProps } from './types';\n\ntype InsertModalProps = {\n    state: InsertModalStateProps;\n    onTextChange: (value: string) => void;\n    onUrlChange: (value: string) => void;\n    onToggleTab: (checked: boolean) => void;\n    onCancel: () => void;\n    onSave: (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | KeyboardEvent | undefined) => void;\n    hasValues: boolean;\n    isValidUrlOrEmpty: (url: string) => boolean | undefined;\n    testId?: string;\n    children?: ReactNode;\n    appBridge: AppBridgeBlock;\n};\n\nexport const InsertModal: FC<InsertModalProps> = ({\n    state,\n    onTextChange,\n    onUrlChange,\n    onToggleTab,\n    onCancel,\n    onSave,\n    isValidUrlOrEmpty,\n    hasValues,\n    testId,\n    appBridge,\n    children,\n}) => (\n    <div data-test-id={testId} className=\"tw-bg-white tw-rounded tw-shadow tw-p-7 tw-min-w-[400px] tw-overflow-y-auto\">\n        <FormControl\n            label={{\n                children: 'Text',\n                htmlFor: 'linkText',\n                required: true,\n            }}\n        >\n            <TextInput id=\"linkText\" value={state.text} placeholder=\"Link Text\" onChange={onTextChange} />\n        </FormControl>\n\n        {children}\n\n        <div className=\"tw-pt-5\">\n            <FormControl\n                label={{\n                    children: 'URL',\n                    htmlFor: 'url',\n                    required: true,\n                }}\n            >\n                <TextInput\n                    id=\"url\"\n                    value={state.url}\n                    placeholder=\"https://example.com\"\n                    focusOnMount\n                    onChange={onUrlChange}\n                />\n            </FormControl>\n            {!isValidUrlOrEmpty(state?.url) && <div className=\"tw-text-red-65 tw-mt-3\">Please enter a valid URL.</div>}\n        </div>\n\n        <div className=\"tw-mt-3\">\n            <LinkSelector url={state.url} appBridge={appBridge} onUrlChange={onUrlChange} />\n        </div>\n\n        <div className=\"tw-mt-3\">\n            <Checkbox value=\"new-tab\" label=\"Open in new tab\" state={state.newTab} onChange={onToggleTab} />\n        </div>\n        <div className=\"tw-mt-3\">\n            <div className={'tw-pt-5 tw-flex tw-gap-x-3 tw-justify-end tw-border-t tw-border-t-black-10'}>\n                <Button\n                    onClick={onCancel}\n                    size={ButtonSize.Medium}\n                    style={ButtonStyle.Default}\n                    emphasis={ButtonEmphasis.Default}\n                >\n                    Cancel\n                </Button>\n                <Button\n                    onClick={onSave}\n                    size={ButtonSize.Medium}\n                    icon={<IconCheckMark20 />}\n                    disabled={!hasValues || !isValidUrlOrEmpty(state?.url)}\n                >\n                    Save\n                </Button>\n            </div>\n        </div>\n    </div>\n);\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { PlateEditor, getAboveNode } from '@udecode/plate';\nimport { ELEMENT_BUTTON, RichTextButtonStyle, TButtonElement } from '..';\n\nexport const getButtonStyle = (editor: PlateEditor): RichTextButtonStyle => {\n    const linkNode = getAboveNode<TButtonElement>(editor, { match: { type: ELEMENT_BUTTON } });\n\n    if (!Array.isArray(linkNode)) {\n        return 'primary';\n    }\n\n    return (linkNode[0]?.buttonStyle as RichTextButtonStyle) || 'primary';\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { Dispatch, Reducer, useEffect, useReducer } from 'react';\nimport { getPluginOptions, useEditorRef, useHotkeys } from '@udecode/plate';\nimport { InsertModalDispatchType, InsertModalStateProps } from './types';\nimport { floatingButtonActions, floatingButtonSelectors } from '../floatingButtonStore';\nimport { ELEMENT_BUTTON } from '../../../createButtonPlugin';\nimport { submitFloatingButton } from '../../../transforms/submitFloatingButton';\nimport { RichTextButtonStyle } from '../../../types';\nimport { getButtonStyle } from '../../../utils/getButtonStyle';\nimport { AppBridgeBlock } from '@frontify/app-bridge';\nimport { CheckboxState } from '@frontify/fondue';\nimport { addHttps } from '../../../../../../../helpers';\nimport { isValidUrlOrEmpty } from '../../../../LinkPlugin/utils/url';\n\nconst initialState: InsertModalStateProps = {\n    url: '',\n    text: '',\n    buttonStyle: 'primary',\n    newTab: CheckboxState.Unchecked,\n};\n\nexport const InsertModalState = (): [InsertModalStateProps, Dispatch<InsertModalDispatchType>] => {\n    const [state, dispatch] = useReducer<Reducer<InsertModalStateProps, InsertModalDispatchType>>((state, action) => {\n        const { type, payload } = action;\n\n        switch (type) {\n            case 'NEW_TAB':\n                return {\n                    ...state,\n                    newTab: CheckboxState.Checked,\n                };\n            case 'SAME_TAB':\n                return {\n                    ...state,\n                    newTab: CheckboxState.Unchecked,\n                };\n            case 'URL':\n            case 'TEXT':\n            case 'BUTTON_STYLE':\n            case 'INIT':\n                return {\n                    ...state,\n                    ...payload,\n                };\n            default:\n                return state;\n        }\n    }, initialState);\n\n    return [state, dispatch];\n};\n\nexport const useInsertModal = () => {\n    const editor = useEditorRef();\n    const [state, dispatch] = InsertModalState();\n\n    useEffect(() => {\n        const buttonStyle = getButtonStyle(editor);\n\n        dispatch({\n            type: 'INIT',\n            payload: {\n                text: floatingButtonSelectors.text(),\n                buttonStyle,\n                newTab: floatingButtonSelectors.newTab() ? CheckboxState.Checked : CheckboxState.Unchecked,\n                url: floatingButtonSelectors.url(),\n            },\n        });\n    }, [dispatch, editor]);\n\n    const onTextChange = (value: string) => {\n        dispatch({\n            type: 'TEXT',\n            payload: { text: value },\n        });\n    };\n\n    const onButtonStyleChange = (value: RichTextButtonStyle) => {\n        dispatch({\n            type: 'BUTTON_STYLE',\n            payload: { buttonStyle: value },\n        });\n    };\n\n    const onUrlChange = (value: string) => {\n        dispatch({\n            type: 'URL',\n            payload: { url: value },\n        });\n    };\n\n    const onToggleTab = (checked: boolean) => {\n        checked ? dispatch({ type: 'NEW_TAB' }) : dispatch({ type: 'SAME_TAB' });\n    };\n\n    const onCancel = () => {\n        floatingButtonActions.hide();\n    };\n\n    const onSave = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | KeyboardEvent | undefined) => {\n        if (!isValidUrlOrEmpty(state.url) || !hasValues) {\n            return;\n        }\n\n        const urlToSave = addHttps(state.url);\n\n        floatingButtonActions.text(state.text);\n        floatingButtonActions.url(urlToSave);\n        floatingButtonActions.buttonStyle(state.buttonStyle);\n        floatingButtonActions.newTab(state.newTab === CheckboxState.Checked);\n\n        if (submitFloatingButton(editor)) {\n            event?.preventDefault();\n        }\n    };\n\n    const hasValues = state.url !== '' && state.text !== '';\n\n    const { appBridge } = getPluginOptions<{ appBridge: AppBridgeBlock }>(editor, ELEMENT_BUTTON);\n\n    useHotkeys(\n        'enter',\n        onSave,\n        {\n            enableOnFormTags: ['INPUT'],\n        },\n        [],\n    );\n\n    return {\n        state,\n        onTextChange,\n        onButtonStyleChange,\n        onUrlChange,\n        onToggleTab,\n        onCancel,\n        onSave,\n        hasValues,\n        isValidUrlOrEmpty,\n        appBridge,\n    };\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { FormControl } from '@frontify/fondue';\nimport { CSSProperties, ReactElement, ReactNode, useState } from 'react';\nimport { InsertModal } from '../../../../LinkPlugin/FloatingLink/InsertLinkModal/InsertModal';\nimport { useInsertModal } from './useInsertModal';\nimport { BlockStyles } from '../../../../styles';\n\nexport const InsertButtonModal = () => {\n    const modalProps = useInsertModal();\n    const { state, onButtonStyleChange } = modalProps;\n\n    return (\n        <InsertModal {...modalProps} testId=\"floating-button-insert\">\n            <div className=\"tw-pt-5\">\n                <FormControl\n                    label={{\n                        children: 'Button Style',\n                        htmlFor: 'buttonStyle',\n                        required: true,\n                    }}\n                >\n                    <HoverableButton\n                        id=\"primary\"\n                        styles={BlockStyles.buttonPrimary}\n                        isActive={state.buttonStyle === 'primary'}\n                        onClick={() => onButtonStyleChange('primary')}\n                    >\n                        {state.text || 'Primary Button'}\n                    </HoverableButton>\n\n                    <HoverableButton\n                        id=\"secondary\"\n                        styles={BlockStyles.buttonSecondary}\n                        isActive={state.buttonStyle === 'secondary'}\n                        onClick={() => onButtonStyleChange('secondary')}\n                    >\n                        {state.text || 'Secondary Button'}\n                    </HoverableButton>\n\n                    <HoverableButton\n                        id=\"tertiary\"\n                        styles={BlockStyles.buttonTertiary}\n                        isActive={state.buttonStyle === 'tertiary'}\n                        onClick={() => onButtonStyleChange('tertiary')}\n                    >\n                        {state.text || 'Tertiary Button'}\n                    </HoverableButton>\n                </FormControl>\n            </div>\n        </InsertModal>\n    );\n};\n\ntype Props = {\n    id: string;\n    styles?: CSSProperties & { hover?: CSSProperties };\n    isActive: boolean;\n    onClick: () => void;\n    children: ReactNode;\n};\n\nconst HoverableButton = ({ id, styles, isActive, onClick, children }: Props): ReactElement => {\n    const [hovered, setHovered] = useState(false);\n    const getStyles = () => (styles && styles.hover && hovered ? { ...styles, ...styles.hover } : styles);\n\n    return (\n        <button\n            data-test-id={`floating-button-insert-${id}`}\n            onMouseEnter={() => setHovered(true)}\n            onMouseLeave={() => setHovered(false)}\n            onClick={onClick}\n            style={getStyles()}\n            className={\n                isActive ? 'tw-outline tw-outline-1 tw-outline-violet-60 tw-outline-offset-2 tw-w-fit' : 'tw-w-fit'\n            }\n        >\n            {children}\n        </button>\n    );\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { EditModal } from './EditButtonModal/EditModal';\nimport { FloatingButton } from './FloatingButton';\nimport { useFloatingButtonSelectors } from './floatingButtonStore';\nimport { InsertButtonModal } from './InsertButtonModal/InsertButtonModal';\n\nexport const CustomFloatingButton = () => {\n    const isEditing = useFloatingButtonSelectors().isEditing();\n\n    const input = <InsertButtonModal />;\n    const editContent = isEditing ? input : <EditModal />;\n    return (\n        <>\n            <FloatingButton.InsertRoot>{input}</FloatingButton.InsertRoot>\n            <FloatingButton.EditRoot>{editContent}</FloatingButton.EditRoot>\n        </>\n    );\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport {\n    AnyObject,\n    EText,\n    PlateEditor,\n    Value,\n    WithOverride,\n    getAboveNode,\n    getNextNodeStartPoint,\n    getPluginType,\n    getPreviousNodeEndPoint,\n    insertNodes,\n    isCollapsed,\n    isEndPoint,\n    isStartPoint,\n    mockPlugin,\n    select,\n    withRemoveEmptyNodes,\n} from '@udecode/plate';\nimport { Path, Point, Range } from 'slate';\nimport { ELEMENT_BUTTON } from './createButtonPlugin';\n\n/**\n * Insert space after a url to wrap a button.\n * Lookup from the block start to the cursor to check if there is an url.\n * If not found, lookup before the cursor for a space character to check the url.\n *\n * On insert data:\n * Paste a string inside a button element will edit its children text but not its url.\n *\n */\n\nexport const withButton: WithOverride = (editor, { type }) => {\n    const { apply, normalizeNode } = editor;\n\n    editor.apply = (operation) => {\n        if (operation.type !== 'set_selection') {\n            apply(operation);\n            return;\n        }\n\n        const range = operation.newProperties;\n        if (!range?.focus || !range.anchor || !isCollapsed(range as Range)) {\n            apply(operation);\n            return;\n        }\n\n        const entry = getAboveNode(editor, {\n            at: range as Range,\n            match: { type: getPluginType(editor, ELEMENT_BUTTON) },\n        });\n\n        if (entry) {\n            const [, path] = entry;\n\n            let newPoint: Point | undefined;\n\n            if (isStartPoint(editor, range.focus, path)) {\n                newPoint = getPreviousNodeEndPoint(editor, path);\n            }\n\n            if (isEndPoint(editor, range.focus, path)) {\n                newPoint = getNextNodeStartPoint(editor, path);\n            }\n\n            if (newPoint) {\n                operation.newProperties = {\n                    anchor: newPoint,\n                    focus: newPoint,\n                };\n            }\n        }\n\n        apply(operation);\n    };\n\n    editor.normalizeNode = ([node, path]) => {\n        if (node.type === getPluginType(editor, ELEMENT_BUTTON)) {\n            const range = editor.selection as Range | null;\n\n            if (range && isCollapsed(range) && isEndPoint(editor, range.focus, path)) {\n                const nextPoint = getNextNodeStartPoint(editor, path);\n\n                // select next text node if any\n                if (nextPoint) {\n                    select(editor, nextPoint);\n                } else {\n                    // insert text node then select\n                    const nextPath = Path.next(path);\n                    insertNodes(editor, { text: '' } as EText<Value>, { at: nextPath });\n                    select(editor, nextPath);\n                }\n            }\n        }\n\n        normalizeNode([node, path]);\n    };\n\n    return withRemoveEmptyNodes<Value, PlateEditor<Value>>(\n        editor,\n        mockPlugin<AnyObject, Value, PlateEditor<Value>>({\n            options: { types: type },\n        }),\n    );\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { AppBridgeBlock } from '@frontify/app-bridge';\nimport { Plugin, PluginProps } from '@frontify/fondue';\nimport { RangeBeforeOptions, createPluginFactory } from '@udecode/plate';\nimport type { CSSProperties } from 'react';\nimport { isValidUrl } from '../LinkPlugin/utils/url';\nimport { ButtonMarkupElement } from './ButtonMarkupElement';\nimport { ButtonButton } from './components/ButtonButton';\nimport { CustomFloatingButton } from './components/FloatingButton/CustomFloatingButton';\nimport { BlockButtonStyles } from './utils';\nimport { withButton } from './withButton';\n\nexport const ELEMENT_BUTTON = 'button';\nexport const BUTTON_PLUGIN = 'button-plugin';\n\n// eslint-disable-next-line\nexport interface ButtonPlugin {\n    forceSubmit?: boolean;\n\n    /**\n     * Allow custom config for rangeBeforeOptions.\n     * @example default\n     * {\n     *   matchString: ' ',\n     *   skipInvalid: true,\n     *   afterMatch: true,\n     * }\n     */\n    rangeBeforeOptions?: RangeBeforeOptions;\n\n    /**\n     * Hotkeys to trigger floating button.\n     * @default 'command+k, ctrl+k'\n     */\n    triggerFloatingButtonHotkeys: string;\n\n    /**\n     * Callback to validate an url.\n     * @default isUrl\n     */\n    isUrl: (text: string) => boolean;\n\n    /**\n     * Callback to optionally get the href for a url\n     * @returns href: an optional link to be used that is different from the text content (example https://google.com for google.com)\n     */\n    getUrlHref?: (url: string) => string | undefined;\n\n    /**\n     * On keyboard shortcut or toolbar mousedown, get the link url by calling this promise. The\n     * default behavior is to use the browser's native `prompt`.\n     */\n    getLinkUrl?: (prevUrl: string | null) => Promise<string | null>;\n}\n\n/**\n * Enables support for hyperlinks.\n */\nexport const createButtonPlugin = (appBridge: AppBridgeBlock) =>\n    createPluginFactory({\n        key: ELEMENT_BUTTON,\n        isElement: true,\n        isInline: true,\n        props: ({ element }) => ({\n            nodeProps: { href: element?.url, target: element?.target },\n        }),\n        withOverrides: withButton,\n        renderAfterEditable: CustomFloatingButton,\n        options: {\n            isUrl: isValidUrl,\n            rangeBeforeOptions: {\n                matchString: ' ',\n                skipInvalid: true,\n                afterMatch: true,\n            },\n            triggerFloatingButtonHotkeys: 'command+shift+k, ctrl+shift+k',\n            appBridge,\n        },\n        then: (editor, { type }) => ({\n            deserializeHtml: {\n                rules: [\n                    {\n                        validNodeName: 'A',\n                        validClassName: 'btn',\n                    },\n                ],\n                getNode: (el) => ({\n                    type,\n                    url: el.getAttribute('href'),\n                    target: el.getAttribute('target') || '_blank',\n                }),\n            },\n        }),\n    })();\n\nexport type ButtonPluginProps = Omit<PluginProps, 'styles'> & {\n    styles?: Record<string, CSSProperties & { hover?: CSSProperties }>;\n} & { appBridge: AppBridgeBlock };\n\n// eslint-disable-next-line\nexport class ButtonPlugin extends Plugin {\n    public styles: CSSProperties = {};\n    private appBridge: AppBridgeBlock;\n    constructor({ styles = BlockButtonStyles, ...props }: ButtonPluginProps) {\n        super(BUTTON_PLUGIN, {\n            button: ButtonButton,\n            markupElement: new ButtonMarkupElement(),\n            ...props,\n        });\n        this.styles = styles;\n        this.appBridge = props?.appBridge as AppBridgeBlock;\n    }\n\n    plugins() {\n        return [createButtonPlugin(this.appBridge)];\n    }\n}\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport type { CSSProperties } from 'react';\nimport { LINK_PLUGIN } from './LinkPlugin/id';\nimport { BlockButtonStyles } from './ButtonPlugin';\n\nexport const enum TextStyles {\n    heading1 = 'heading1',\n    heading2 = 'heading2',\n    heading3 = 'heading3',\n    heading4 = 'heading4',\n    custom1 = 'custom1',\n    custom2 = 'custom2',\n    custom3 = 'custom3',\n    quote = 'quote',\n    imageCaption = 'imageCaption',\n    imageTitle = 'imageTitle',\n    p = 'p',\n}\nexport const BlockStyles: Record<string, CSSProperties & { hover?: CSSProperties }> = {\n    [TextStyles.heading1]: {\n        display: 'inline-block',\n        fontSize: 'var(--f-theme-settings-heading1-font-size)',\n        lineHeight: 'var(--f-theme-settings-heading1-line-height)',\n        marginTop: 'var(--f-theme-settings-heading1-margin-top)',\n        marginBottom: 'var(--f-theme-settings-heading1-margin-bottom)',\n        textDecoration: 'var(--f-theme-settings-heading1-text-decoration)',\n        fontStyle: 'var(--f-theme-settings-heading1-font-style)',\n        textTransform: 'var(--f-theme-settings-heading1-text-transform)' as CSSProperties['textTransform'],\n        letterSpacing: 'var(--f-theme-settings-heading1-letter-spacing)',\n        fontWeight: 'var(--f-theme-settings-heading1-font-weight)',\n        fontFamily: 'var(--f-theme-settings-heading1-font-family)',\n        color: 'var(--f-theme-settings-heading1-color)',\n    },\n    [TextStyles.heading2]: {\n        fontSize: 'var(--f-theme-settings-heading2-font-size)',\n        lineHeight: 'var(--f-theme-settings-heading2-line-height)',\n        marginTop: 'var(--f-theme-settings-heading2-margin-top)',\n        marginBottom: 'var(--f-theme-settings-heading2-margin-bottom)',\n        textDecoration: 'var(--f-theme-settings-heading2-text-decoration)',\n        fontStyle: 'var(--f-theme-settings-heading2-font-style)',\n        textTransform: 'var(--f-theme-settings-heading2-text-transform)' as CSSProperties['textTransform'],\n        letterSpacing: 'var(--f-theme-settings-heading2-letter-spacing)',\n        fontWeight: 'var(--f-theme-settings-heading2-font-weight)',\n        fontFamily: 'var(--f-theme-settings-heading2-font-family)',\n        color: 'var(--f-theme-settings-heading2-color)',\n    },\n    [TextStyles.heading3]: {\n        fontSize: 'var(--f-theme-settings-heading3-font-size)',\n        lineHeight: 'var(--f-theme-settings-heading3-line-height)',\n        marginTop: 'var(--f-theme-settings-heading3-margin-top)',\n        marginBottom: 'var(--f-theme-settings-heading3-margin-bottom)',\n        textDecoration: 'var(--f-theme-settings-heading3-text-decoration)',\n        fontStyle: 'var(--f-theme-settings-heading3-font-style)',\n        textTransform: 'var(--f-theme-settings-heading3-text-transform)' as CSSProperties['textTransform'],\n        letterSpacing: 'var(--f-theme-settings-heading3-letter-spacing)',\n        fontWeight: 'var(--f-theme-settings-heading3-font-weight)',\n        fontFamily: 'var(--f-theme-settings-heading3-font-family)',\n        color: 'var(--f-theme-settings-heading3-color)',\n    },\n    [TextStyles.heading4]: {\n        fontSize: 'var(--f-theme-settings-heading4-font-size)',\n        lineHeight: 'var(--f-theme-settings-heading4-line-height)',\n        marginTop: 'var(--f-theme-settings-heading4-margin-top)',\n        marginBottom: 'var(--f-theme-settings-heading4-margin-bottom)',\n        textDecoration: 'var(--f-theme-settings-heading4-text-decoration)',\n        fontStyle: 'var(--f-theme-settings-heading4-font-style)',\n        textTransform: 'var(--f-theme-settings-heading4-text-transform)' as CSSProperties['textTransform'],\n        letterSpacing: 'var(--f-theme-settings-heading4-letter-spacing)',\n        fontWeight: 'var(--f-theme-settings-heading4-font-weight)',\n        fontFamily: 'var(--f-theme-settings-heading4-font-family)',\n        color: 'var(--f-theme-settings-heading4-color)',\n    },\n    [TextStyles.custom1]: {\n        fontSize: 'var(--f-theme-settings-custom1-font-size)',\n        lineHeight: 'var(--f-theme-settings-custom1-line-height)',\n        marginTop: 'var(--f-theme-settings-custom1-margin-top)',\n        marginBottom: 'var(--f-theme-settings-custom1-margin-bottom)',\n        textDecoration: 'var(--f-theme-settings-custom1-text-decoration)',\n        fontStyle: 'var(--f-theme-settings-custom1-font-style)',\n        textTransform: 'var(--f-theme-settings-custom1-text-transform)' as CSSProperties['textTransform'],\n        letterSpacing: 'var(--f-theme-settings-custom1-letter-spacing)',\n        fontWeight: 'var(--f-theme-settings-custom1-font-weight)',\n        fontFamily: 'var(--f-theme-settings-custom1-font-family)',\n        color: 'var(--f-theme-settings-custom1-color)',\n    },\n    [TextStyles.custom2]: {\n        fontSize: 'var(--f-theme-settings-custom2-font-size)',\n        lineHeight: 'var(--f-theme-settings-custom2-line-height)',\n        marginTop: 'var(--f-theme-settings-custom2-margin-top)',\n        marginBottom: 'var(--f-theme-settings-custom2-margin-bottom)',\n        textDecoration: 'var(--f-theme-settings-custom2-text-decoration)',\n        fontStyle: 'var(--f-theme-settings-custom2-font-style)',\n        textTransform: 'var(--f-theme-settings-custom2-text-transform)' as CSSProperties['textTransform'],\n        letterSpacing: 'var(--f-theme-settings-custom2-letter-spacing)',\n        fontWeight: 'var(--f-theme-settings-custom2-font-weight)',\n        fontFamily: 'var(--f-theme-settings-custom2-font-family)',\n        color: 'var(--f-theme-settings-custom2-color)',\n    },\n    [TextStyles.custom3]: {\n        fontSize: 'var(--f-theme-settings-custom3-font-size)',\n        lineHeight: 'var(--f-theme-settings-custom3-line-height)',\n        marginTop: 'var(--f-theme-settings-custom3-margin-top)',\n        marginBottom: 'var(--f-theme-settings-custom3-margin-bottom)',\n        textDecoration: 'var(--f-theme-settings-custom3-text-decoration)',\n        fontStyle: 'var(--f-theme-settings-custom3-font-style)',\n        textTransform: 'var(--f-theme-settings-custom3-text-transform)' as CSSProperties['textTransform'],\n        letterSpacing: 'var(--f-theme-settings-custom3-letter-spacing)',\n        fontWeight: 'var(--f-theme-settings-custom3-font-weight)',\n        fontFamily: 'var(--f-theme-settings-custom3-font-family)',\n        color: 'var(--f-theme-settings-custom3-color)',\n    },\n    [TextStyles.p]: {\n        fontSize: 'var(--f-theme-settings-body-font-size)',\n        lineHeight: 'var(--f-theme-settings-body-line-height)',\n        marginTop: 'var(--f-theme-settings-body-margin-top)',\n        marginBottom: 'var(--f-theme-settings-body-margin-bottom)',\n        textDecoration: 'var(--f-theme-settings-body-text-decoration)',\n        fontStyle: 'var(--f-theme-settings-body-font-style)',\n        textTransform: 'var(--f-theme-settings-body-text-transform)' as CSSProperties['textTransform'],\n        letterSpacing: 'var(--f-theme-settings-body-letter-spacing)',\n        fontWeight: 'var(--f-theme-settings-body-font-weight)',\n        fontFamily: 'var(--f-theme-settings-body-font-family)',\n        color: 'var(--f-theme-settings-body-color)',\n    },\n    [TextStyles.quote]: {\n        fontSize: 'var(--f-theme-settings-quote-font-size)',\n        lineHeight: 'var(--f-theme-settings-quote-line-height)',\n        marginTop: 'var(--f-theme-settings-quote-margin-top)',\n        marginBottom: 'var(--f-theme-settings-quote-margin-bottom)',\n        textDecoration: 'var(--f-theme-settings-quote-text-decoration)',\n        fontStyle: 'var(--f-theme-settings-quote-font-style)',\n        textTransform: 'var(--f-theme-settings-quote-text-transform)' as CSSProperties['textTransform'],\n        letterSpacing: 'var(--f-theme-settings-quote-letter-spacing)',\n        fontWeight: 'var(--f-theme-settings-quote-font-weight)',\n        fontFamily: 'var(--f-theme-settings-quote-font-family)',\n        color: 'var(--f-theme-settings-quote-color)',\n    },\n    [TextStyles.imageCaption]: {\n        fontSize: 'var(--f-theme-settings-image-caption-font-size)',\n        lineHeight: 'var(--f-theme-settings-image-caption-line-height)',\n        marginTop: 'var(--f-theme-settings-image-caption-margin-top)',\n        marginBottom: 'var(--f-theme-settings-image-caption-margin-bottom)',\n        textDecoration: 'var(--f-theme-settings-image-caption-text-decoration)',\n        fontStyle: 'var(--f-theme-settings-image-caption-font-style)',\n        textTransform: 'var(--f-theme-settings-image-caption-text-transform)' as CSSProperties['textTransform'],\n        letterSpacing: 'var(--f-theme-settings-image-caption-letter-spacing)',\n        fontWeight: 'var(--f-theme-settings-image-caption-font-weight)',\n        fontFamily: 'var(--f-theme-settings-image-caption-font-family)',\n        color: 'var(--f-theme-settings-image-caption-color)',\n    },\n    [TextStyles.imageTitle]: {\n        fontSize: 'var(--f-theme-settings-image-title-font-size)',\n        lineHeight: 'var(--f-theme-settings-image-title-line-height)',\n        marginTop: 'var(--f-theme-settings-image-title-margin-top)',\n        marginBottom: 'var(--f-theme-settings-image-title-margin-bottom)',\n        textDecoration: 'var(--f-theme-settings-image-title-text-decoration)',\n        fontStyle: 'var(--f-theme-settings-image-title-font-style)',\n        textTransform: 'var(--f-theme-settings-image-title-text-transform)' as CSSProperties['textTransform'],\n        letterSpacing: 'var(--f-theme-settings-image-title-letter-spacing)',\n        fontWeight: 'var(--f-theme-settings-image-title-font-weight)',\n        fontFamily: 'var(--f-theme-settings-image-title-font-family)',\n        color: 'var(--f-theme-settings-image-title-color)',\n    },\n    [LINK_PLUGIN]: {\n        fontSize: 'var(--f-theme-settings-link-font-size)',\n        lineHeight: 'var(--f-theme-settings-link-line-height)',\n        marginTop: 'var(--f-theme-settings-link-margin-top)',\n        marginBottom: 'var(--f-theme-settings-link-margin-bottom)',\n        textDecoration: 'var(--f-theme-settings-link-text-decoration)',\n        fontStyle: 'var(--f-theme-settings-link-font-style)',\n        textTransform: 'var(--f-theme-settings-link-text-transform)' as CSSProperties['textTransform'],\n        letterSpacing: 'var(--f-theme-settings-link-letter-spacing)',\n        fontWeight: 'var(--f-theme-settings-link-font-weight)',\n        fontFamily: 'var(--f-theme-settings-link-font-family)',\n        color: 'var(--f-theme-settings-link-color)',\n    },\n    ...BlockButtonStyles,\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { IconPen16, IconTrashBin16 } from '@frontify/fondue';\nimport { useFloatingLinkUrlInput } from '@udecode/plate';\nimport { FloatingLink } from '../FloatingLink';\nimport { BlockStyles } from '../../../styles';\n\nexport const EditModal = () => {\n    const urlHtmlProps = useFloatingLinkUrlInput({});\n\n    return (\n        <div data-test-id=\"floating-link-edit\" className=\"tw-bg-white tw-rounded tw-shadow tw-p-4 tw-min-w-[400px]\">\n            <span data-test-id={'preview-link-flyout'} className=\"tw-flex tw-justify-between\">\n                <span className=\"tw-pointer-events-none\" style={BlockStyles.p}>\n                    {urlHtmlProps.defaultValue}\n                </span>\n                <span className=\"tw-flex tw-gap-2\">\n                    <span\n                        role=\"button\"\n                        tabIndex={0}\n                        data-test-id={'edit-link-button'}\n                        className=\"tw-transition tw-cursor-pointer tw-rounded hover:tw-bg-black-10 tw-p-1\"\n                    >\n                        <FloatingLink.EditButton>\n                            <IconPen16 />\n                        </FloatingLink.EditButton>\n                    </span>\n\n                    <span\n                        role=\"button\"\n                        tabIndex={0}\n                        data-test-id={'remove-link-button'}\n                        className=\"tw-transition tw-cursor-pointer tw-rounded hover:tw-bg-black-10 tw-p-1\"\n                    >\n                        <FloatingLink.UnlinkButton>\n                            <IconTrashBin16 />\n                        </FloatingLink.UnlinkButton>\n                    </span>\n                </span>\n            </span>\n        </div>\n    );\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport {\n    ELEMENT_LINK,\n    FloatingLinkProps,\n    HTMLPropsAs,\n    LinkPlugin,\n    floatingLinkActions,\n    floatingLinkSelectors,\n    getAboveNode,\n    getDefaultBoundingClientRect,\n    getEndPoint,\n    getPluginOptions,\n    getPluginType,\n    getRangeBoundingClientRect,\n    getStartPoint,\n    someNode,\n    triggerFloatingLinkEdit,\n    useComposedRef,\n    useEditorRef,\n    useFloatingLinkEnter,\n    useFloatingLinkEscape,\n    useFloatingLinkSelectors,\n    useHotkeys,\n    usePlateSelectors,\n    useVirtualFloatingLink,\n} from '@udecode/plate';\nimport { useCallback, useEffect } from 'react';\nimport { getUrlFromEditor } from '../../utils';\n\nexport const useFloatingLinkEdit = ({ floatingOptions, ...props }: FloatingLinkProps): HTMLPropsAs<'div'> => {\n    const editor = useEditorRef();\n    const keyEditor = usePlateSelectors().keyEditor();\n    const mode = useFloatingLinkSelectors().mode();\n    const open = useFloatingLinkSelectors().isOpen(editor.id);\n\n    const { triggerFloatingLinkHotkeys = 'command+k, ctrl+k' } = getPluginOptions<LinkPlugin>(editor, ELEMENT_LINK);\n\n    const getBoundingClientRect = useCallback(() => {\n        const entry = getAboveNode(editor, {\n            match: { type: getPluginType(editor, ELEMENT_LINK) },\n        });\n\n        if (entry) {\n            const [, path] = entry;\n            return getRangeBoundingClientRect(editor, {\n                anchor: getStartPoint(editor, path),\n                focus: getEndPoint(editor, path),\n            });\n        }\n\n        return getDefaultBoundingClientRect();\n    }, [editor]);\n\n    const isOpen = open && mode === 'edit';\n\n    const { update, style, floating } = useVirtualFloatingLink({\n        editorId: editor.id,\n        open: isOpen,\n        getBoundingClientRect,\n        ...floatingOptions,\n    });\n\n    useEffect(() => {\n        const url = getUrlFromEditor(editor);\n        if (url) {\n            floatingLinkActions.url(url);\n        }\n\n        if (\n            editor.selection &&\n            someNode(editor, {\n                match: { type: getPluginType(editor, ELEMENT_LINK) },\n            })\n        ) {\n            floatingLinkActions.show('edit', editor.id);\n            update();\n            return;\n        }\n\n        if (floatingLinkSelectors.mode() === 'edit') {\n            floatingLinkActions.hide();\n        }\n    }, [editor, keyEditor, update]);\n\n    useHotkeys(\n        triggerFloatingLinkHotkeys,\n        (e) => {\n            e.preventDefault();\n\n            if (floatingLinkSelectors.mode() === 'edit') {\n                triggerFloatingLinkEdit(editor);\n            }\n        },\n        {\n            enableOnContentEditable: true,\n        },\n        [],\n    );\n\n    useFloatingLinkEnter();\n\n    useFloatingLinkEscape();\n\n    return {\n        style: {\n            ...style,\n            zIndex: 1000,\n        },\n        ...props,\n        ref: useComposedRef<HTMLElement | null>(props.ref, floating),\n    };\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { AppBridgeBlock } from '@frontify/app-bridge';\nimport { CheckboxState } from '@frontify/fondue';\nimport {\n    ELEMENT_LINK,\n    floatingLinkActions,\n    floatingLinkSelectors,\n    getPluginOptions,\n    submitFloatingLink,\n    useEditorRef,\n    useHotkeys,\n} from '@udecode/plate';\nimport { Dispatch, Reducer, useEffect, useReducer } from 'react';\nimport { getLegacyUrl, getUrl } from '../../utils';\nimport { InsertModalDispatchType, InsertModalStateProps } from './types';\nimport { addHttps } from '../../../../../../helpers';\nimport { isValidUrlOrEmpty } from '../../utils/url';\n\nconst initialState: InsertModalStateProps = {\n    url: '',\n    text: '',\n    newTab: CheckboxState.Unchecked,\n};\n\nexport const InsertModalState = (): [InsertModalStateProps, Dispatch<InsertModalDispatchType>] => {\n    const [state, dispatch] = useReducer<Reducer<InsertModalStateProps, InsertModalDispatchType>>((state, action) => {\n        const { type, payload } = action;\n\n        switch (type) {\n            case 'NEW_TAB':\n                return {\n                    ...state,\n                    newTab: CheckboxState.Checked,\n                };\n            case 'SAME_TAB':\n                return {\n                    ...state,\n                    newTab: CheckboxState.Unchecked,\n                };\n            case 'URL':\n            case 'TEXT':\n            case 'INIT':\n                return {\n                    ...state,\n                    ...payload,\n                };\n            default:\n                return state;\n        }\n    }, initialState);\n\n    return [state, dispatch];\n};\n\nexport const useInsertModal = () => {\n    const editor = useEditorRef();\n    const [state, dispatch] = InsertModalState();\n\n    useEffect(() => {\n        const legacyUrl = getLegacyUrl(editor);\n        const url = getUrl(editor);\n\n        dispatch({\n            type: 'INIT',\n            payload: {\n                text: floatingLinkSelectors.text(),\n                newTab: floatingLinkSelectors.newTab() ? CheckboxState.Checked : CheckboxState.Unchecked,\n                url: legacyUrl && url === '' ? legacyUrl : floatingLinkSelectors.url(),\n            },\n        });\n    }, [dispatch, editor]);\n\n    const onTextChange = (value: string) => {\n        dispatch({\n            type: 'TEXT',\n            payload: { text: value },\n        });\n    };\n\n    const onUrlChange = (value: string) => {\n        dispatch({\n            type: 'URL',\n            payload: { url: value },\n        });\n    };\n\n    const onToggleTab = (checked: boolean) => {\n        checked ? dispatch({ type: 'NEW_TAB' }) : dispatch({ type: 'SAME_TAB' });\n    };\n\n    const onCancel = () => {\n        floatingLinkActions.hide();\n    };\n\n    const onSave = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | KeyboardEvent | undefined) => {\n        if (!isValidUrlOrEmpty(state.url) || !hasValues) {\n            return;\n        }\n\n        const urlToSave = addHttps(state.url);\n\n        floatingLinkActions.text(state.text);\n        floatingLinkActions.url(urlToSave);\n        floatingLinkActions.newTab(state.newTab === CheckboxState.Checked);\n\n        if (submitFloatingLink(editor)) {\n            event?.preventDefault();\n        }\n    };\n\n    const hasValues = state.url !== '' && state.text !== '';\n\n    const { appBridge } = getPluginOptions<{ appBridge: AppBridgeBlock }>(editor, ELEMENT_LINK);\n\n    useHotkeys(\n        'enter',\n        onSave,\n        {\n            enableOnFormTags: ['INPUT'],\n        },\n        [],\n    );\n\n    return {\n        state,\n        onTextChange,\n        onUrlChange,\n        onToggleTab,\n        onCancel,\n        onSave,\n        hasValues,\n        isValidUrlOrEmpty,\n        appBridge,\n    };\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { InsertModal, useInsertModal } from '.';\n\nexport const InsertLinkModal = () => <InsertModal {...useInsertModal()} testId=\"floating-link-insert\" />;\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { TEditableProps, useFloatingLinkSelectors } from '@udecode/plate';\n\nimport { EditModal } from './EditLinkModal';\nimport { FloatingLink } from './FloatingLink';\nimport { InsertLinkModal } from './InsertLinkModal/InsertLinkModal';\n\nexport const CustomFloatingLink = ({ readOnly }: TEditableProps) => {\n    const isEditing = useFloatingLinkSelectors().isEditing();\n\n    if (readOnly) {\n        return null;\n    }\n\n    const input = <InsertLinkModal />;\n    const editContent = isEditing ? input : <EditModal />;\n\n    return (\n        <>\n            <FloatingLink.InsertRoot>{input}</FloatingLink.InsertRoot>\n\n            <FloatingLink.EditRoot>{editContent}</FloatingLink.EditRoot>\n        </>\n    );\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport {\n    IconLink,\n    IconSize,\n    PluginButtonProps,\n    getButtonClassNames,\n    getHotkeyByPlatform,\n    getTooltip,\n} from '@frontify/fondue';\nimport { LinkToolbarButton, isRangeInSameBlock, useEventPlateId, usePlateEditorState } from '@udecode/plate';\n\nexport const LinkButton = ({ id, editorId }: PluginButtonProps) => {\n    const editor = usePlateEditorState(useEventPlateId(editorId));\n    const isEnabled = !!isRangeInSameBlock(editor, {\n        at: editor.selection,\n    });\n\n    return (\n        <div data-plugin-id={id}>\n            <LinkToolbarButton\n                tooltip={getTooltip(\n                    isEnabled\n                        ? `Link\\n${getHotkeyByPlatform('Ctrl+K')}`\n                        : 'Links can only be set for a single text block.',\n                )}\n                icon={\n                    <span className=\"tw-p-2 tw-h-8 tw-justify-center tw-items-center tw-flex\">\n                        <IconLink size={IconSize.Size16} />\n                    </span>\n                }\n                classNames={getButtonClassNames(isEnabled)}\n                styles={{ root: { width: '24px', height: '24px' } }}\n                actionHandler=\"onMouseDown\"\n            />\n        </div>\n    );\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { HTMLPropsAs, LinkRootProps, useElementProps } from '@udecode/plate';\nimport type { MouseEvent } from 'react';\nimport { TLinkElement } from '../types';\nimport { BlockStyles } from '../../styles';\nimport { LINK_PLUGIN } from '../id';\n\nconst useLink = (props: LinkRootProps): HTMLPropsAs<'a'> => {\n    const _props = useElementProps<TLinkElement, 'a'>({\n        ...props,\n        elementToAttributes: (element) => ({\n            href: element.url || element.chosenLink?.searchResult?.link || '',\n            target: element.target || '_blank',\n        }),\n    });\n\n    return {\n        ..._props,\n        // quick fix: hovering <a> with href loses the editor focus\n        onMouseOver: (event: MouseEvent) => {\n            event.stopPropagation();\n        },\n    };\n};\n\nexport const LinkMarkupElementNode = (props: LinkRootProps) => {\n    const htmlProps = useLink(props);\n    const { attributes, children } = props;\n\n    return (\n        <a {...attributes} href={htmlProps.href} target={htmlProps.target} style={BlockStyles[LINK_PLUGIN]}>\n            {children}\n        </a>\n    );\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { MarkupElement } from '@frontify/fondue';\nimport { ELEMENT_LINK } from '@udecode/plate';\nimport { LinkMarkupElementNode } from './LinkMarkupElementNode';\n\nexport class LinkMarkupElement extends MarkupElement {\n    constructor(id = ELEMENT_LINK, node = LinkMarkupElementNode) {\n        super(id, node);\n    }\n}\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport type { CSSProperties } from 'react';\nimport { AppBridgeBlock } from '@frontify/app-bridge';\nimport { Plugin, PluginProps } from '@frontify/fondue';\nimport { createLinkPlugin as createPlateLinkPlugin, createPluginFactory } from '@udecode/plate';\n\nimport { CustomFloatingLink } from './FloatingLink/CustomFloatingLink';\nimport { LINK_PLUGIN } from './id';\nimport { LinkButton } from './LinkButton';\nimport { LinkMarkupElement } from './LinkMarkupElement';\nimport { isValidUrl } from './utils/url';\nimport { BlockStyles } from '../styles';\n\nexport const createLinkPlugin = (appBridge: AppBridgeBlock) =>\n    createPluginFactory({\n        ...createPlateLinkPlugin(),\n        renderAfterEditable: CustomFloatingLink,\n        options: {\n            isUrl: isValidUrl,\n            rangeBeforeOptions: {\n                matchString: ' ',\n                skipInvalid: true,\n                afterMatch: true,\n            },\n            triggerFloatingLinkHotkeys: 'command+k, ctrl+k',\n            appBridge,\n        },\n    })();\n\nexport type LinkPluginProps = PluginProps & { appBridge: AppBridgeBlock };\n\nexport class LinkPlugin extends Plugin {\n    private appBridge: AppBridgeBlock;\n    public styles: CSSProperties = {};\n    constructor(props?: LinkPluginProps, styles = BlockStyles[LINK_PLUGIN]) {\n        super(LINK_PLUGIN, {\n            button: LinkButton,\n            markupElement: new LinkMarkupElement(),\n            ...props,\n        });\n        this.styles = styles;\n        this.appBridge = props?.appBridge as AppBridgeBlock;\n    }\n\n    plugins() {\n        return [createLinkPlugin(this.appBridge)];\n    }\n}\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { createPluginFactory } from '@udecode/plate';\nimport type { CSSProperties } from 'react';\nimport {\n    MarkupElement,\n    Plugin,\n    PluginProps,\n    TextStyleRenderElementProps,\n    alignmentClassnames,\n    getColumnBreakClasses,\n    merge,\n} from '@frontify/fondue';\nimport { BlockStyles, TextStyles } from '../styles';\n\nconst ID = 'textstyle-custom1-plugin';\n\nexport class Custom1Plugin extends Plugin {\n    public styles: CSSProperties = {};\n    constructor({ styles = BlockStyles.custom1, ...props }: PluginProps = {}) {\n        super(TextStyles.custom1, {\n            label: 'Custom 1',\n            markupElement: new Custom1MarkupElement(),\n            ...props,\n        });\n        this.styles = styles;\n    }\n\n    plugins() {\n        return [createCustom1Plugin(this.styles)];\n    }\n}\n\nclass Custom1MarkupElement extends MarkupElement {\n    constructor(id = ID, node = Custom1MarkupElementNode) {\n        super(id, node);\n    }\n}\n\nconst Custom1MarkupElementNode = ({ element, attributes, children, styles }: TextStyleRenderElementProps) => {\n    const align = element.align as string;\n    return (\n        <p\n            {...attributes}\n            className={merge([align && alignmentClassnames[align], getColumnBreakClasses(element), 'a-custom1'])}\n        >\n            <span style={styles}>{children}</span>\n        </p>\n    );\n};\n\nconst createCustom1Plugin = (styles: CSSProperties) =>\n    createPluginFactory({\n        key: TextStyles.custom1,\n        isElement: true,\n        deserializeHtml: {\n            rules: [{ validClassName: TextStyles.custom1 }],\n        },\n    })({\n        component: (props: TextStyleRenderElementProps) => <Custom1MarkupElementNode {...props} styles={styles} />,\n    });\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { createPluginFactory } from '@udecode/plate';\nimport type { CSSProperties } from 'react';\nimport {\n    MarkupElement,\n    Plugin,\n    PluginProps,\n    TextStyleRenderElementProps,\n    alignmentClassnames,\n    getColumnBreakClasses,\n    merge,\n} from '@frontify/fondue';\nimport { BlockStyles, TextStyles } from '../styles';\n\nconst ID = 'textstyle-custom2-plugin';\n\nexport class Custom2Plugin extends Plugin {\n    public styles: CSSProperties = {};\n    constructor({ styles = BlockStyles.custom2, ...props }: PluginProps = {}) {\n        super(TextStyles.custom2, {\n            label: 'Custom 2',\n            markupElement: new Custom2MarkupElement(),\n            ...props,\n        });\n        this.styles = styles;\n    }\n\n    plugins() {\n        return [createCustom2Plugin(this.styles)];\n    }\n}\n\nclass Custom2MarkupElement extends MarkupElement {\n    constructor(id = ID, node = Custom2MarkupElementNode) {\n        super(id, node);\n    }\n}\n\nconst Custom2MarkupElementNode = ({ element, attributes, children, styles }: TextStyleRenderElementProps) => {\n    const align = element.align as string;\n    return (\n        <p\n            {...attributes}\n            className={merge([align && alignmentClassnames[align], getColumnBreakClasses(element), 'a-custom2'])}\n        >\n            <span style={styles}>{children}</span>\n        </p>\n    );\n};\n\nconst createCustom2Plugin = (styles: CSSProperties) =>\n    createPluginFactory({\n        key: TextStyles.custom2,\n        isElement: true,\n        deserializeHtml: {\n            rules: [{ validClassName: TextStyles.custom2 }],\n        },\n    })({\n        component: (props: TextStyleRenderElementProps) => <Custom2MarkupElementNode {...props} styles={styles} />,\n    });\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { PlateRenderElementProps, createPluginFactory } from '@udecode/plate';\nimport type { CSSProperties } from 'react';\nimport {\n    MarkupElement,\n    Plugin,\n    PluginProps,\n    TextStyleRenderElementProps,\n    TextStyles,\n    alignmentClassnames,\n    getColumnBreakClasses,\n    merge,\n} from '@frontify/fondue';\nimport { BlockStyles } from '../styles';\n\nconst ID = 'textstyle-custom3-plugin';\n\nexport class Custom3Plugin extends Plugin {\n    public styles: CSSProperties = {};\n    constructor({ styles = BlockStyles.custom3, ...props }: PluginProps = {}) {\n        super(TextStyles.custom3, {\n            label: 'Custom 3',\n            markupElement: new Custom3MarkupElement(),\n            ...props,\n        });\n        this.styles = styles;\n    }\n\n    plugins() {\n        return [createCustom3Plugin(this.styles)];\n    }\n}\n\nclass Custom3MarkupElement extends MarkupElement {\n    constructor(id = ID, node = Custom3MarkupElementNode) {\n        super(id, node);\n    }\n}\n\nconst Custom3MarkupElementNode = ({ element, attributes, children, styles }: TextStyleRenderElementProps) => {\n    const align = element.align as string;\n    return (\n        <p\n            {...attributes}\n            className={merge([align && alignmentClassnames[align], getColumnBreakClasses(element), 'a-custom3'])}\n        >\n            <span style={styles}>{children}</span>\n        </p>\n    );\n};\n\nconst createCustom3Plugin = (styles: CSSProperties) =>\n    createPluginFactory({\n        key: TextStyles.custom3,\n        isElement: true,\n        deserializeHtml: {\n            rules: [{ validClassName: TextStyles.custom3 }],\n        },\n    })({\n        component: (props: PlateRenderElementProps) => <Custom3MarkupElementNode {...props} styles={styles} />,\n    });\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { PlateRenderElementProps, createPluginFactory } from '@udecode/plate';\nimport type { CSSProperties } from 'react';\nimport {\n    MarkupElement,\n    Plugin,\n    PluginProps,\n    TextStyleRenderElementProps,\n    alignmentClassnames,\n    getColumnBreakClasses,\n    merge,\n} from '@frontify/fondue';\nimport { BlockStyles, TextStyles } from '../styles';\n\nconst ID = 'textstyle-heading1-plugin';\nexport class Heading1Plugin extends Plugin {\n    public styles: CSSProperties = {};\n    constructor({ styles = BlockStyles.heading1, ...props }: PluginProps = {}) {\n        super(TextStyles.heading1, {\n            label: 'Heading 1',\n            markupElement: new Heading1MarkupElement(),\n            ...props,\n        });\n        this.styles = styles;\n    }\n\n    plugins() {\n        return [createHeading1Plugin(this.styles)];\n    }\n}\n\nclass Heading1MarkupElement extends MarkupElement {\n    constructor(id = ID, node = Heading1MarkupElementNode) {\n        super(id, node);\n    }\n}\n\nconst Heading1MarkupElementNode = ({ element, attributes, children, styles }: TextStyleRenderElementProps) => {\n    const align = element.align as string;\n    return (\n        <h1\n            {...attributes}\n            className={merge([align && alignmentClassnames[align], getColumnBreakClasses(element), 'a-h1'])}\n        >\n            <span style={styles}>{children}</span>\n        </h1>\n    );\n};\n\nconst createHeading1Plugin = (styles: CSSProperties) =>\n    createPluginFactory({\n        key: TextStyles.heading1,\n        isElement: true,\n        component: Heading1MarkupElementNode,\n        deserializeHtml: {\n            rules: [{ validNodeName: ['h1', 'H1'] }],\n        },\n    })({\n        component: (props: PlateRenderElementProps) => <Heading1MarkupElementNode {...props} styles={styles} />,\n    });\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { createPluginFactory } from '@udecode/plate';\nimport type { CSSProperties } from 'react';\nimport {\n    MarkupElement,\n    Plugin,\n    PluginProps,\n    TextStyleRenderElementProps,\n    alignmentClassnames,\n    getColumnBreakClasses,\n    merge,\n} from '@frontify/fondue';\nimport { BlockStyles, TextStyles } from '../styles';\nconst ID = 'textstyle-heading2-plugin';\n\nexport class Heading2Plugin extends Plugin {\n    public styles: CSSProperties = {};\n    constructor({ styles = BlockStyles.heading2, ...props }: PluginProps = {}) {\n        super(TextStyles.heading2, {\n            label: 'Heading 2',\n            markupElement: new Heading2MarkupElement(),\n            ...props,\n        });\n        this.styles = styles;\n    }\n\n    plugins() {\n        return [createHeading2Plugin(this.styles)];\n    }\n}\n\nclass Heading2MarkupElement extends MarkupElement {\n    constructor(id = ID, node = Heading2MarkupElementNode) {\n        super(id, node);\n    }\n}\n\nconst Heading2MarkupElementNode = ({ element, attributes, children, styles }: TextStyleRenderElementProps) => {\n    const align = element.align as string;\n    return (\n        <h2 {...attributes} className={merge([align && alignmentClassnames[align], getColumnBreakClasses(element)])}>\n            <span style={styles}>{children}</span>\n        </h2>\n    );\n};\n\nconst createHeading2Plugin = (styles: CSSProperties) =>\n    createPluginFactory({\n        key: TextStyles.heading2,\n        isElement: true,\n        component: Heading2MarkupElementNode,\n        deserializeHtml: {\n            rules: [{ validNodeName: ['h2', 'H2'] }],\n        },\n    })({\n        component: (props: TextStyleRenderElementProps) => <Heading2MarkupElementNode {...props} styles={styles} />,\n    });\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { createPluginFactory } from '@udecode/plate';\nimport type { CSSProperties } from 'react';\nimport {\n    MarkupElement,\n    Plugin,\n    PluginProps,\n    TextStyleRenderElementProps,\n    alignmentClassnames,\n    getColumnBreakClasses,\n    merge,\n} from '@frontify/fondue';\nimport { BlockStyles, TextStyles } from '../styles';\n\nconst ID = 'textstyle-heading3-plugin';\n\nexport class Heading3Plugin extends Plugin {\n    public styles: CSSProperties = {};\n    constructor({ styles = BlockStyles.heading3, ...props }: PluginProps = {}) {\n        super(TextStyles.heading3, {\n            label: 'Heading 3',\n            markupElement: new Heading3MarkupElement(),\n            ...props,\n        });\n        this.styles = styles;\n    }\n\n    plugins() {\n        return [createHeading3Plugin(this.styles)];\n    }\n}\n\nclass Heading3MarkupElement extends MarkupElement {\n    constructor(id = ID, node = Heading3MarkupElementNode) {\n        super(id, node);\n    }\n}\nconst Heading3MarkupElementNode = ({ element, attributes, children, styles }: TextStyleRenderElementProps) => {\n    const align = element.align as string;\n    return (\n        <h3 {...attributes} className={merge([align && alignmentClassnames[align], getColumnBreakClasses(element)])}>\n            <span style={styles}>{children}</span>\n        </h3>\n    );\n};\n\nconst createHeading3Plugin = (styles: CSSProperties) =>\n    createPluginFactory({\n        key: TextStyles.heading3,\n        isElement: true,\n        component: Heading3MarkupElementNode,\n        deserializeHtml: {\n            rules: [{ validNodeName: ['h3', 'H3'] }],\n        },\n    })({\n        component: (props: TextStyleRenderElementProps) => <Heading3MarkupElementNode {...props} styles={styles} />,\n    });\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { createPluginFactory } from '@udecode/plate';\nimport type { CSSProperties } from 'react';\nimport {\n    MarkupElement,\n    Plugin,\n    PluginProps,\n    TextStyleRenderElementProps,\n    alignmentClassnames,\n    getColumnBreakClasses,\n    merge,\n} from '@frontify/fondue';\nimport { BlockStyles, TextStyles } from '../styles';\n\nconst ID = 'textstyle-heading4-plugin';\n\nexport class Heading4Plugin extends Plugin {\n    public styles: CSSProperties = {};\n    constructor({ styles = BlockStyles.heading4, ...props }: PluginProps = {}) {\n        super(TextStyles.heading4, {\n            label: 'Heading 4',\n            markupElement: new Heading4MarkupElement(),\n            ...props,\n        });\n        this.styles = styles;\n    }\n\n    plugins() {\n        return [createHeading4Plugin(this.styles)];\n    }\n}\n\nclass Heading4MarkupElement extends MarkupElement {\n    constructor(id = ID, node = Heading4MarkupElementNode) {\n        super(id, node);\n    }\n}\n\nconst Heading4MarkupElementNode = ({ element, attributes, children, styles }: TextStyleRenderElementProps) => {\n    const align = element.align as string;\n    return (\n        <h4 {...attributes} className={merge([align && alignmentClassnames[align], getColumnBreakClasses(element)])}>\n            <span style={styles}>{children}</span>\n        </h4>\n    );\n};\n\nconst createHeading4Plugin = (styles: CSSProperties) =>\n    createPluginFactory({\n        key: TextStyles.heading4,\n        isElement: true,\n        component: Heading4MarkupElementNode,\n        deserializeHtml: {\n            rules: [{ validNodeName: ['h4', 'H4'] }],\n        },\n    })({\n        component: (props: TextStyleRenderElementProps) => <Heading4MarkupElementNode {...props} styles={styles} />,\n    });\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { createPluginFactory } from '@udecode/plate';\nimport type { CSSProperties } from 'react';\nimport {\n    MarkupElement,\n    Plugin,\n    PluginProps,\n    TextStyleRenderElementProps,\n    alignmentClassnames,\n    getColumnBreakClasses,\n    merge,\n} from '@frontify/fondue';\nimport { BlockStyles, TextStyles } from '../styles';\n\nconst ID = 'textstyle-imageCaption-plugin';\n\nexport class ImageCaptionPlugin extends Plugin {\n    public styles: CSSProperties = {};\n    constructor({ styles = BlockStyles.imageCaption, ...props }: PluginProps = {}) {\n        super(TextStyles.imageCaption, {\n            label: 'Image Caption',\n            markupElement: new ImageCaptionMarkupElement(),\n            ...props,\n        });\n        this.styles = styles;\n    }\n\n    plugins() {\n        return [createImageCaptionPlugin(this.styles)];\n    }\n}\n\nclass ImageCaptionMarkupElement extends MarkupElement {\n    constructor(id = ID, node = ImageCaptionMarkupElementNode) {\n        super(id, node);\n    }\n}\nconst ImageCaptionMarkupElementNode = ({ element, attributes, children, styles }: TextStyleRenderElementProps) => {\n    const align = element.align as string;\n    return (\n        <p\n            {...attributes}\n            className={merge([align && alignmentClassnames[align], getColumnBreakClasses(element), 'a-image-caption'])}\n        >\n            <span style={styles}>{children}</span>\n        </p>\n    );\n};\n\nconst createImageCaptionPlugin = (styles: CSSProperties) =>\n    createPluginFactory({\n        key: TextStyles.imageCaption,\n        isElement: true,\n        component: ImageCaptionMarkupElementNode,\n        deserializeHtml: {\n            rules: [{ validClassName: TextStyles.imageCaption }],\n        },\n    })({\n        component: (props: TextStyleRenderElementProps) => <ImageCaptionMarkupElementNode {...props} styles={styles} />,\n    });\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { createPluginFactory } from '@udecode/plate';\nimport type { CSSProperties } from 'react';\nimport {\n    MarkupElement,\n    Plugin,\n    PluginProps,\n    TextStyleRenderElementProps,\n    alignmentClassnames,\n    getColumnBreakClasses,\n    merge,\n} from '@frontify/fondue';\nimport { BlockStyles, TextStyles } from '../styles';\n\nconst ID = 'textstyle-imageTitle-plugin';\n\nexport class ImageTitlePlugin extends Plugin {\n    public styles: CSSProperties = {};\n    constructor({ styles = BlockStyles.imageTitle, ...props }: PluginProps = {}) {\n        super(TextStyles.imageTitle, {\n            label: 'Image Title',\n            markupElement: new ImageTitleMarkupElement(),\n            ...props,\n        });\n        this.styles = styles;\n    }\n\n    plugins() {\n        return [createImageTitlePlugin(this.styles)];\n    }\n}\n\nclass ImageTitleMarkupElement extends MarkupElement {\n    constructor(id = ID, node = ImageTitleMarkupElementNode) {\n        super(id, node);\n    }\n}\nconst ImageTitleMarkupElementNode = ({ element, attributes, children, styles }: TextStyleRenderElementProps) => {\n    const align = element.align as string;\n    return (\n        <p\n            {...attributes}\n            className={merge([align && alignmentClassnames[align], getColumnBreakClasses(element), 'a-image-title'])}\n        >\n            <span style={styles}>{children}</span>\n        </p>\n    );\n};\n\nconst createImageTitlePlugin = (styles: CSSProperties) =>\n    createPluginFactory({\n        key: TextStyles.imageTitle,\n        isElement: true,\n        component: ImageTitleMarkupElementNode,\n        deserializeHtml: {\n            rules: [{ validClassName: TextStyles.imageTitle }],\n        },\n    })({\n        component: (props: TextStyleRenderElementProps) => <ImageTitleMarkupElementNode {...props} styles={styles} />,\n    });\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { createParagraphPlugin as createPlateParagraphPlugin, createPluginFactory } from '@udecode/plate';\nimport type { CSSProperties } from 'react';\nimport {\n    MarkupElement,\n    Plugin,\n    PluginProps,\n    TextStyleRenderElementProps,\n    alignmentClassnames,\n    getColumnBreakClasses,\n    merge,\n} from '@frontify/fondue';\nimport { BlockStyles, TextStyles } from '../styles';\n\nexport class ParagraphPlugin extends Plugin {\n    public styles: CSSProperties = {};\n    constructor({ styles = BlockStyles.p, ...props }: PluginProps = {}) {\n        super(TextStyles.p, {\n            markupElement: new ParagraphMarkupElement(),\n            label: 'Body Text',\n            ...props,\n        });\n        this.styles = styles;\n    }\n\n    plugins() {\n        return [createParagraphPlugin(this.styles)];\n    }\n}\n\nexport const PARAGRAPH_CLASSES = 'tw-m-0 tw-px-0 tw-py-0';\n\nexport const ParagraphMarkupElementNode = ({ element, attributes, children, styles }: TextStyleRenderElementProps) => {\n    const align = element.align as string;\n    const className = merge([align && alignmentClassnames[align], PARAGRAPH_CLASSES, getColumnBreakClasses(element)]);\n    return (\n        <p {...attributes} className={className} style={styles}>\n            {children}\n        </p>\n    );\n};\n\nexport class ParagraphMarkupElement extends MarkupElement {\n    constructor(id = TextStyles.p, node = ParagraphMarkupElementNode) {\n        super(id, node);\n    }\n}\n\nexport const createParagraphPlugin = (styles: CSSProperties) =>\n    createPluginFactory({\n        ...createPlateParagraphPlugin(),\n        key: TextStyles.p,\n        isElement: true,\n        component: ParagraphMarkupElementNode,\n    })({\n        component: (props: TextStyleRenderElementProps) => <ParagraphMarkupElementNode {...props} styles={styles} />,\n    });\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { createPluginFactory } from '@udecode/plate';\nimport type { CSSProperties } from 'react';\nimport {\n    MarkupElement,\n    Plugin,\n    PluginProps,\n    TextStyleRenderElementProps,\n    alignmentClassnames,\n    getColumnBreakClasses,\n    merge,\n} from '@frontify/fondue';\nimport { BlockStyles, TextStyles } from '../styles';\n\nconst ID = 'textstyle-quote-plugin';\n\nexport class QuotePlugin extends Plugin {\n    public styles: CSSProperties = {};\n    constructor({ styles = BlockStyles.quote, ...props }: PluginProps = {}) {\n        super(TextStyles.quote, {\n            label: 'Quote',\n            markupElement: new QuoteMarkupElement(),\n            ...props,\n        });\n        this.styles = styles;\n    }\n\n    plugins() {\n        return [createQuotePlugin(this.styles)];\n    }\n}\n\nclass QuoteMarkupElement extends MarkupElement {\n    constructor(id = ID, node = QuoteMarkupElementNode) {\n        super(id, node);\n    }\n}\n\nexport const QuoteMarkupElementNode = ({ element, attributes, children, styles }: TextStyleRenderElementProps) => {\n    const align = element.align as string;\n    return (\n        <blockquote\n            {...attributes}\n            className={merge([align && alignmentClassnames[align], getColumnBreakClasses(element), 'a-quote'])}\n        >\n            <span style={styles}>{children}</span>\n        </blockquote>\n    );\n};\n\nexport const createQuotePlugin = (styles: CSSProperties) =>\n    createPluginFactory({\n        key: TextStyles.quote,\n        isElement: true,\n        component: QuoteMarkupElementNode,\n        deserializeHtml: {\n            rules: [{ validNodeName: ['blockquote', 'BLOCKQUOTE'] }],\n        },\n    })({\n        component: (props: TextStyleRenderElementProps) => <QuoteMarkupElementNode {...props} styles={styles} />,\n    });\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport {\n    Custom1Plugin,\n    Custom2Plugin,\n    Custom3Plugin,\n    Heading1Plugin,\n    Heading2Plugin,\n    Heading3Plugin,\n    Heading4Plugin,\n    ImageCaptionPlugin,\n    ImageTitlePlugin,\n    ParagraphPlugin,\n    QuotePlugin,\n} from '.';\nimport { TextStyles } from '../styles';\n\nexport const TextStylePluginsWithoutImage = [\n    new Heading1Plugin(),\n    new Heading2Plugin(),\n    new Heading3Plugin(),\n    new Heading4Plugin(),\n    new Custom1Plugin(),\n    new Custom2Plugin(),\n    new Custom3Plugin(),\n    new QuotePlugin(),\n    new ParagraphPlugin(),\n];\n\nexport const TextStylesWithoutImage = [\n    TextStyles.heading1,\n    TextStyles.heading2,\n    TextStyles.heading3,\n    TextStyles.heading4,\n    TextStyles.custom1,\n    TextStyles.custom2,\n    TextStyles.custom3,\n    TextStyles.quote,\n    TextStyles.p,\n];\n\nexport const AllTextStylePlugins = [...TextStylePluginsWithoutImage, new ImageCaptionPlugin(), new ImageTitlePlugin()];\n\nexport const AllTextStyles = [...TextStylesWithoutImage, TextStyles.imageCaption, TextStyles.imageTitle];\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { BOLD_CLASSES, CODE_CLASSES, ITALIC_CLASSES, STRIKETHROUGH_CLASSES, UNDERLINE_CLASSES } from '@frontify/fondue';\nimport { TText } from '@udecode/plate';\nimport escapeHtml from 'escape-html';\n\nexport const serializeLeafToHtml = (node: TText): string => {\n    let string = escapeHtml(node.text);\n    string = string.replaceAll('\\n', '<br />');\n    const { bold, italic, underline, strikethrough, code, subscript, superscript } = node;\n    if (bold) {\n        string = `<span class=\"${BOLD_CLASSES}\">${string}</span>`;\n    }\n    if (italic) {\n        string = `<span class=\"${ITALIC_CLASSES}\">${string}</span>`;\n    }\n    if (underline) {\n        string = `<span class=\"${UNDERLINE_CLASSES}\">${string}</span>`;\n    }\n    if (strikethrough) {\n        string = `<span class=\"${STRIKETHROUGH_CLASSES}\">${string}</span>`;\n    }\n    if (code) {\n        string = `<span class=\"${CODE_CLASSES}\">${string}</span>`;\n    }\n    if (subscript) {\n        string = `<sub>${string}</sub>`;\n    } else if (superscript) {\n        string = `<sup>${string}</sup>`;\n    }\n    return string;\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport type { CSSProperties } from 'react';\n\nexport const reactCssPropsToCss = (props?: CSSProperties): string => {\n    if (!props) {\n        return '';\n    }\n\n    return Object.keys(props)\n        .reduce<string>((acc, key) => {\n            const value = props[key as keyof CSSProperties];\n            return value ? `${acc}${convertCamelCaseToKebabCase(key)}: ${value}; ` : acc;\n        }, '')\n        .trim()\n        .replaceAll('\"', \"'\");\n};\n\nconst convertCamelCaseToKebabCase = (str: string): string => {\n    return str.replaceAll(/([A-Z])/g, '-$1').toLowerCase();\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport type { CSSProperties } from 'react';\nimport { TElement } from '@udecode/plate';\n\nimport { reactCssPropsToCss } from '../utlis/reactCssPropsToCss';\nimport { BUTTON_PLUGIN } from '../../plugins';\n\nexport type ButtonStylesType = Record<string, Record<string, CSSProperties & { hover?: CSSProperties }>>;\n\nexport const buttonNode = (node: TElement, children: string, defaultClassNames: string, styles: ButtonStylesType) => {\n    const buttonStyles = styles[BUTTON_PLUGIN];\n    const buttonTypeString = (node.buttonStyle as string) ?? 'primary';\n    const buttonType = `button${buttonTypeString.charAt(0).toUpperCase()}${buttonTypeString.slice(1)}`;\n    const buttonStyle = buttonStyles[buttonType];\n\n    const defaultStyles = reactCssPropsToCss(buttonStyle);\n\n    return `<a href=\"${node.url}\"\n                target=\"${node.target ?? '_blank'}\"\n                dir=\"auto\"\n                style=\"${defaultStyles}\"\n                class=\"${defaultClassNames}\"\n                onmouseenter=\"this.setAttribute('style', '${defaultStyles} ${reactCssPropsToCss(buttonStyle?.hover)}');\"\n                onmouseleave=\"this.setAttribute('style', '${reactCssPropsToCss(buttonStyle)}');\"\n                >${children}</a>`;\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport type { CSSProperties } from 'react';\nimport escapeHtml from 'escape-html';\nimport { TElement } from '@udecode/plate';\n\nimport { LINK_PLUGIN } from '../../plugins/LinkPlugin/id';\nimport { TLinkElement } from '../../plugins/LinkPlugin/types';\nimport { reactCssPropsToCss } from '../utlis/reactCssPropsToCss';\n\nexport const linkNode = (\n    node: TElement,\n    children: string,\n    defaultClassNames: string,\n    styles: Record<string, CSSProperties & { hover?: CSSProperties }>,\n) => {\n    if (node.chosenLink) {\n        const { chosenLink } = node as TLinkElement;\n        return `<a dir=\"auto\" class=\"${defaultClassNames}\" style=\"${reactCssPropsToCss(styles[LINK_PLUGIN])}\" target=${\n            chosenLink?.openInNewTab ? '_blank' : '_self'\n        } href=\"${escapeHtml(chosenLink?.searchResult?.link)}\">${children}</a>`;\n    }\n    return `<a dir=\"auto\" class=\"${defaultClassNames}\" style=\"${reactCssPropsToCss(styles[LINK_PLUGIN])}\" target=\"${\n        node?.target ?? '_blank'\n    }\" href=\"${escapeHtml(node.url as string)}\">${children}</a>`;\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport type { CSSProperties } from 'react';\nimport { merge } from '@frontify/fondue';\nimport { TElement } from '@udecode/plate';\n\nimport { TextStyles } from '../../plugins';\nimport { reactCssPropsToCss } from '../utlis/reactCssPropsToCss';\n\nexport const defaultNode = (node: TElement, children: string, styles: CSSProperties, defaultClassNames: string) => {\n    const defaultStyles = reactCssPropsToCss(styles);\n\n    if (node.type === TextStyles.heading1) {\n        return `<h1 dir=\"auto\" class=\"${merge([defaultClassNames, 'a-h1'])}\">${getStyledChild(\n            children,\n            defaultStyles,\n        )}</h1>`;\n    }\n    if (node.type === TextStyles.heading2) {\n        return `<h2 dir=\"auto\" class=\"${defaultClassNames}\">${getStyledChild(children, defaultStyles)}</h2>`;\n    }\n    if (node.type === TextStyles.heading3) {\n        return `<h3 dir=\"auto\" class=\"${defaultClassNames}\">${getStyledChild(children, defaultStyles)}</h3>`;\n    }\n    if (node.type === TextStyles.heading4) {\n        return `<h4 dir=\"auto\" class=\"${defaultClassNames}\">${getStyledChild(children, defaultStyles)}</h4>`;\n    }\n    if (node.type === TextStyles.custom1) {\n        return `<p dir=\"auto\" class=\"${merge([defaultClassNames, 'a-custom1'])}\">${getStyledChild(\n            children,\n            defaultStyles,\n        )}</p>`;\n    }\n    if (node.type === TextStyles.custom2) {\n        return `<p dir=\"auto\" class=\"${merge([defaultClassNames, 'a-custom2'])}\">${getStyledChild(\n            children,\n            defaultStyles,\n        )}</p>`;\n    }\n    if (node.type === TextStyles.custom3) {\n        return `<p dir=\"auto\" class=\"${merge([defaultClassNames, 'a-custom3'])}\">${getStyledChild(\n            children,\n            defaultStyles,\n        )}</p>`;\n    }\n    if (node.type === TextStyles.quote) {\n        return `<p dir=\"auto\" class=\"${merge([defaultClassNames, 'a-quote'])}\">${getStyledChild(\n            children,\n            defaultStyles,\n        )}</p>`;\n    }\n    if (node.type === TextStyles.imageTitle) {\n        return `<p dir=\"auto\" class=\"${merge([defaultClassNames, 'a-image-title'])}\">${getStyledChild(\n            children,\n            defaultStyles,\n        )}</p>`;\n    }\n    if (node.type === TextStyles.imageCaption) {\n        return `<p dir=\"auto\" class=\"${merge([defaultClassNames, 'a-image-caption'])}\">${getStyledChild(\n            children,\n            defaultStyles,\n        )}</p>`;\n    }\n\n    return `<p dir=\"auto\" class=\"${defaultClassNames}\">${getStyledChild(children, defaultStyles)}</p>`;\n};\n\nconst getStyledChild = (children: string, styles: string) => `<span dir=\"auto\" style=\"${styles}\">${children}</span>`;\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport type { CSSProperties } from 'react';\nimport { merge } from '@frontify/fondue';\nimport { TElement } from '@udecode/plate';\n\nimport { reactCssPropsToCss } from '../utlis/reactCssPropsToCss';\n\nexport const checkItemNode = (\n    node: TElement,\n    children: string,\n    defaultClassNames: string,\n    styles: Record<string, CSSProperties & { hover?: CSSProperties }>,\n) => {\n    return `<div dir=\"auto\" disabled class=\"tw-flex tw-flex-row tw-pb-2 first-of-type:tw-ml-0 ${defaultClassNames}\" style=\"margin-left:${\n        ((node.indent as number) ?? 0) * 24\n    }px;\">\n    <div dir=\"auto\" class=\"tw-flex tw-items-center tw-justify-center tw-select-none tw-mr-1.5\">\n        <input\n            class=\"tw-w-4 tw-h-4 tw-m-0\"\n            type=\"checkbox\"\n            ${node.checked ? 'checked' : ''}\n            onclick=\"return false;\" />\n    </div>\n    <span dir=\"auto\" class=\"${merge([\n        'tw-flex-1 tw-focus:outline-none',\n        node.checked ? '!tw-line-through' : '',\n    ])}\" style=\"${reactCssPropsToCss(styles[node.children[0].textStyle as string])}\">${children}</span>\n</div>`;\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport ReactDOM from 'react-dom';\nimport { TElement, TMentionElement } from '@udecode/plate';\nimport { MappedMentionableItems, MentionMarkupElementNode } from '@frontify/fondue';\n\ntype MentionHtmlNodeProps = { mentionable?: MappedMentionableItems };\n\nexport const mentionHtmlNode = (node: TElement, { mentionable }: MentionHtmlNodeProps = {}) => {\n    if (!mentionable) {\n        return '';\n    }\n\n    const div = document.createElement('div');\n    ReactDOM.render(MentionMarkupElementNode(mentionable)({ element: node as TMentionElement }), div);\n    return div.innerHTML;\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport {\n    ELEMENT_CHECK_ITEM,\n    LI_CLASSNAMES,\n    MappedMentionableItems,\n    OL_STYLES,\n    UL_CLASSES,\n    alignmentClassnames,\n    getLiStyles,\n    getLicElementClassNames,\n    getOrderedListClasses,\n    merge,\n} from '@frontify/fondue';\nimport {\n    ELEMENT_LI,\n    ELEMENT_LIC,\n    ELEMENT_LINK,\n    ELEMENT_MENTION,\n    ELEMENT_OL,\n    ELEMENT_UL,\n    TDescendant,\n    TElement,\n    isText,\n} from '@udecode/plate';\nimport { serializeLeafToHtml } from './utlis/serializeLeafToHtml';\nimport { reactCssPropsToCss } from './utlis/reactCssPropsToCss';\nimport type { CSSProperties } from 'react';\nimport { ButtonStylesType, buttonNode } from './nodes/button';\nimport { linkNode } from './nodes/link';\nimport { defaultNode } from './nodes/default';\nimport { checkItemNode } from './nodes/checkItemNode';\nimport { mentionHtmlNode } from './nodes/mentionHtmlNode';\nimport { ELEMENT_BUTTON } from '../plugins';\n\nconst countNodesOfType = (nodes: TDescendant[], type: string): number => {\n    return nodes.reduce((acc, node) => {\n        if (node.type === type) {\n            acc++;\n        }\n        if (node.children) {\n            return acc + countNodesOfType(node.children as TDescendant[], type);\n        }\n        return acc;\n    }, 0);\n};\n\ntype NestingCount = {\n    [type: string]: number;\n};\n\ntype SerializeNodeToHtmlRecursiveOptions = {\n    mappedMentionable?: MappedMentionableItems;\n    nestingCount?: NestingCount;\n};\n\nexport const serializeNodeToHtmlRecursive = (\n    node: TDescendant,\n    styles: Record<string, CSSProperties & { hover?: CSSProperties }> | ButtonStylesType,\n    { mappedMentionable, nestingCount = {} }: SerializeNodeToHtmlRecursiveOptions,\n): string => {\n    if (isText(node)) {\n        return serializeLeafToHtml(node);\n    }\n\n    const rootNestingCount = nestingCount[node.type] || countNodesOfType([node], node.type);\n    let children = '';\n    for (const element of node.children) {\n        children += serializeNodeToHtmlRecursive(element, styles, {\n            nestingCount: {\n                ...nestingCount,\n                [element.type as string]: rootNestingCount,\n            },\n            mappedMentionable,\n        });\n    }\n\n    const htmlMapper = MapNodeTypesToHtml[node.type];\n    if (typeof htmlMapper !== 'undefined') {\n        return htmlMapper({\n            classNames: getClassNames(node.breakAfterColumn as string | undefined, node.align as string | undefined),\n            children,\n            rootNestingCount,\n            node,\n            mappedMentionable,\n            styles,\n        });\n    } else {\n        return defaultNode(\n            node,\n            children,\n            styles[node.type],\n            getClassNames(node.breakAfterColumn as string | undefined, node.align as string | undefined),\n        );\n    }\n};\n\ntype Arguments = {\n    classNames: string;\n    children: string;\n    rootNestingCount: number;\n    node: TElement;\n    mappedMentionable?: MappedMentionableItems;\n    styles: Record<string, CSSProperties & { hover?: CSSProperties }> | ButtonStylesType;\n};\n\nconst MapNodeTypesToHtml: { [key: string]: ({ ...args }: Arguments) => string } = {\n    [ELEMENT_UL]: (args) => `<ul dir=\"auto\" class=\"${UL_CLASSES} ${args.classNames}\">${args.children}</ul>`,\n    [ELEMENT_OL]: ({ classNames, children, node, rootNestingCount }) => {\n        const nestingLevel = Math.max(rootNestingCount - countNodesOfType([node], ELEMENT_OL), 0);\n        return `<ol dir=\"auto\" class=\"${getOrderedListClasses(nestingLevel)} ${classNames}\" style=\"${reactCssPropsToCss(\n            OL_STYLES,\n        )}\">${children}</ol>`;\n    },\n    [ELEMENT_LI]: ({ classNames, children, node, styles }) =>\n        `<li dir=\"auto\" class=\"${classNames} ${LI_CLASSNAMES}\" style=\"${reactCssPropsToCss(\n            getLiStyles(node, styles),\n        )}\">${children}</li>`,\n    [ELEMENT_LIC]: ({ classNames, children, node }) =>\n        `<p dir=\"auto\" class=\"${classNames} ${getLicElementClassNames(node)}\"><span>${children}</span></p>`,\n    [ELEMENT_LINK]: ({ node, children, classNames, styles }) => linkNode(node, children, classNames, styles),\n    [ELEMENT_BUTTON]: ({ node, children, classNames, styles }) =>\n        buttonNode(node, children, classNames, styles as ButtonStylesType),\n    [ELEMENT_CHECK_ITEM]: ({ node, children, classNames, styles }) => checkItemNode(node, children, classNames, styles),\n    [ELEMENT_MENTION]: ({ node, mappedMentionable }) => mentionHtmlNode(node, { mentionable: mappedMentionable }),\n};\n\nconst getClassNames = (breakAfterColumn?: string, align?: string) => {\n    const breakWordsClass = 'tw-break-words';\n    const columnBreakClasses =\n        breakAfterColumn === 'active' ? 'tw-break-after-column tw-break-inside-avoid-column' : '';\n    const alignClass = align ? alignmentClassnames[align] : '';\n    return merge([alignClass, breakWordsClass, columnBreakClasses]);\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { TDescendant } from '@udecode/plate';\nimport { PluginComposer, SerializeNodesToHtmlOptions, mapMentionable, parseRawValue } from '@frontify/fondue';\nimport { BlockStyles } from '../plugins';\nimport { serializeNodeToHtmlRecursive } from './serializeNodesToHtmlRecursive';\n\nexport const serializeRawToHtmlAsync = async (\n    raw: string,\n    columns: SerializeNodesToHtmlOptions['columns'] = 1,\n    columnGap: SerializeNodesToHtmlOptions['columnGap'] = 'normal',\n    plugins: PluginComposer = new PluginComposer(),\n): Promise<string> => {\n    const nodes = parseRawValue({ raw, plugins });\n    const styles = plugins.getStyles;\n    return Promise.resolve(serializeNodesToHtml(nodes, { columns, columnGap, styles }));\n};\n\nexport const serializeNodesToHtml = (\n    nodes: TDescendant[],\n    { mentionable, columns = 1, columnGap = 'normal', styles = BlockStyles }: SerializeNodesToHtmlOptions = {},\n): string => {\n    const mappedMentionable = mentionable ? mapMentionable(mentionable) : new Map();\n\n    let html = '';\n    for (let i = 0, len = nodes.length; i < len; i++) {\n        const node = nodes[i];\n        if (isEmptyNode(node)) {\n            html += '<br />';\n        } else {\n            html += serializeNodeToHtmlRecursive(node, styles, {\n                mappedMentionable,\n            });\n        }\n    }\n\n    if (columns > 1) {\n        return `<div style=\"columns:${columns}; column-gap:${columnGap};\">${html}</div>`;\n    }\n\n    return html;\n};\n\nconst isEmptyNode = (node: TDescendant): boolean => {\n    if (!Array.isArray(node?.children)) {\n        return false;\n    }\n    return node?.children?.every((child) => child.text === '');\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { useEffect, useState } from 'react';\nimport { SerializedTextProps } from './types';\nimport { serializeRawToHtmlAsync } from './serializer';\n\nexport const SerializedText = ({ value = '', gap, columns, show = true, plugins }: SerializedTextProps) => {\n    const [html, setHtml] = useState<string | null>(null);\n\n    useEffect(() => {\n        (async () => {\n            setHtml(await serializeRawToHtmlAsync(value, columns, gap, plugins));\n        })();\n    }, [value, columns, gap, plugins]);\n\n    if (!show || html === '<br />') {\n        return null;\n    }\n\n    return html !== null ? (\n        <div className=\"tw-w-full\" data-test-id=\"rte-content-html\" dangerouslySetInnerHTML={{ __html: html }} />\n    ) : (\n        <div className=\"tw-rounded-sm tw-bg-base-alt tw-animate-pulse tw-h-full tw-min-h-[10px] tw-w-full\" />\n    );\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { useEffect, useState } from 'react';\n\nimport { RichTextEditor as FondueRichTextEditor } from '@frontify/fondue';\nimport { RichTextEditorProps } from './types';\nimport { SerializedText } from './SerializedText';\nimport { floatingButtonActions, floatingButtonSelectors } from './plugins/ButtonPlugin/components';\n\nexport const RichTextEditor = ({\n    id = 'rte',\n    isEditing,\n    value,\n    columns,\n    gap,\n    placeholder,\n    plugins,\n    onTextChange,\n    showSerializedText,\n}: RichTextEditorProps) => {\n    const [shouldPreventPageLeave, setShouldPreventPageLeave] = useState(false);\n\n    const saveText = (newContent: string) => {\n        if (onTextChange && newContent !== value) {\n            onTextChange(newContent);\n        }\n        setShouldPreventPageLeave(false);\n    };\n\n    useEffect(() => {\n        const unloadHandler = (event: BeforeUnloadEvent) => {\n            event.preventDefault();\n            return (event.returnValue = 'Unprocessed changes');\n        };\n\n        if (shouldPreventPageLeave) {\n            window.addEventListener('beforeunload', unloadHandler);\n        }\n\n        return () => window.removeEventListener('beforeunload', unloadHandler);\n    }, [shouldPreventPageLeave]);\n\n    if (isEditing) {\n        return (\n            <FondueRichTextEditor\n                id={id}\n                value={value}\n                border={false}\n                placeholder={placeholder}\n                plugins={plugins}\n                onValueChanged={() => setShouldPreventPageLeave(true)}\n                onTextChange={saveText}\n                hideExternalFloatingModals={(editorId: string) => {\n                    if (floatingButtonSelectors.isOpen(editorId)) {\n                        floatingButtonActions.reset();\n                    }\n                }}\n            />\n        );\n    }\n    return <SerializedText value={value} columns={columns} gap={gap} show={showSerializedText} plugins={plugins} />;\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { AppBridgeBlock } from '@frontify/app-bridge';\nimport {\n    AlignCenterPlugin,\n    AlignJustifyPlugin,\n    AlignLeftPlugin,\n    AlignRightPlugin,\n    BoldPlugin,\n    CheckboxListPlugin,\n    CodePlugin,\n    ItalicPlugin,\n    OrderedListPlugin,\n    PluginComposer,\n    ResetFormattingPlugin,\n    SoftBreakPlugin,\n    StrikethroughPlugin,\n    TextStylePlugin,\n    UnderlinePlugin,\n    UnorderedListPlugin,\n} from '@frontify/fondue';\nimport { ButtonPlugin, LinkPlugin, TextStylePluginsWithoutImage, TextStylesWithoutImage } from '../plugins';\n\nexport const getDefaultPluginsWithLinkChooser = (appBridge: AppBridgeBlock) => {\n    return new PluginComposer()\n        .setPlugin(\n            new SoftBreakPlugin(),\n            new TextStylePlugin({\n                textStyles: TextStylePluginsWithoutImage,\n            }),\n        )\n        .setPlugin(\n            [\n                new BoldPlugin(),\n                new ItalicPlugin(),\n                new UnderlinePlugin(),\n                new StrikethroughPlugin(),\n                new LinkPlugin({ appBridge }),\n                new ButtonPlugin({ appBridge }),\n                new CodePlugin(),\n            ],\n            [\n                new AlignLeftPlugin({ validTypes: TextStylesWithoutImage }),\n                new AlignCenterPlugin({ validTypes: TextStylesWithoutImage }),\n                new AlignRightPlugin({ validTypes: TextStylesWithoutImage }),\n                new AlignJustifyPlugin({ validTypes: TextStylesWithoutImage }),\n                new UnorderedListPlugin(),\n                new CheckboxListPlugin(),\n                new OrderedListPlugin(),\n                new ResetFormattingPlugin(),\n            ],\n        );\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nexport const THEME_PREFIX = '--f-theme-settings-';\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { AppBridgeBlock, Asset, useBlockAssets } from '@frontify/app-bridge';\n\nexport const useAttachments = (appBridge: AppBridgeBlock, assetId: string) => {\n    const { blockAssets, updateAssetIdsFromKey } = useBlockAssets(appBridge);\n    const attachments = blockAssets?.[assetId] || [];\n\n    const onAddAttachments = async (newAssets: Asset[]) => {\n        const newAssetIds = attachments.map((attachment) => attachment.id);\n        for (const asset of newAssets) {\n            newAssetIds.push(asset.id);\n        }\n        await updateAssetIdsFromKey(assetId, newAssetIds);\n    };\n\n    const onAttachmentDelete = async (assetToDelete: Asset) => {\n        const newAssetIds = attachments\n            .filter((attachment) => attachment.id !== assetToDelete.id)\n            .map((attachment) => attachment.id);\n\n        await updateAssetIdsFromKey(assetId, newAssetIds);\n    };\n\n    const onAttachmentReplace = async (attachmentToReplace: Asset, newAsset: Asset) => {\n        const newAssetIds = attachments.map((attachment) =>\n            attachment.id === attachmentToReplace.id ? newAsset.id : attachment.id,\n        );\n\n        await updateAssetIdsFromKey(assetId, newAssetIds);\n    };\n\n    const onAttachmentsSorted = async (assets: Asset[]) => {\n        const newAssetIds = assets.map((asset) => asset.id);\n\n        await updateAssetIdsFromKey(assetId, newAssetIds);\n    };\n\n    return {\n        onAddAttachments,\n        onAttachmentDelete,\n        onAttachmentReplace,\n        onAttachmentsSorted,\n        attachments,\n    };\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { KeyboardSensor, PointerSensor, useSensor, useSensors } from '@dnd-kit/core';\nimport { customCoordinatesGetterFactory } from '../helpers/customCoordinatesGetterFactory';\n\nconst keyboardCodes = {\n    start: ['Space', 'Enter'],\n    cancel: [],\n    end: ['Space', 'Enter', 'Escape'],\n};\n\nexport const useDndSensors = (columnGap = 0, rowGap = 0) => {\n    const customCoordinatesGetter = customCoordinatesGetterFactory(columnGap, rowGap);\n    const sensors = useSensors(\n        useSensor(PointerSensor),\n        useSensor(KeyboardSensor, {\n            coordinateGetter: customCoordinatesGetter,\n            keyboardCodes,\n        }),\n    );\n\n    return sensors;\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { Color } from '@frontify/fondue';\nimport { BACKGROUND_COLOR_DEFAULT_VALUE } from './defaultValues';\nimport { SettingBlock } from '../';\n\n/**\n * Returns background settings: background switch, background color\n *\n * @param options Options for the settings\n * @param options.id Custom suffix for the setting ids\n * @param options.defaultValue Default value for the background switch\n * @param options.defaultColor Default value for the background color\n * @param options.preventDefaultColor Whether the background color should be empty by default\n * @param options.switchLabel Label for the background switch\n * @returns {SettingBlock} Returns background settings\n */\n\ntype BackgroundSettingsType = {\n    id?: string;\n    defaultValue?: boolean;\n    defaultColor?: Color;\n    preventDefaultColor?: boolean;\n    switchLabel?: string;\n};\n\nexport const getBackgroundSettings = (options?: BackgroundSettingsType): SettingBlock => {\n    const hasId = options?.id ? `hasBackground${options.id}` : 'hasBackground';\n    const colorId = options?.id ? `backgroundColor${options.id}` : 'backgroundColor';\n    const defaultColor = !!options?.preventDefaultColor\n        ? undefined\n        : options?.defaultColor || BACKGROUND_COLOR_DEFAULT_VALUE;\n    const switchLabel = options?.switchLabel ? options.switchLabel : undefined;\n\n    return {\n        id: hasId,\n        label: 'Background',\n        type: 'switch',\n        switchLabel,\n        defaultValue: !!options?.defaultValue,\n        on: [\n            {\n                id: colorId,\n                defaultValue: defaultColor,\n                type: 'colorInput',\n            },\n        ],\n    };\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport {\n    Color,\n    MultiInputLayout,\n    SettingBlock,\n    appendUnit,\n    maximumNumericalOrPixelOrAutoRule,\n    numericalOrPixelRule,\n} from '../';\nimport { BORDER_COLOR_DEFAULT_VALUE, BORDER_WIDTH_DEFAULT_VALUE } from './defaultValues';\nimport { BorderStyle } from './types';\n\n/**\n * Returns border settings: border switch, border style, border width, border color\n *\n * @param options Options for the settings\n * @param options.id Custom suffix for the setting ids\n * @param options.switchLabel Label for the border switch\n * @param options.defaultValue Default value for the border switch\n * @returns {SettingBlock} Returns border settings\n */\n\ntype BorderSettingsType = {\n    id?: string;\n    defaultValue?: boolean;\n    defaultColor?: Color;\n    switchLabel?: string;\n};\n\nexport const getBorderSettings = (options?: BorderSettingsType): SettingBlock => {\n    const hasId = options?.id ? `hasBorder_${options.id}` : 'hasBorder';\n    const selectionId = options?.id ? `borderSelection_${options.id}` : 'borderSelection';\n    const styleId = options?.id ? `borderStyle_${options.id}` : 'borderStyle';\n    const widthId = options?.id ? `borderWidth_${options.id}` : 'borderWidth';\n    const colorId = options?.id ? `borderColor_${options.id}` : 'borderColor';\n    const defaultColor = options?.defaultColor || BORDER_COLOR_DEFAULT_VALUE;\n    const switchLabel = options?.switchLabel ? options.switchLabel : undefined;\n\n    return {\n        id: hasId,\n        label: 'Border',\n        type: 'switch',\n        switchLabel,\n        defaultValue: !!options?.defaultValue,\n        on: [\n            {\n                id: selectionId,\n                type: 'multiInput',\n                onChange: (bundle) => appendUnit(bundle, widthId),\n                layout: MultiInputLayout.Columns,\n                lastItemFullWidth: true,\n                blocks: [\n                    {\n                        id: styleId,\n                        type: 'dropdown',\n                        defaultValue: BorderStyle.Solid,\n                        choices: [\n                            {\n                                value: BorderStyle.Solid,\n                                label: BorderStyle.Solid,\n                            },\n                            {\n                                value: BorderStyle.Dotted,\n                                label: BorderStyle.Dotted,\n                            },\n                            {\n                                value: BorderStyle.Dashed,\n                                label: BorderStyle.Dashed,\n                            },\n                        ],\n                    },\n                    {\n                        id: widthId,\n                        type: 'input',\n                        defaultValue: BORDER_WIDTH_DEFAULT_VALUE,\n                        rules: [numericalOrPixelRule, maximumNumericalOrPixelOrAutoRule(500)],\n                        placeholder: 'e.g. 3px',\n                    },\n                    {\n                        id: colorId,\n                        type: 'colorInput',\n                        defaultValue: defaultColor,\n                    },\n                ],\n            },\n        ],\n        off: [],\n    };\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { SettingBlock, appendUnit, numericalOrPixelRule, presetCustomValue } from '../';\n\nimport { Radius, radiusStyleMap } from './types';\n\n/**\n * Returns border radius settings: border radius switch, radius slider, custom radius input\n *\n * @param options Options for the settings\n * @param options.id Custom suffix for the setting ids\n * @param options.dependentSettingId Id of setting which the border radius is dependent on\n * @returns {SettingBlock} Returns border settings\n */\n\ntype BorderRadiusSettingsType = {\n    id?: string;\n    dependentSettingId?: string;\n    radiusStyleMap?: Record<Radius, string>;\n    defaultRadius?: Radius;\n};\n\nexport const getBorderRadiusSlider = (id: string, defaultValue: Radius = Radius.None): SettingBlock => ({\n    id,\n    type: 'segmentedControls',\n    defaultValue,\n    choices: [\n        {\n            value: Radius.None,\n            label: 'None',\n        },\n        {\n            value: Radius.Small,\n            label: 'S',\n        },\n        {\n            value: Radius.Medium,\n            label: 'M',\n        },\n        {\n            value: Radius.Large,\n            label: 'L',\n        },\n    ],\n});\n\nexport const getBorderRadiusSettings = (options?: BorderRadiusSettingsType): SettingBlock => {\n    const hasId = options?.id ? `hasRadius_${options.id}` : 'hasRadius';\n    const valueId = options?.id ? `radiusValue_${options.id}` : 'radiusValue';\n    const choiceId = options?.id ? `radiusChoice_${options.id}` : 'radiusChoice';\n    const defaultValue = options?.defaultRadius || Radius.None;\n\n    return {\n        id: hasId,\n        label: 'Corner radius',\n        type: 'switch',\n        switchLabel: 'Custom',\n        defaultValue: false,\n        info: 'Determining how rounded the corners are.',\n        show: (bundle) => (options?.dependentSettingId ? !!bundle.getBlock(options.dependentSettingId)?.value : true),\n        onChange: (bundle) => presetCustomValue(bundle, choiceId, valueId, options?.radiusStyleMap || radiusStyleMap),\n        on: [\n            {\n                id: valueId,\n                type: 'input',\n                placeholder: 'e.g. 10px',\n                rules: [numericalOrPixelRule],\n                onChange: (bundle) => appendUnit(bundle, valueId),\n            },\n        ],\n        off: [getBorderRadiusSlider(choiceId, defaultValue)],\n    };\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { MultiInputLayout, SettingBlock, appendUnit, numericalOrPixelRule, presetCustomValue } from '../';\nimport { getBorderRadiusSlider } from './borderRadius';\nimport { Radius, radiusStyleMap } from './types';\n\n/**\n * Returns border radius settings: border radius switch, radius slider, custom radius inputs for every corner\n *\n * @param options Options for the settings\n * @param options.id Custom suffix for the setting ids\n * @param options.dependentSettingId Id of setting which the border radius is dependent on\n * @returns {SettingBlock} Returns border settings\n */\n\ntype BorderRadiusSettingsType = {\n    id?: string;\n    dependentSettingId?: string;\n    defaultValue?: Radius;\n};\n\nexport const getExtendedBorderRadiusSettings = (options?: BorderRadiusSettingsType): SettingBlock => {\n    const hasId = options?.id ? `hasExtendedCustomRadius_${options.id}` : 'hasExtendedCustomRadius';\n    const valueId = options?.id ? `extendedRadiusValue_${options.id}` : 'extendedRadiusValue';\n    const choiceId = options?.id ? `extendedRadiusChoice_${options.id}` : 'extendedRadiusChoice';\n    const topLeftId = options?.id ? `extendedRadiusTopLeft_${options.id}` : 'extendedRadiusTopLeft';\n    const topRightId = options?.id ? `extendedRadiusTopRight_${options.id}` : 'extendedRadiusTopRight';\n    const bottomLeftId = options?.id ? `extendedRadiusBottomLeft_${options.id}` : 'extendedRadiusBottomLeft';\n    const bottomRightId = options?.id ? `extendedRadiusBottomRight_${options.id}` : 'extendedRadiusBottomRight';\n\n    return {\n        id: hasId,\n        label: 'Corner radius',\n        type: 'switch',\n        switchLabel: 'Custom',\n        defaultValue: false,\n        info: 'Determining how rounded the corners are.',\n        show: (bundle) => (options?.dependentSettingId ? !!bundle.getBlock(options.dependentSettingId)?.value : true),\n        onChange: (bundle) => {\n            presetCustomValue(bundle, choiceId, topLeftId, radiusStyleMap);\n            presetCustomValue(bundle, choiceId, topRightId, radiusStyleMap);\n            presetCustomValue(bundle, choiceId, bottomLeftId, radiusStyleMap);\n            presetCustomValue(bundle, choiceId, bottomRightId, radiusStyleMap);\n        },\n        on: [\n            {\n                id: valueId,\n                type: 'multiInput',\n                layout: MultiInputLayout.Columns,\n                blocks: [\n                    {\n                        id: topLeftId,\n                        type: 'input',\n                        label: 'Top Left',\n                        rules: [numericalOrPixelRule],\n                        onChange: (bundle) => appendUnit(bundle, topLeftId),\n                    },\n                    {\n                        id: topRightId,\n                        type: 'input',\n                        label: 'Top Right',\n                        rules: [numericalOrPixelRule],\n                        onChange: (bundle) => appendUnit(bundle, topRightId),\n                    },\n                    {\n                        id: bottomLeftId,\n                        type: 'input',\n                        label: 'Bottom Left',\n                        rules: [numericalOrPixelRule],\n                        onChange: (bundle) => appendUnit(bundle, bottomLeftId),\n                    },\n                    {\n                        id: bottomRightId,\n                        type: 'input',\n                        label: 'Bottom Right',\n                        rules: [numericalOrPixelRule],\n                        onChange: (bundle) => appendUnit(bundle, bottomRightId),\n                    },\n                ],\n            },\n        ],\n        off: [getBorderRadiusSlider(choiceId, options?.defaultValue)],\n    };\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { SettingBlock, appendUnit, numericalOrPixelRule, presetCustomValue } from '../';\nimport { GutterSpacing, gutterSpacingStyleMap } from './types';\n\n/**\n * Returns gutter settings: gutter switch, gutter choices or gutter custom input\n *\n * @param options Options for the settings\n * @param options.id Custom id for the gutters switch\n * @param options.dependentSettingId Id of the dependent setting\n * @param options.spacingChoiceId Id of the spacing choice\n * @param options.defaultValueChoices Default value for the spacing choice\n * @returns {SettingBlock} Returns the gutter settings\n */\n\ntype GutterSettingsType = {\n    id?: string;\n    dependentSettingId?: string;\n    spacingChoiceId?: string;\n    spacingCustomId?: string;\n    defaultValueChoices?: GutterSpacing;\n};\n\nexport const getGutterSettings = (options?: GutterSettingsType): SettingBlock => {\n    const id = options?.id ? options.id : 'hasCustomSpacing';\n    const dependentSettingId = options?.dependentSettingId ? options.dependentSettingId : 'columns';\n    const spacingChoiceId = options?.spacingChoiceId ? options.spacingChoiceId : 'spacingChoice';\n    const spacingCustomId = options?.spacingCustomId ? options.spacingCustomId : 'spacingCustom';\n    const defaultValueChoices = options?.defaultValueChoices ? options.defaultValueChoices : GutterSpacing.M;\n\n    return {\n        id,\n        type: 'switch',\n        defaultValue: false,\n        switchLabel: 'Custom',\n        label: 'Gutter',\n        info: 'An official nerds term for ‘gap’',\n        onChange: (bundle) => presetCustomValue(bundle, spacingChoiceId, spacingCustomId, gutterSpacingStyleMap),\n        show: (bundle) => bundle.getBlock(dependentSettingId)?.value !== '1',\n        on: [\n            {\n                id: spacingCustomId,\n                type: 'input',\n                rules: [numericalOrPixelRule],\n                onChange: (bundle) => appendUnit(bundle, spacingCustomId),\n            },\n        ],\n        off: [\n            {\n                id: spacingChoiceId,\n                type: 'slider',\n                defaultValue: defaultValueChoices,\n                choices: [\n                    {\n                        value: GutterSpacing.Auto,\n                        label: 'Auto',\n                    },\n                    {\n                        value: GutterSpacing.S,\n                        label: 'S',\n                    },\n                    {\n                        value: GutterSpacing.M,\n                        label: 'M',\n                    },\n                    {\n                        value: GutterSpacing.L,\n                        label: 'L',\n                    },\n                ],\n            },\n        ],\n    };\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport {\n    SettingBlock,\n    appendUnit,\n    maximumNumericalOrPixelOrAutoRule,\n    numericalOrPixelRule,\n    presetCustomValue,\n} from '../';\nimport { MARGIN_DEFAULT_PLACEHOLDER } from './defaultValues';\nimport { Margin, marginStyleMap } from './types';\n\ntype MarginSettingsType = {\n    id?: string;\n    marginStyleMap?: Record<Margin, string>;\n};\n\n/**\n * Returns margin settings: margin switch, margin slider, custom margin input\n *\n * @param {string} id Custom suffix for the setting ids\n * @returns {SettingBlock} Returns margin settings\n */\nexport const getMarginSlider = (id: string): SettingBlock => ({\n    id,\n    type: 'segmentedControls',\n    defaultValue: Margin.None,\n    choices: [\n        {\n            value: Margin.None,\n            label: 'None',\n        },\n        {\n            value: Margin.Small,\n            label: 'S',\n        },\n        {\n            value: Margin.Medium,\n            label: 'M',\n        },\n        {\n            value: Margin.Large,\n            label: 'L',\n        },\n    ],\n});\n\nexport const getMarginSettings = (options?: MarginSettingsType): SettingBlock => {\n    const hasId = options?.id ? `hasCustomMarginValue_${options?.id}` : 'hasCustomMarginValue';\n    const valueId = options?.id ? `marginValue_${options?.id}` : 'marginValue';\n    const choiceId = options?.id ? `marginChoice_${options?.id}` : 'marginChoice';\n\n    return {\n        id: hasId,\n        label: 'Margin',\n        type: 'switch',\n        switchLabel: 'Custom',\n        defaultValue: false,\n        info: 'The spacing around UI elements to create more space',\n        onChange: (bundle) => presetCustomValue(bundle, choiceId, valueId, options?.marginStyleMap || marginStyleMap),\n        on: [\n            {\n                id: valueId,\n                type: 'input',\n                placeholder: MARGIN_DEFAULT_PLACEHOLDER,\n                rules: [numericalOrPixelRule, maximumNumericalOrPixelOrAutoRule(500)],\n                onChange: (bundle) => appendUnit(bundle, valueId),\n            },\n        ],\n        off: [getMarginSlider(choiceId)],\n    };\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport {\n    MultiInputLayout,\n    SettingBlock,\n    appendUnit,\n    maximumNumericalOrPixelOrAutoRule,\n    numericalOrPixelRule,\n    presetCustomValue,\n} from '../';\nimport { MARGIN_DEFAULT_PLACEHOLDER } from './defaultValues';\nimport { getMarginSlider } from './margin';\nimport { marginStyleMap } from './types';\n\ntype MarginSettingsType = {\n    id?: string;\n};\n\n/**\n * Returns margin settings: margin switch, margin slider, custom margin input for every direction\n *\n * @param options Options for the settings\n * @param options.id Custom suffix for the setting ids\n * @returns {SettingBlock} Returns margin settings\n */\nexport const getMarginExtendedSettings = (options?: MarginSettingsType): SettingBlock => {\n    const hasId = options?.id ? `hasExtendedCustomMargin_${options?.id}` : 'hasExtendedCustomMargin';\n    const valueId = options?.id ? `extendedMarginValues_${options?.id}` : 'extendedMarginValues';\n    const choiceId = options?.id ? `extendedMarginChoice_${options?.id}` : 'extendedMarginChoice';\n    const topId = options?.id ? `extendedMarginTop_${options?.id}` : 'extendedMarginTop';\n    const leftId = options?.id ? `extendedMarginLeft_${options?.id}` : 'extendedMarginLeft';\n    const rightId = options?.id ? `extendedMarginRight_${options?.id}` : 'extendedMarginRight';\n    const bottomId = options?.id ? `extendedMarginBottom_${options?.id}` : 'extendedMarginBottom';\n\n    return {\n        id: hasId,\n        label: 'Margin',\n        type: 'switch',\n        switchLabel: 'Custom',\n        defaultValue: false,\n        info: 'The spacing around UI elements to create more negative space',\n        onChange: (bundle) => {\n            presetCustomValue(bundle, choiceId, topId, marginStyleMap);\n            presetCustomValue(bundle, choiceId, leftId, marginStyleMap);\n            presetCustomValue(bundle, choiceId, rightId, marginStyleMap);\n            presetCustomValue(bundle, choiceId, bottomId, marginStyleMap);\n        },\n        on: [\n            {\n                id: valueId,\n                type: 'multiInput',\n                layout: MultiInputLayout.Spider,\n                blocks: [\n                    {\n                        id: topId,\n                        type: 'input',\n                        label: 'Top',\n                        placeholder: MARGIN_DEFAULT_PLACEHOLDER,\n                        onChange: (bundle) => appendUnit(bundle, topId),\n                        rules: [numericalOrPixelRule, maximumNumericalOrPixelOrAutoRule(500)],\n                    },\n                    {\n                        id: leftId,\n                        type: 'input',\n                        label: 'Left',\n                        placeholder: MARGIN_DEFAULT_PLACEHOLDER,\n                        onChange: (bundle) => appendUnit(bundle, leftId),\n                        rules: [numericalOrPixelRule, maximumNumericalOrPixelOrAutoRule(500)],\n                    },\n                    {\n                        id: rightId,\n                        type: 'input',\n                        label: 'Right',\n                        placeholder: MARGIN_DEFAULT_PLACEHOLDER,\n                        onChange: (bundle) => appendUnit(bundle, rightId),\n                        rules: [numericalOrPixelRule, maximumNumericalOrPixelOrAutoRule(500)],\n                    },\n                    {\n                        id: bottomId,\n                        type: 'input',\n                        label: 'Bottom',\n                        placeholder: MARGIN_DEFAULT_PLACEHOLDER,\n                        onChange: (bundle) => appendUnit(bundle, bottomId),\n                        rules: [numericalOrPixelRule, maximumNumericalOrPixelOrAutoRule(500)],\n                    },\n                ],\n            },\n        ],\n        off: [getMarginSlider(choiceId)],\n    };\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport {\n    SettingBlock,\n    appendUnit,\n    maximumNumericalOrPixelOrAutoRule,\n    numericalOrPixelRule,\n    presetCustomValue,\n} from '../';\nimport { PADDING_DEFAULT_PLACEHOLDER } from './defaultValues';\nimport { Padding, paddingStyleMap } from './types';\n\ntype PaddingSettingsType = {\n    id?: string;\n    paddingStyleMap?: Record<Padding, string>;\n};\n\n/**\n * Returns padding settings: padding switch, padding slider, custom padding input\n *\n * @param options Options for the settings\n * @param options.id Custom suffix for the setting ids\n * @returns {SettingBlock} Returns padding settings\n */\nexport const getPaddingSlider = (id: string): SettingBlock => ({\n    id,\n    type: 'segmentedControls',\n    defaultValue: Padding.Small,\n    choices: [\n        {\n            value: Padding.None,\n            label: 'None',\n        },\n        {\n            value: Padding.Small,\n            label: 'S',\n        },\n        {\n            value: Padding.Medium,\n            label: 'M',\n        },\n        {\n            value: Padding.Large,\n            label: 'L',\n        },\n    ],\n});\n\nexport const getPaddingSettings = (options?: PaddingSettingsType): SettingBlock => {\n    const hasId = options?.id ? `hasCustomPaddingValue_${options?.id}` : 'hasCustomPaddingValue';\n    const valueId = options?.id ? `paddingValue_${options?.id}` : 'paddingValue';\n    const choiceId = options?.id ? `paddingChoice_${options?.id}` : 'paddingChoice';\n\n    return {\n        id: hasId,\n        label: 'Padding',\n        type: 'switch',\n        switchLabel: 'Custom',\n        defaultValue: false,\n        info: 'The spacing around UI elements to create more negative space',\n        onChange: (bundle) => presetCustomValue(bundle, choiceId, valueId, options?.paddingStyleMap || paddingStyleMap),\n        on: [\n            {\n                id: valueId,\n                type: 'input',\n                placeholder: PADDING_DEFAULT_PLACEHOLDER,\n                rules: [numericalOrPixelRule, maximumNumericalOrPixelOrAutoRule(500)],\n                onChange: (bundle) => appendUnit(bundle, valueId),\n            },\n        ],\n        off: [getPaddingSlider(choiceId)],\n    };\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport {\n    MultiInputLayout,\n    SettingBlock,\n    appendUnit,\n    maximumNumericalOrPixelOrAutoRule,\n    numericalOrPixelRule,\n    presetCustomValue,\n} from '../';\nimport { PADDING_DEFAULT_PLACEHOLDER } from './defaultValues';\nimport { getPaddingSlider } from './padding';\nimport { paddingStyleMap } from './types';\n\ntype PaddingSettingsType = {\n    id?: string;\n};\n\n/**\n * Returns padding settings: padding switch, padding slider, custom padding input for every direction\n *\n * @param options Options for the settings\n * @param options.id Custom suffix for the setting ids\n * @returns {SettingBlock} Returns padding settings\n */\nexport const getPaddingExtendedSettings = (options?: PaddingSettingsType): SettingBlock => {\n    const hasId = options?.id ? `hasExtendedCustomPadding_${options?.id}` : 'hasExtendedCustomPadding';\n    const valueId = options?.id ? `extendedPaddingValues_${options?.id}` : 'extendedPaddingValues';\n    const choiceId = options?.id ? `extendedPaddingChoice_${options?.id}` : 'extendedPaddingChoice';\n    const topId = options?.id ? `extendedPaddingTop_${options?.id}` : 'extendedPaddingTop';\n    const leftId = options?.id ? `extendedPaddingLeft_${options?.id}` : 'extendedPaddingLeft';\n    const rightId = options?.id ? `extendedPaddingRight_${options?.id}` : 'extendedPaddingRight';\n    const bottomId = options?.id ? `extendedPaddingBottom_${options?.id}` : 'extendedPaddingBottom';\n\n    return {\n        id: hasId,\n        label: 'Padding',\n        type: 'switch',\n        switchLabel: 'Custom',\n        defaultValue: false,\n        info: 'The spacing around UI elements to create more negative space',\n        onChange: (bundle) => {\n            presetCustomValue(bundle, choiceId, topId, paddingStyleMap);\n            presetCustomValue(bundle, choiceId, leftId, paddingStyleMap);\n            presetCustomValue(bundle, choiceId, rightId, paddingStyleMap);\n            presetCustomValue(bundle, choiceId, bottomId, paddingStyleMap);\n        },\n        on: [\n            {\n                id: valueId,\n                type: 'multiInput',\n                layout: MultiInputLayout.Spider,\n                blocks: [\n                    {\n                        id: topId,\n                        type: 'input',\n                        label: 'Top',\n                        placeholder: PADDING_DEFAULT_PLACEHOLDER,\n                        onChange: (bundle) => appendUnit(bundle, topId),\n                        rules: [numericalOrPixelRule, maximumNumericalOrPixelOrAutoRule(500)],\n                    },\n                    {\n                        id: leftId,\n                        type: 'input',\n                        label: 'Left',\n                        placeholder: PADDING_DEFAULT_PLACEHOLDER,\n                        onChange: (bundle) => appendUnit(bundle, leftId),\n                        rules: [numericalOrPixelRule, maximumNumericalOrPixelOrAutoRule(500)],\n                    },\n                    {\n                        id: rightId,\n                        type: 'input',\n                        label: 'Right',\n                        placeholder: PADDING_DEFAULT_PLACEHOLDER,\n                        onChange: (bundle) => appendUnit(bundle, rightId),\n                        rules: [numericalOrPixelRule, maximumNumericalOrPixelOrAutoRule(500)],\n                    },\n                    {\n                        id: bottomId,\n                        type: 'input',\n                        label: 'Bottom',\n                        placeholder: PADDING_DEFAULT_PLACEHOLDER,\n                        onChange: (bundle) => appendUnit(bundle, bottomId),\n                        rules: [numericalOrPixelRule, maximumNumericalOrPixelOrAutoRule(500)],\n                    },\n                ],\n            },\n        ],\n        off: [getPaddingSlider(choiceId)],\n    };\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { SettingBlock } from '..';\nimport { Security } from './types';\n\n/**\n * Returns the downloadable security settings.\n *\n * @param {string} id custom id for the setting block\n * @param {string} globalControlId custom id for the global control setting block\n *\n * @returns {SettingBlock} Returns downloadable security settings.\n */\n\ntype SecurityDownloadableSettingType = {\n    id?: string;\n    globalControlId?: string;\n};\n\nexport const getSecurityDownloadableSetting = (options?: SecurityDownloadableSettingType): SettingBlock => {\n    const securityId = getSecurityGlobalControlId(options?.globalControlId);\n    return {\n        id: options?.id ? options.id : 'downloadable',\n        type: 'switch',\n        defaultValue: false,\n        label: 'Downloadable',\n        show: (bundle) => bundle.getBlock(securityId)?.value === Security.Custom,\n    };\n};\n\nexport const getSecurityGlobalControlId = (id?: string): string => {\n    return id || 'security';\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { SettingBlock, createFooter } from '..';\nimport { Security } from './types';\nimport { getSecurityGlobalControlId } from './securityDownloadable';\n\n/**\n * Returns segment controls for global security settings.\n *\n * @param {string} id custom id for the setting block\n *\n * @returns {SettingBlock} Returns\n */\n\nexport const getSecurityGlobalControlSetting = (id?: string): SettingBlock[] => {\n    const securityId = getSecurityGlobalControlId(id);\n    return [\n        {\n            id: securityId,\n            type: 'segmentedControls',\n            defaultValue: Security.Global,\n            choices: [\n                {\n                    value: Security.Global,\n                    label: 'Global Settings',\n                },\n                {\n                    value: Security.Custom,\n                    label: 'Custom',\n                },\n            ],\n        },\n        {\n            id: 'globalSettingsInfo',\n            type: 'notification',\n            footer: createFooter({\n                label: 'Change global settings [here].',\n                replace: { here: { event: 'general-settings.open' } },\n            }),\n        },\n    ];\n};\n","/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport './styles.css';\n\nimport type { FC } from 'react';\nimport type { AppBridgeBlock } from '@frontify/app-bridge';\nimport type {\n    AssetInputBlock as AssetInputBlockSidebarSettings,\n    BaseBlock as BaseBlockSidebarSettings,\n    Bundle as BundleSidebarSettings,\n    ChecklistBlock as ChecklistBlockSidebarSettings,\n    ChoicesType as ChoicesTypeSidebarSettings,\n    ColorInputBlock as ColorInputBlockSidebarSettings,\n    DropdownBlock as DropdownBlockSidebarSettings,\n    DynamicSettingBlock as DynamicSettingBlockSidebarSettings,\n    DynamicSupportedBlock as DynamicSupportedBlockSidebarSettings,\n    FontInputBlock as FontInputBlockSidebarSettings,\n    InputBlock as InputBlockSidebarSettings,\n    LegacyAssetInputBlock as LegacyAssetInputBlockSidebarSettings,\n    LinkChooserBlock as LinkChooserBlockSidebarSettings,\n    MultiInputBlock as MultiInputBlockSidebarSettings,\n    NotificationBlock as NotificationBlockSidebarSettings,\n    SectionHeadingBlock as SectionHeadingBlockSidebarSettings,\n    SegmentedControlsBlock as SegmentedControlsBlockSidebarSettings,\n    SettingBlock as SettingBlockSidebarSettings,\n    SimpleSettingBlock as SimpleSettingBlockSidebarSettings,\n    SwitchBlock as SwitchBlockSidebarSettings,\n    TemplateInputBlock as TemplateInputBlockSidebarSettings,\n    TextareaBlock as TextareaBlockSidebarSettings,\n    ValueOrPromisedValue as ValueOrPromisedValueSidebarSettings,\n} from '@frontify/sidebar-settings';\n\nexport * from '@frontify/sidebar-settings';\n\nexport type AssetInputBlock = AssetInputBlockSidebarSettings<AppBridgeBlock>;\nexport type BaseBlock<T = undefined> = BaseBlockSidebarSettings<AppBridgeBlock, T>;\nexport type Bundle = BundleSidebarSettings<AppBridgeBlock>;\nexport type ChecklistBlock = ChecklistBlockSidebarSettings<AppBridgeBlock>;\nexport type ChoicesType = ChoicesTypeSidebarSettings<AppBridgeBlock>;\nexport type ColorInputBlock = ColorInputBlockSidebarSettings<AppBridgeBlock>;\nexport type DropdownBlock = DropdownBlockSidebarSettings<AppBridgeBlock>;\nexport type DynamicSettingBlock<Block extends DynamicSupportedBlock = DynamicSupportedBlock> =\n    DynamicSettingBlockSidebarSettings<AppBridgeBlock, Block>;\nexport type DynamicSupportedBlock = DynamicSupportedBlockSidebarSettings<AppBridgeBlock>;\nexport type FontInputBlock = FontInputBlockSidebarSettings<AppBridgeBlock>;\nexport type InputBlock = InputBlockSidebarSettings<AppBridgeBlock>;\nexport type LegacyAssetInputBlock = LegacyAssetInputBlockSidebarSettings<AppBridgeBlock>;\nexport type LinkChooserBlock = LinkChooserBlockSidebarSettings<AppBridgeBlock>;\nexport type MultiInputBlock = MultiInputBlockSidebarSettings<AppBridgeBlock>;\nexport type NotificationBlock = NotificationBlockSidebarSettings<AppBridgeBlock>;\nexport type SectionHeadingBlock = SectionHeadingBlockSidebarSettings<AppBridgeBlock>;\nexport type SegmentedControlsBlock = SegmentedControlsBlockSidebarSettings<AppBridgeBlock>;\nexport type SettingBlock = SettingBlockSidebarSettings<AppBridgeBlock>;\nexport type SimpleSettingBlock = SimpleSettingBlockSidebarSettings<AppBridgeBlock>;\nexport type SwitchBlock = SwitchBlockSidebarSettings<AppBridgeBlock>;\nexport type TemplateInputBlock = TemplateInputBlockSidebarSettings<AppBridgeBlock>;\nexport type TextareaBlock = TextareaBlockSidebarSettings<AppBridgeBlock>;\nexport type ValueOrPromisedValue<T> = ValueOrPromisedValueSidebarSettings<AppBridgeBlock, T>;\n\nexport enum Sections {\n    Main = 'main',\n    Basics = 'basics',\n    Layout = 'layout',\n    Style = 'style',\n    Security = 'security',\n    Targets = 'targets',\n}\n\nexport type BlockSettingsStructureExport = {\n    [Sections.Main]?: SettingBlock[];\n    [Sections.Basics]?: SettingBlock[];\n    [Sections.Layout]?: SettingBlock[];\n    [Sections.Style]?: SettingBlock[];\n    [Sections.Security]?: SettingBlock[];\n} & { [customSectionName: string]: SettingBlock[] };\n\nexport type BlockProps = {\n    /**\n     * The Frontify App Bridge provides an interface to the Frontify app internals.\n     * {@link https://developer.frontify.com/d/XFPCrGNrXQQM/content-blocks#/details-concepts-1/content-blocks/introducing-the-app-bridge}\n     */\n    appBridge: AppBridgeBlock;\n};\n\nexport type BlockConfigExport = {\n    /**\n     * Block component to render.\n     * {@link https://developer.frontify.com/d/XFPCrGNrXQQM/content-blocks#/details-concepts-1/content-blocks}\n     */\n    block: FC<BlockProps>;\n    /**\n     * Contains the block settings and its structure.\n     * {@link https://developer.frontify.com/d/XFPCrGNrXQQM/content-blocks#/details-concepts-1/block-settings-1}\n     */\n    settings: ReturnType<typeof defineSettings>;\n    /**\n     * Block lifecycle hook ran before the block gets added in the Guideline.\n     * The hook support both synchronous or asynchronous execution.\n     * {@link https://developer.frontify.com/d/XFPCrGNrXQQM/content-blocks#/details-concepts-1/block-lifecycle/on-block-creation}\n     */\n    onBlockCreated?:\n        | (({ appBridge }: { appBridge: AppBridgeBlock }) => void)\n        | (({ appBridge }: { appBridge: AppBridgeBlock }) => Promise<void>);\n    /**\n     * Block lifecycle hook ran before the block gets deleted from the Guideline.\n     * The hook support both synchronous or asynchronous execution.\n     * {@link https://developer.frontify.com/d/XFPCrGNrXQQM/content-blocks#/details-concepts-1/block-lifecycle/on-block-deletion}\n     */\n    onBlockDeleted?:\n        | (({ appBridge }: { appBridge: AppBridgeBlock }) => void)\n        | (({ appBridge }: { appBridge: AppBridgeBlock }) => Promise<void>);\n};\n\n/**\n * Type helper to make it easier to export a theme, accepts a direct {@link BlockConfigExport} object.\n */\nexport const defineBlock = (config: BlockConfigExport): BlockConfigExport => config;\n\n/**\n * Type helper to make it easier to export block's settings structure, accepts a direct {@link BlockSettingsStructureExport} object\n * or a function return a direct {@link BlockSettingsStructureExport} or a function returning a Promise of {@link BlockSettingsStructureExport}.\n */\nexport const defineSettings = <\n    T extends\n        | BlockSettingsStructureExport\n        | (() => Promise<BlockSettingsStructureExport>)\n        | (() => BlockSettingsStructureExport),\n>(\n    settingsStructure: T,\n): T => settingsStructure;\n\nexport * from './components';\nexport * from './helpers';\nexport * from './hooks';\nexport * from './settings';\nexport * from './utilities';\n"],"names":["joinClassNames","classNames","BlockInjectButton","onDrop","label","icon","secondaryLabel","isLoading","fillParentContainer","onAssetChooseClick","onUploadClick","withMenu","onClick","validFileType","verticalLayout","isDraggingOver","setIsDraggingOver","useState","menuPosition","setMenuPosition","buttonRef","useRef","errorMsg","setErrorMsg","handleDrop","event","isValidAsset","files","i","droppedFileExtension","FileExtensionSets","openMenu","left","top","XInsideComponent","YInsideComponent","jsxs","item","_a","LoadingCircle","jsx","IconExclamationMarkTriangle","Fragment","Flyout","isOpen","ActionMenu","MenuItemContentSize","IconArrowCircleUp20","IconImageStack20","toShortRgba","color","isRgbaLongFormat","value","mapToShortFormat","alpha","isDark","threshold","inputColor","parsedColor","tinycolor","toHex8String","toHexString","toRgbaString","setAlpha","toColorObject","colorString","r","g","b","a","getReadableColor","textColor","backgroundColor","inputTextColor","inputBackgroundColor","parsedTextColor","parsedBackgroundColor","readability","moveItemInArray","array","from","to","newArray","toIndex","slice","getBackgroundColorStyles","BorderStyle","borderStyleMap","Radius","radiusStyleMap","Padding","paddingStyleMap","Margin","marginStyleMap","Security","GutterSpacing","gutterSpacingStyleMap","BACKGROUND_COLOR_DEFAULT_VALUE","BORDER_COLOR_DEFAULT_VALUE","BORDER_WIDTH_DEFAULT_VALUE","PADDING_DEFAULT_PLACEHOLDER","MARGIN_DEFAULT_PLACEHOLDER","getBorderStyles","style","borderWidth","getRadiusStyles","radiusChoice","hasRadius","radiusValue","DEFAULT_DRAG_TOOLTIP","DEFAULT_DRAGGING_TOOLTIP","Toolbar","items","flyoutItems","isFlyoutOpen","setIsFlyoutOpen","isDragging","isFlyoutDisabled","Tooltip","TooltipPosition","IconDotsHorizontal16","block","blockIndex","itemIndex","BlockItemWrapper","children","toolbarFlyoutItems","toolbarItems","shouldHideWrapper","shouldHideComponent","shouldFillContainer","outlineOffset","shouldBeShown","setIsFlyoutDisabled","wrapperRef","useEffect","getDecorator","type","IconImage24","IconPlayFrame24","IconMusicNote24","IconDocument24","AttachmentItem","forwardRef","isEditing","draggableProps","transformStyle","isOverlay","onDelete","onReplaceWithBrowse","onReplaceWithUpload","ref","selectedAsset","setSelectedAsset","openFileDialog","selectedFiles","useFileInput","uploadFile","uploadResults","doneAll","useAssetUpload","focusProps","isFocusVisible","useFocusRing","download","url","filename","response","blob","showLoadingCircle","LoadingCircleSize","FOCUS_STYLE","IconGrabHandle20","FlyoutPlacement","_","Button","IconPen20","ButtonEmphasis","MenuItemStyle","IconTrashBin20","SortableAttachmentItem","props","attributes","listeners","setNodeRef","transform","transition","useSortable","Attachments","onBrowse","onUpload","onSorted","appBridge","internalItems","setInternalItems","sensors","useSensors","useSensor","PointerSensor","KeyboardSensor","draggedAssetId","setDraggedAssetId","isUploadLoading","setIsUploadLoading","assetIdsLoading","setAssetIdsLoading","setSelectedFiles","useEditorState","draggedItem","onOpenAssetChooser","result","internalItem","onReplaceItemWithBrowse","toReplace","id","onReplaceItemWithUpload","uploadedAsset","handleDragStart","active","handleDragEnd","over","oldIndex","newIndex","sortedItems","arrayMove","IconPaperclip16","IconCaretDown12","DndContext","closestCenter","restrictToWindowEdges","SortableContext","rectSortingStrategy","DragOverlay","AssetInput","AssetInputSize","fileList","DownloadButton","onDownload","isFocused","e","IconArrowCircleDown16","useFloatingLinkInsert","floatingOptions","editor","useEditorRef","focused","useFocused","mode","useFloatingLinkSelectors","open","triggerFloatingLinkHotkeys","getPluginOptions","ELEMENT_LINK","useHotkeys","triggerFloatingLinkInsert","update","floating","useVirtualFloatingLink","getSelectionBoundingClientRect","floatingLinkActions","useFloatingLinkEscape","useComposedRef","FloatingLinkInsertRoot","createComponentAs","htmlProps","createElementAs","FloatingLinkEditRoot","useFloatingLinkEdit","PlateFloatingLink","FloatingLink","LINK_PLUGIN","hasRichTextValue","string","hasText","child","json","convertToRteValue","textStyle","text","align","directions","KeyboardCode","customCoordinatesGetterFactory","columnGap","rowGap","currentCoordinates","activeNode","width","height","isDownloadable","security","downloadable","globalAssetDownloadEnabled","mapAppBridgeColorPalettesToFonduePalettes","colorPalettes","mapAppBridgeColorPaletteToFonduePalette","colorPalette","getLinkNode","cb","linkNode","getAboveNode","getLegacyUrl","link","_b","getUrl","getUrlFromLinkOrLegacyLink","getUrlFromEditor","relativeUrlRegex","addHttps","isValidUrl","parsedUrl","isValidUrlOrEmpty","ELEMENT_BUTTON","createButtonNode","buttonStyle","target","getPluginType","floatingButtonStore","createStore","set","editorId","state","floatingButtonActions","floatingButtonSelectors","useFloatingButtonSelectors","triggerFloatingButtonEdit","entry","findNode","path","getEditorString","useFloatingButtonEdit","keyEditor","usePlateSelectors","triggerFloatingButtonHotkeys","getBoundingClientRect","useCallback","getRangeBoundingClientRect","getStartPoint","getEndPoint","getDefaultBoundingClientRect","useVirtualFloatingButton","someNode","useFloatingButtonEnter","useFloatingButtonEscape","triggerFloatingButtonInsert","isRangeAcrossBlocks","useFloatingButtonInsert","useFloatingButtonEditButton","FloatingButtonEditButton","insertButton","createButtonNodeOptions","options","insertNodes","submitFloatingButton","isUrl","forceSubmit","upsertButton","_url","focusEditor","unwrapButton","withoutNormalizing","splitNodes","n","isElement","_c","_d","_e","_f","unwrapNodes","insertTextInButton","insertNodesOptions","at","buttonAbove","isDefined","editButtonUrlAndTarget","buttonEntry","buttonNode","buttonPath","shouldReplaceText","shouldReplaceButtonText","isExpanded","anchorAndFocusInButton","removeNodes","getNodeProps","leaf","getNodeLeaf","wrapButton","upsertButtonText","setNodes","newButton","newButtonNode","newButtonPath","firstText","replaceNodeChildren","wrapNodes","useUnlinkButton","UnlinkButton","FloatingButtonEditRoot","FloatingButtonInsertRoot","FloatingButton","useFloatingButtonUrlInput","updated","onChange","mergeProps","OFFSET_Y","OFFSET_X","PADDING","useVirtualFloating","offset","flip","triggerFloatingButton","BlockButtonStyles","useButton","useElementProps","element","ButtonMarkupElementNode","href","HoverableButtonLink","styles","hovered","setHovered","ButtonMarkupElement","MarkupElement","node","ButtonToolbarButton","isEnabled","isRangeInSameBlock","isLink","ToolbarButton","getTooltip","getHotkeyByPlatform","getButtonClassNames","ButtonButton","IconButton16","buttonStyles","EditModal","urlHtmlProps","BlockStyles","IconPen16","IconTrashBin16","SectionLink","section","selectedUrl","onSelectUrl","isActive","merge","IconDocumentText16","PageLink","page","itemsToExpandInitially","setIsExpanded","documentSections","useDocumentSection","sectionsArray","hasSections","PageLinks","documentId","pages","setPages","setIsLoading","pagesArray","hasPages","_pages","DocumentLink","document","IconColorFan16","DocumentLinks","documents","setDocuments","setItemsToExpandInitially","documentArray","findLocationOfSelectedUrl","_documents","itemsToExpand","LinkSelector","onUrlChange","openLinkTree","isLinkTreeOpen","closeLinkTree","useOverlayTriggerState","setSelectedUrl","onPressEnter","saveLink","IconLink","ButtonSize","ButtonType","ButtonStyle","Modal","InsertModal","onTextChange","onToggleTab","onCancel","onSave","hasValues","testId","FormControl","TextInput","Checkbox","IconCheckMark20","getButtonStyle","initialState","CheckboxState","InsertModalState","dispatch","useReducer","action","payload","useInsertModal","onButtonStyleChange","checked","urlToSave","InsertButtonModal","modalProps","HoverableButton","getStyles","CustomFloatingButton","input","editContent","withButton","apply","normalizeNode","operation","range","isCollapsed","newPoint","isStartPoint","getPreviousNodeEndPoint","isEndPoint","getNextNodeStartPoint","nextPoint","select","nextPath","Path","withRemoveEmptyNodes","mockPlugin","BUTTON_PLUGIN","createButtonPlugin","createPluginFactory","el","ButtonPlugin","Plugin","TextStyles","useFloatingLinkUrlInput","floatingLinkSelectors","triggerFloatingLinkEdit","useFloatingLinkEnter","legacyUrl","submitFloatingLink","InsertLinkModal","CustomFloatingLink","readOnly","LinkButton","usePlateEditorState","useEventPlateId","LinkToolbarButton","IconSize","useLink","LinkMarkupElementNode","LinkMarkupElement","createLinkPlugin","createPlateLinkPlugin","LinkPlugin","ID","Custom1Plugin","Custom1MarkupElement","createCustom1Plugin","Custom1MarkupElementNode","alignmentClassnames","getColumnBreakClasses","Custom2Plugin","Custom2MarkupElement","createCustom2Plugin","Custom2MarkupElementNode","Custom3Plugin","Custom3MarkupElement","createCustom3Plugin","Custom3MarkupElementNode","Heading1Plugin","Heading1MarkupElement","createHeading1Plugin","Heading1MarkupElementNode","Heading2Plugin","Heading2MarkupElement","createHeading2Plugin","Heading2MarkupElementNode","Heading3Plugin","Heading3MarkupElement","createHeading3Plugin","Heading3MarkupElementNode","Heading4Plugin","Heading4MarkupElement","createHeading4Plugin","Heading4MarkupElementNode","ImageCaptionPlugin","ImageCaptionMarkupElement","createImageCaptionPlugin","ImageCaptionMarkupElementNode","ImageTitlePlugin","ImageTitleMarkupElement","createImageTitlePlugin","ImageTitleMarkupElementNode","ParagraphPlugin","ParagraphMarkupElement","createParagraphPlugin","PARAGRAPH_CLASSES","ParagraphMarkupElementNode","className","createPlateParagraphPlugin","QuotePlugin","QuoteMarkupElement","createQuotePlugin","QuoteMarkupElementNode","TextStylePluginsWithoutImage","TextStylesWithoutImage","AllTextStylePlugins","AllTextStyles","serializeLeafToHtml","escapeHtml","bold","italic","underline","strikethrough","code","subscript","superscript","BOLD_CLASSES","ITALIC_CLASSES","UNDERLINE_CLASSES","STRIKETHROUGH_CLASSES","CODE_CLASSES","reactCssPropsToCss","acc","key","convertCamelCaseToKebabCase","str","defaultClassNames","buttonTypeString","buttonType","defaultStyles","chosenLink","defaultNode","getStyledChild","checkItemNode","mentionHtmlNode","mentionable","div","ReactDOM","MentionMarkupElementNode","countNodesOfType","nodes","serializeNodeToHtmlRecursive","mappedMentionable","nestingCount","isText","rootNestingCount","htmlMapper","MapNodeTypesToHtml","getClassNames","ELEMENT_UL","args","UL_CLASSES","ELEMENT_OL","nestingLevel","getOrderedListClasses","OL_STYLES","ELEMENT_LI","LI_CLASSNAMES","getLiStyles","ELEMENT_LIC","getLicElementClassNames","ELEMENT_CHECK_ITEM","ELEMENT_MENTION","breakAfterColumn","breakWordsClass","columnBreakClasses","alignClass","serializeRawToHtmlAsync","raw","columns","plugins","PluginComposer","parseRawValue","serializeNodesToHtml","mapMentionable","html","len","isEmptyNode","SerializedText","gap","show","setHtml","RichTextEditor","placeholder","showSerializedText","shouldPreventPageLeave","setShouldPreventPageLeave","saveText","newContent","unloadHandler","FondueRichTextEditor","getDefaultPluginsWithLinkChooser","SoftBreakPlugin","TextStylePlugin","BoldPlugin","ItalicPlugin","UnderlinePlugin","StrikethroughPlugin","CodePlugin","AlignLeftPlugin","AlignCenterPlugin","AlignRightPlugin","AlignJustifyPlugin","UnorderedListPlugin","CheckboxListPlugin","OrderedListPlugin","ResetFormattingPlugin","THEME_PREFIX","useAttachments","assetId","blockAssets","updateAssetIdsFromKey","useBlockAssets","attachments","newAssets","newAssetIds","attachment","asset","assetToDelete","attachmentToReplace","newAsset","assets","keyboardCodes","useDndSensors","customCoordinatesGetter","getBackgroundSettings","hasId","colorId","defaultColor","switchLabel","getBorderSettings","selectionId","styleId","widthId","bundle","appendUnit","MultiInputLayout","numericalOrPixelRule","maximumNumericalOrPixelOrAutoRule","getBorderRadiusSlider","defaultValue","getBorderRadiusSettings","valueId","choiceId","presetCustomValue","getExtendedBorderRadiusSettings","topLeftId","topRightId","bottomLeftId","bottomRightId","getGutterSettings","dependentSettingId","spacingChoiceId","spacingCustomId","defaultValueChoices","getMarginSlider","getMarginSettings","getMarginExtendedSettings","topId","leftId","rightId","bottomId","getPaddingSlider","getPaddingSettings","getPaddingExtendedSettings","getSecurityDownloadableSetting","securityId","getSecurityGlobalControlId","getSecurityGlobalControlSetting","createFooter","Sections","defineBlock","config","defineSettings","settingsStructure"],"mappings":"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"}