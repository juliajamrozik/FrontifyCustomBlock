{"version":3,"file":"index.es.js","sources":["../src/index.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport './styles.css';\n\nimport type { FC } from 'react';\nimport type { AppBridgeBlock } from '@frontify/app-bridge';\nimport type {\n    AssetInputBlock as AssetInputBlockSidebarSettings,\n    BaseBlock as BaseBlockSidebarSettings,\n    Bundle as BundleSidebarSettings,\n    ChecklistBlock as ChecklistBlockSidebarSettings,\n    ChoicesType as ChoicesTypeSidebarSettings,\n    ColorInputBlock as ColorInputBlockSidebarSettings,\n    DropdownBlock as DropdownBlockSidebarSettings,\n    DynamicSettingBlock as DynamicSettingBlockSidebarSettings,\n    DynamicSupportedBlock as DynamicSupportedBlockSidebarSettings,\n    FontInputBlock as FontInputBlockSidebarSettings,\n    InputBlock as InputBlockSidebarSettings,\n    LegacyAssetInputBlock as LegacyAssetInputBlockSidebarSettings,\n    LinkChooserBlock as LinkChooserBlockSidebarSettings,\n    MultiInputBlock as MultiInputBlockSidebarSettings,\n    NotificationBlock as NotificationBlockSidebarSettings,\n    SectionHeadingBlock as SectionHeadingBlockSidebarSettings,\n    SegmentedControlsBlock as SegmentedControlsBlockSidebarSettings,\n    SettingBlock as SettingBlockSidebarSettings,\n    SimpleSettingBlock as SimpleSettingBlockSidebarSettings,\n    SwitchBlock as SwitchBlockSidebarSettings,\n    TemplateInputBlock as TemplateInputBlockSidebarSettings,\n    TextareaBlock as TextareaBlockSidebarSettings,\n    ValueOrPromisedValue as ValueOrPromisedValueSidebarSettings,\n} from '@frontify/sidebar-settings';\n\nexport * from '@frontify/sidebar-settings';\n\nexport type AssetInputBlock = AssetInputBlockSidebarSettings<AppBridgeBlock>;\nexport type BaseBlock<T = undefined> = BaseBlockSidebarSettings<AppBridgeBlock, T>;\nexport type Bundle = BundleSidebarSettings<AppBridgeBlock>;\nexport type ChecklistBlock = ChecklistBlockSidebarSettings<AppBridgeBlock>;\nexport type ChoicesType = ChoicesTypeSidebarSettings<AppBridgeBlock>;\nexport type ColorInputBlock = ColorInputBlockSidebarSettings<AppBridgeBlock>;\nexport type DropdownBlock = DropdownBlockSidebarSettings<AppBridgeBlock>;\nexport type DynamicSettingBlock<Block extends DynamicSupportedBlock = DynamicSupportedBlock> =\n    DynamicSettingBlockSidebarSettings<AppBridgeBlock, Block>;\nexport type DynamicSupportedBlock = DynamicSupportedBlockSidebarSettings<AppBridgeBlock>;\nexport type FontInputBlock = FontInputBlockSidebarSettings<AppBridgeBlock>;\nexport type InputBlock = InputBlockSidebarSettings<AppBridgeBlock>;\nexport type LegacyAssetInputBlock = LegacyAssetInputBlockSidebarSettings<AppBridgeBlock>;\nexport type LinkChooserBlock = LinkChooserBlockSidebarSettings<AppBridgeBlock>;\nexport type MultiInputBlock = MultiInputBlockSidebarSettings<AppBridgeBlock>;\nexport type NotificationBlock = NotificationBlockSidebarSettings<AppBridgeBlock>;\nexport type SectionHeadingBlock = SectionHeadingBlockSidebarSettings<AppBridgeBlock>;\nexport type SegmentedControlsBlock = SegmentedControlsBlockSidebarSettings<AppBridgeBlock>;\nexport type SettingBlock = SettingBlockSidebarSettings<AppBridgeBlock>;\nexport type SimpleSettingBlock = SimpleSettingBlockSidebarSettings<AppBridgeBlock>;\nexport type SwitchBlock = SwitchBlockSidebarSettings<AppBridgeBlock>;\nexport type TemplateInputBlock = TemplateInputBlockSidebarSettings<AppBridgeBlock>;\nexport type TextareaBlock = TextareaBlockSidebarSettings<AppBridgeBlock>;\nexport type ValueOrPromisedValue<T> = ValueOrPromisedValueSidebarSettings<AppBridgeBlock, T>;\n\nexport enum Sections {\n    Main = 'main',\n    Basics = 'basics',\n    Layout = 'layout',\n    Style = 'style',\n    Security = 'security',\n    Targets = 'targets',\n}\n\nexport type BlockSettingsStructureExport = {\n    [Sections.Main]?: SettingBlock[];\n    [Sections.Basics]?: SettingBlock[];\n    [Sections.Layout]?: SettingBlock[];\n    [Sections.Style]?: SettingBlock[];\n    [Sections.Security]?: SettingBlock[];\n} & { [customSectionName: string]: SettingBlock[] };\n\nexport type BlockProps = {\n    /**\n     * The Frontify App Bridge provides an interface to the Frontify app internals.\n     * {@link https://developer.frontify.com/d/XFPCrGNrXQQM/content-blocks#/details-concepts-1/content-blocks/introducing-the-app-bridge}\n     */\n    appBridge: AppBridgeBlock;\n};\n\nexport type BlockConfigExport = {\n    /**\n     * Block component to render.\n     * {@link https://developer.frontify.com/d/XFPCrGNrXQQM/content-blocks#/details-concepts-1/content-blocks}\n     */\n    block: FC<BlockProps>;\n    /**\n     * Contains the block settings and its structure.\n     * {@link https://developer.frontify.com/d/XFPCrGNrXQQM/content-blocks#/details-concepts-1/block-settings-1}\n     */\n    settings: ReturnType<typeof defineSettings>;\n    /**\n     * Block lifecycle hook ran before the block gets added in the Guideline.\n     * The hook support both synchronous or asynchronous execution.\n     * {@link https://developer.frontify.com/d/XFPCrGNrXQQM/content-blocks#/details-concepts-1/block-lifecycle/on-block-creation}\n     */\n    onBlockCreated?:\n        | (({ appBridge }: { appBridge: AppBridgeBlock }) => void)\n        | (({ appBridge }: { appBridge: AppBridgeBlock }) => Promise<void>);\n    /**\n     * Block lifecycle hook ran before the block gets deleted from the Guideline.\n     * The hook support both synchronous or asynchronous execution.\n     * {@link https://developer.frontify.com/d/XFPCrGNrXQQM/content-blocks#/details-concepts-1/block-lifecycle/on-block-deletion}\n     */\n    onBlockDeleted?:\n        | (({ appBridge }: { appBridge: AppBridgeBlock }) => void)\n        | (({ appBridge }: { appBridge: AppBridgeBlock }) => Promise<void>);\n};\n\n/**\n * Type helper to make it easier to export a theme, accepts a direct {@link BlockConfigExport} object.\n */\nexport const defineBlock = (config: BlockConfigExport): BlockConfigExport => config;\n\n/**\n * Type helper to make it easier to export block's settings structure, accepts a direct {@link BlockSettingsStructureExport} object\n * or a function return a direct {@link BlockSettingsStructureExport} or a function returning a Promise of {@link BlockSettingsStructureExport}.\n */\nexport const defineSettings = <\n    T extends\n        | BlockSettingsStructureExport\n        | (() => Promise<BlockSettingsStructureExport>)\n        | (() => BlockSettingsStructureExport),\n>(\n    settingsStructure: T,\n): T => settingsStructure;\n\nexport * from './components';\nexport * from './helpers';\nexport * from './hooks';\nexport * from './settings';\nexport * from './utilities';\n"],"names":["Sections","defineBlock","config","defineSettings","settingsStructure"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DY,IAAAA,sBAAAA,OACRA,EAAA,OAAO,QACPA,EAAA,SAAS,UACTA,EAAA,SAAS,UACTA,EAAA,QAAQ,SACRA,EAAA,WAAW,YACXA,EAAA,UAAU,WANFA,IAAAA,KAAA,CAAA,CAAA;AAyDC,MAAAC,IAAc,CAACC,MAAiDA,GAMhEC,IAAiB,CAM1BC,MACIA;"}