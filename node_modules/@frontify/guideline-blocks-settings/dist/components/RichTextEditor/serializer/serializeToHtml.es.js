import { parseRawValue as c, PluginComposer as p, mapMentionable as y } from "@frontify/fondue";
import { serializeNodeToHtmlRecursive as f } from "./serializeNodesToHtmlRecursive.es.js";
import { BlockStyles as u } from "../plugins/styles.es.js";
const A = async (e, r = 1, t = "normal", l = new p()) => {
  const i = c({ raw: e, plugins: l }), o = l.getStyles;
  return Promise.resolve(v(i, { columns: r, columnGap: t, styles: o }));
}, v = (e, { mentionable: r, columns: t = 1, columnGap: l = "normal", styles: i = u } = {}) => {
  const o = r ? y(r) : /* @__PURE__ */ new Map();
  let s = "";
  for (let a = 0, n = e.length; a < n; a++) {
    const m = e[a];
    h(m) ? s += "<br />" : s += f(m, i, {
      mappedMentionable: o
    });
  }
  return t > 1 ? `<div style="columns:${t}; column-gap:${l};">${s}</div>` : s;
}, h = (e) => {
  var r;
  return Array.isArray(e == null ? void 0 : e.children) ? (r = e == null ? void 0 : e.children) == null ? void 0 : r.every((t) => t.text === "") : !1;
};
export {
  v as serializeNodesToHtml,
  A as serializeRawToHtmlAsync
};
//# sourceMappingURL=serializeToHtml.es.js.map
