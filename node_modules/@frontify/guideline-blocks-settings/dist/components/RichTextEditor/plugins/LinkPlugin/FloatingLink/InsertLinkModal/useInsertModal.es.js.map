{"version":3,"file":"useInsertModal.es.js","sources":["../../../../../../../src/components/RichTextEditor/plugins/LinkPlugin/FloatingLink/InsertLinkModal/useInsertModal.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { AppBridgeBlock } from '@frontify/app-bridge';\nimport { CheckboxState } from '@frontify/fondue';\nimport {\n    ELEMENT_LINK,\n    floatingLinkActions,\n    floatingLinkSelectors,\n    getPluginOptions,\n    submitFloatingLink,\n    useEditorRef,\n    useHotkeys,\n} from '@udecode/plate';\nimport { Dispatch, Reducer, useEffect, useReducer } from 'react';\nimport { getLegacyUrl, getUrl } from '../../utils';\nimport { InsertModalDispatchType, InsertModalStateProps } from './types';\nimport { addHttps } from '../../../../../../helpers';\nimport { isValidUrlOrEmpty } from '../../utils/url';\n\nconst initialState: InsertModalStateProps = {\n    url: '',\n    text: '',\n    newTab: CheckboxState.Unchecked,\n};\n\nexport const InsertModalState = (): [InsertModalStateProps, Dispatch<InsertModalDispatchType>] => {\n    const [state, dispatch] = useReducer<Reducer<InsertModalStateProps, InsertModalDispatchType>>((state, action) => {\n        const { type, payload } = action;\n\n        switch (type) {\n            case 'NEW_TAB':\n                return {\n                    ...state,\n                    newTab: CheckboxState.Checked,\n                };\n            case 'SAME_TAB':\n                return {\n                    ...state,\n                    newTab: CheckboxState.Unchecked,\n                };\n            case 'URL':\n            case 'TEXT':\n            case 'INIT':\n                return {\n                    ...state,\n                    ...payload,\n                };\n            default:\n                return state;\n        }\n    }, initialState);\n\n    return [state, dispatch];\n};\n\nexport const useInsertModal = () => {\n    const editor = useEditorRef();\n    const [state, dispatch] = InsertModalState();\n\n    useEffect(() => {\n        const legacyUrl = getLegacyUrl(editor);\n        const url = getUrl(editor);\n\n        dispatch({\n            type: 'INIT',\n            payload: {\n                text: floatingLinkSelectors.text(),\n                newTab: floatingLinkSelectors.newTab() ? CheckboxState.Checked : CheckboxState.Unchecked,\n                url: legacyUrl && url === '' ? legacyUrl : floatingLinkSelectors.url(),\n            },\n        });\n    }, [dispatch, editor]);\n\n    const onTextChange = (value: string) => {\n        dispatch({\n            type: 'TEXT',\n            payload: { text: value },\n        });\n    };\n\n    const onUrlChange = (value: string) => {\n        dispatch({\n            type: 'URL',\n            payload: { url: value },\n        });\n    };\n\n    const onToggleTab = (checked: boolean) => {\n        checked ? dispatch({ type: 'NEW_TAB' }) : dispatch({ type: 'SAME_TAB' });\n    };\n\n    const onCancel = () => {\n        floatingLinkActions.hide();\n    };\n\n    const onSave = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | KeyboardEvent | undefined) => {\n        if (!isValidUrlOrEmpty(state.url) || !hasValues) {\n            return;\n        }\n\n        const urlToSave = addHttps(state.url);\n\n        floatingLinkActions.text(state.text);\n        floatingLinkActions.url(urlToSave);\n        floatingLinkActions.newTab(state.newTab === CheckboxState.Checked);\n\n        if (submitFloatingLink(editor)) {\n            event?.preventDefault();\n        }\n    };\n\n    const hasValues = state.url !== '' && state.text !== '';\n\n    const { appBridge } = getPluginOptions<{ appBridge: AppBridgeBlock }>(editor, ELEMENT_LINK);\n\n    useHotkeys(\n        'enter',\n        onSave,\n        {\n            enableOnFormTags: ['INPUT'],\n        },\n        [],\n    );\n\n    return {\n        state,\n        onTextChange,\n        onUrlChange,\n        onToggleTab,\n        onCancel,\n        onSave,\n        hasValues,\n        isValidUrlOrEmpty,\n        appBridge,\n    };\n};\n"],"names":["initialState","CheckboxState","InsertModalState","state","dispatch","useReducer","action","type","payload","useInsertModal","editor","useEditorRef","useEffect","legacyUrl","getLegacyUrl","url","getUrl","floatingLinkSelectors","onTextChange","value","onUrlChange","onToggleTab","checked","onCancel","floatingLinkActions","onSave","event","isValidUrlOrEmpty","hasValues","urlToSave","addHttps","submitFloatingLink","appBridge","getPluginOptions","ELEMENT_LINK","useHotkeys"],"mappings":";;;;;;AAmBA,MAAMA,IAAsC;AAAA,EACxC,KAAK;AAAA,EACL,MAAM;AAAA,EACN,QAAQC,EAAc;AAC1B,GAEaC,IAAmB,MAAkE;AAC9F,QAAM,CAACC,GAAOC,CAAQ,IAAIC,EAAoE,CAACF,GAAOG,MAAW;AACvG,UAAA,EAAE,MAAAC,GAAM,SAAAC,EAAY,IAAAF;AAE1B,YAAQC,GAAM;AAAA,MACV,KAAK;AACM,eAAA;AAAA,UACH,GAAGJ;AAAAA,UACH,QAAQF,EAAc;AAAA,QAAA;AAAA,MAE9B,KAAK;AACM,eAAA;AAAA,UACH,GAAGE;AAAAA,UACH,QAAQF,EAAc;AAAA,QAAA;AAAA,MAE9B,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACM,eAAA;AAAA,UACH,GAAGE;AAAAA,UACH,GAAGK;AAAA,QAAA;AAAA,MAEX;AACWL,eAAAA;AAAAA,IACf;AAAA,KACDH,CAAY;AAER,SAAA,CAACG,GAAOC,CAAQ;AAC3B,GAEaK,IAAiB,MAAM;AAChC,QAAMC,IAASC,KACT,CAACR,GAAOC,CAAQ,IAAIF,EAAiB;AAE3C,EAAAU,EAAU,MAAM;AACN,UAAAC,IAAYC,EAAaJ,CAAM,GAC/BK,IAAMC,EAAON,CAAM;AAEhB,IAAAN,EAAA;AAAA,MACL,MAAM;AAAA,MACN,SAAS;AAAA,QACL,MAAMa,EAAsB,KAAK;AAAA,QACjC,QAAQA,EAAsB,OAAA,IAAWhB,EAAc,UAAUA,EAAc;AAAA,QAC/E,KAAKY,KAAaE,MAAQ,KAAKF,IAAYI,EAAsB,IAAI;AAAA,MACzE;AAAA,IAAA,CACH;AAAA,EAAA,GACF,CAACb,GAAUM,CAAM,CAAC;AAEf,QAAAQ,IAAe,CAACC,MAAkB;AAC3B,IAAAf,EAAA;AAAA,MACL,MAAM;AAAA,MACN,SAAS,EAAE,MAAMe,EAAM;AAAA,IAAA,CAC1B;AAAA,EAAA,GAGCC,IAAc,CAACD,MAAkB;AAC1B,IAAAf,EAAA;AAAA,MACL,MAAM;AAAA,MACN,SAAS,EAAE,KAAKe,EAAM;AAAA,IAAA,CACzB;AAAA,EAAA,GAGCE,IAAc,CAACC,MAAqB;AAC5B,IAAAlB,EAAAkB,IAAS,EAAE,MAAM,UAAU,IAAc,EAAE,MAAM,WAAA,CAArB;AAAA,EAAiC,GAGrEC,IAAW,MAAM;AACnB,IAAAC,EAAoB,KAAK;AAAA,EAAA,GAGvBC,IAAS,CAACC,MAAuF;AACnG,QAAI,CAACC,EAAkBxB,EAAM,GAAG,KAAK,CAACyB;AAClC;AAGE,UAAAC,IAAYC,EAAS3B,EAAM,GAAG;AAEhB,IAAAqB,EAAA,KAAKrB,EAAM,IAAI,GACnCqB,EAAoB,IAAIK,CAAS,GACjCL,EAAoB,OAAOrB,EAAM,WAAWF,EAAc,OAAO,GAE7D8B,EAAmBrB,CAAM,MACzBgB,KAAA,QAAAA,EAAO;AAAA,EACX,GAGEE,IAAYzB,EAAM,QAAQ,MAAMA,EAAM,SAAS,IAE/C,EAAE,WAAA6B,EAAc,IAAAC,EAAgDvB,GAAQwB,CAAY;AAE1F,SAAAC;AAAA,IACI;AAAA,IACAV;AAAA,IACA;AAAA,MACI,kBAAkB,CAAC,OAAO;AAAA,IAC9B;AAAA,IACA,CAAC;AAAA,EAAA,GAGE;AAAA,IACH,OAAAtB;AAAA,IACA,cAAAe;AAAA,IACA,aAAAE;AAAA,IACA,aAAAC;AAAA,IACA,UAAAE;AAAA,IACA,QAAAE;AAAA,IACA,WAAAG;AAAA,IACA,mBAAAD;AAAA,IACA,WAAAK;AAAA,EAAA;AAER;"}