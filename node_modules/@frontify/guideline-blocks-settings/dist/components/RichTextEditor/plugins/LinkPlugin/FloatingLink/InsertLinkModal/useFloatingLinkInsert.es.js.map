{"version":3,"file":"useFloatingLinkInsert.es.js","sources":["../../../../../../../src/components/RichTextEditor/plugins/LinkPlugin/FloatingLink/InsertLinkModal/useFloatingLinkInsert.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport {\n    ELEMENT_LINK,\n    FloatingLinkProps,\n    HTMLPropsAs,\n    LinkPlugin,\n    floatingLinkActions,\n    getPluginOptions,\n    getSelectionBoundingClientRect,\n    triggerFloatingLinkInsert,\n    useComposedRef,\n    useEditorRef,\n    useFloatingLinkEscape,\n    useFloatingLinkSelectors,\n    useHotkeys,\n    useVirtualFloatingLink,\n} from '@udecode/plate';\nimport { useEffect } from 'react';\nimport { useFocused } from 'slate-react';\n\nexport const useFloatingLinkInsert = ({ floatingOptions, ...props }: FloatingLinkProps): HTMLPropsAs<'div'> => {\n    const editor = useEditorRef();\n    const focused = useFocused();\n    const mode = useFloatingLinkSelectors().mode();\n    const open = useFloatingLinkSelectors().isOpen(editor.id);\n\n    const { triggerFloatingLinkHotkeys } = getPluginOptions<LinkPlugin>(editor, ELEMENT_LINK);\n\n    useHotkeys(\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        triggerFloatingLinkHotkeys!,\n        (e) => {\n            if (triggerFloatingLinkInsert(editor, { focused })) {\n                e.preventDefault();\n            }\n        },\n        {\n            enableOnContentEditable: true,\n        },\n        [focused],\n    );\n\n    const { update, style, floating } = useVirtualFloatingLink({\n        editorId: editor.id,\n        open: open && mode === 'insert',\n        getBoundingClientRect: getSelectionBoundingClientRect,\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        whileElementsMounted: () => {},\n        ...floatingOptions,\n    });\n\n    // wait for update before focusing input\n    useEffect(() => {\n        if (open) {\n            update();\n            floatingLinkActions.updated(true);\n        } else {\n            floatingLinkActions.updated(false);\n        }\n    }, [open, update]);\n\n    useFloatingLinkEscape();\n\n    return {\n        style: {\n            ...style,\n            zIndex: 1000,\n        },\n        ...props,\n        ref: useComposedRef<HTMLElement | null>(props.ref, floating),\n    };\n};\n"],"names":["useFloatingLinkInsert","floatingOptions","props","editor","useEditorRef","focused","useFocused","mode","useFloatingLinkSelectors","open","triggerFloatingLinkHotkeys","getPluginOptions","ELEMENT_LINK","useHotkeys","e","triggerFloatingLinkInsert","update","style","floating","useVirtualFloatingLink","getSelectionBoundingClientRect","useEffect","floatingLinkActions","useFloatingLinkEscape","useComposedRef"],"mappings":";;;AAqBO,MAAMA,IAAwB,CAAC,EAAE,iBAAAC,GAAiB,GAAGC,QAAmD;AAC3G,QAAMC,IAASC,KACTC,IAAUC,KACVC,IAAOC,IAA2B,QAClCC,IAAOD,EAA2B,EAAA,OAAOL,EAAO,EAAE,GAElD,EAAE,4BAAAO,EAA+B,IAAAC,EAA6BR,GAAQS,CAAY;AAExF,EAAAC;AAAA;AAAA,IAEIH;AAAA,IACA,CAACI,MAAM;AACH,MAAIC,EAA0BZ,GAAQ,EAAE,SAAAE,EAAS,CAAA,KAC7CS,EAAE,eAAe;AAAA,IAEzB;AAAA,IACA;AAAA,MACI,yBAAyB;AAAA,IAC7B;AAAA,IACA,CAACT,CAAO;AAAA,EAAA;AAGZ,QAAM,EAAE,QAAAW,GAAQ,OAAAC,GAAO,UAAAC,EAAA,IAAaC,EAAuB;AAAA,IACvD,UAAUhB,EAAO;AAAA,IACjB,MAAMM,KAAQF,MAAS;AAAA,IACvB,uBAAuBa;AAAA;AAAA,IAEvB,sBAAsB,MAAM;AAAA,IAAC;AAAA,IAC7B,GAAGnB;AAAA,EAAA,CACN;AAGD,SAAAoB,EAAU,MAAM;AACZ,IAAIZ,KACOO,KACPM,EAAoB,QAAQ,EAAI,KAEhCA,EAAoB,QAAQ,EAAK;AAAA,EACrC,GACD,CAACb,GAAMO,CAAM,CAAC,GAEKO,KAEf;AAAA,IACH,OAAO;AAAA,MACH,GAAGN;AAAA,MACH,QAAQ;AAAA,IACZ;AAAA,IACA,GAAGf;AAAA,IACH,KAAKsB,EAAmCtB,EAAM,KAAKgB,CAAQ;AAAA,EAAA;AAEnE;"}