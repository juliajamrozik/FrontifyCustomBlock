import { useEditorRef as f, useFloatingLinkSelectors as s, getPluginOptions as p, ELEMENT_LINK as m, useHotkeys as k, triggerFloatingLinkInsert as L, useVirtualFloatingLink as E, getSelectionBoundingClientRect as F, floatingLinkActions as r, useFloatingLinkEscape as I, useComposedRef as y } from "@udecode/plate";
import { useEffect as C } from "react";
import { useFocused as R } from "slate-react";
const B = ({ floatingOptions: l, ...n }) => {
  const e = f(), o = R(), u = s().mode(), t = s().isOpen(e.id), { triggerFloatingLinkHotkeys: d } = p(e, m);
  k(
    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
    d,
    (c) => {
      L(e, { focused: o }) && c.preventDefault();
    },
    {
      enableOnContentEditable: !0
    },
    [o]
  );
  const { update: i, style: g, floating: a } = E({
    editorId: e.id,
    open: t && u === "insert",
    getBoundingClientRect: F,
    // eslint-disable-next-line @typescript-eslint/no-empty-function
    whileElementsMounted: () => {
    },
    ...l
  });
  return C(() => {
    t ? (i(), r.updated(!0)) : r.updated(!1);
  }, [t, i]), I(), {
    style: {
      ...g,
      zIndex: 1e3
    },
    ...n,
    ref: y(n.ref, a)
  };
};
export {
  B as useFloatingLinkInsert
};
//# sourceMappingURL=useFloatingLinkInsert.es.js.map
