{"version":3,"file":"DocumentLinks.es.js","sources":["../../../../../../src/components/RichTextEditor/plugins/shared/LinkSelector/DocumentLinks.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { AppBridgeBlock, Document } from '@frontify/app-bridge';\nimport { LoadingCircle } from '@frontify/fondue';\nimport { ReactElement, useEffect, useState } from 'react';\nimport { InitiallyExpandedItems } from '../../LinkPlugin/FloatingLink/InsertLinkModal/types';\nimport { DocumentLink } from './DocumentLink';\n\ntype DocumentLinksProps = {\n    appBridge: AppBridgeBlock;\n    selectedUrl: string;\n    onSelectUrl: (url: string) => void;\n};\n\nexport const DocumentLinks = ({ appBridge, selectedUrl, onSelectUrl }: DocumentLinksProps): ReactElement => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [documents, setDocuments] = useState<Document[]>([]);\n    const [itemsToExpandInitially, setItemsToExpandInitially] = useState<InitiallyExpandedItems>({\n        documentId: undefined,\n        pageId: undefined,\n    });\n\n    const documentArray = [...documents.values()];\n\n    useEffect(() => {\n        if (selectedUrl && documentArray.length > 0) {\n            findLocationOfSelectedUrl().then((items) => {\n                setItemsToExpandInitially(items);\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [documentArray.length]);\n\n    useEffect(() => {\n        appBridge\n            .getAllDocuments()\n            .then((_documents) => {\n                setDocuments(_documents);\n            })\n            .finally(() => {\n                setIsLoading(false);\n            });\n    }, []);\n\n    const findLocationOfSelectedUrl = async () => {\n        const itemsToExpand: InitiallyExpandedItems = {\n            documentId: undefined,\n            pageId: undefined,\n        };\n        const selectedUrlIsDocument = documentArray.find((document) => document.permanentLink === selectedUrl);\n        if (selectedUrlIsDocument) {\n            return itemsToExpand;\n        }\n        for (const document of documentArray) {\n            const pages = await appBridge.getDocumentPagesByDocumentId(document.id);\n            appBridge.getAllDocuments();\n            const pagesArray = [...pages.values()];\n            const selectedUrlIsPage = !!pagesArray.find((page) => page.permanentLink === selectedUrl);\n            if (selectedUrlIsPage) {\n                itemsToExpand.documentId = document.id;\n                return itemsToExpand;\n            }\n            for (const page of pagesArray) {\n                const sections = await appBridge.getDocumentSectionsByDocumentPageId(page.id);\n                const sectionsArray = [...sections.values()];\n                const selectedUrlIsSection = !!sectionsArray.find((section) => section.permanentLink === selectedUrl);\n                if (selectedUrlIsSection) {\n                    itemsToExpand.documentId = document.id;\n                    itemsToExpand.pageId = page.id;\n                    return itemsToExpand;\n                }\n            }\n        }\n        return itemsToExpand;\n    };\n\n    return isLoading ? (\n        <div className=\"tw-flex tw-justify-center tw-p-4\">\n            <LoadingCircle />\n        </div>\n    ) : (\n        <>\n            {documentArray.map((document) => {\n                return (\n                    <DocumentLink\n                        key={document.id}\n                        document={document}\n                        appBridge={appBridge}\n                        selectedUrl={selectedUrl}\n                        onSelectUrl={onSelectUrl}\n                        itemsToExpandInitially={itemsToExpandInitially}\n                    />\n                );\n            })}\n        </>\n    );\n};\n"],"names":["DocumentLinks","appBridge","selectedUrl","onSelectUrl","isLoading","setIsLoading","useState","documents","setDocuments","itemsToExpandInitially","setItemsToExpandInitially","documentArray","useEffect","findLocationOfSelectedUrl","items","_documents","itemsToExpand","document","pages","pagesArray","page","section","jsx","LoadingCircle","Fragment","DocumentLink"],"mappings":";;;;AAcO,MAAMA,IAAgB,CAAC,EAAE,WAAAC,GAAW,aAAAC,GAAa,aAAAC,QAAoD;AACxG,QAAM,CAACC,GAAWC,CAAY,IAAIC,EAAS,EAAI,GACzC,CAACC,GAAWC,CAAY,IAAIF,EAAqB,CAAE,CAAA,GACnD,CAACG,GAAwBC,CAAyB,IAAIJ,EAAiC;AAAA,IACzF,YAAY;AAAA,IACZ,QAAQ;AAAA,EAAA,CACX,GAEKK,IAAgB,CAAC,GAAGJ,EAAU,OAAQ,CAAA;AAE5C,EAAAK,EAAU,MAAM;AACR,IAAAV,KAAeS,EAAc,SAAS,KACZE,EAAA,EAAE,KAAK,CAACC,MAAU;AACxC,MAAAJ,EAA0BI,CAAK;AAAA,IAAA,CAClC;AAAA,EACL,GAED,CAACH,EAAc,MAAM,CAAC,GAEzBC,EAAU,MAAM;AACZ,IAAAX,EACK,gBAAgB,EAChB,KAAK,CAACc,MAAe;AAClB,MAAAP,EAAaO,CAAU;AAAA,IAAA,CAC1B,EACA,QAAQ,MAAM;AACX,MAAAV,EAAa,EAAK;AAAA,IAAA,CACrB;AAAA,EACT,GAAG,CAAE,CAAA;AAEL,QAAMQ,IAA4B,YAAY;AAC1C,UAAMG,IAAwC;AAAA,MAC1C,YAAY;AAAA,MACZ,QAAQ;AAAA,IAAA;AAGZ,QAD8BL,EAAc,KAAK,CAACM,MAAaA,EAAS,kBAAkBf,CAAW;AAE1F,aAAAc;AAEX,eAAWC,KAAYN,GAAe;AAClC,YAAMO,IAAQ,MAAMjB,EAAU,6BAA6BgB,EAAS,EAAE;AACtE,MAAAhB,EAAU,gBAAgB;AAC1B,YAAMkB,IAAa,CAAC,GAAGD,EAAM,OAAQ,CAAA;AAErC,UAD0B,CAAC,CAACC,EAAW,KAAK,CAACC,MAASA,EAAK,kBAAkBlB,CAAW;AAEpF,eAAAc,EAAc,aAAaC,EAAS,IAC7BD;AAEX,iBAAWI,KAAQD;AAIf,YAD6B,CAAC,CADR,CAAC,IADN,MAAMlB,EAAU,oCAAoCmB,EAAK,EAAE,GACzC,OAAQ,CAAA,EACE,KAAK,CAACC,MAAYA,EAAQ,kBAAkBnB,CAAW;AAEhG,iBAAAc,EAAc,aAAaC,EAAS,IACpCD,EAAc,SAASI,EAAK,IACrBJ;AAAA,IAGnB;AACO,WAAAA;AAAA,EAAA;AAGX,SAAOZ,IACH,gBAAAkB,EAAC,OAAI,EAAA,WAAU,oCACX,UAAA,gBAAAA,EAACC,GAAc,CAAA,CAAA,GACnB,IAEA,gBAAAD,EAAAE,GAAA,EACK,UAAcb,EAAA,IAAI,CAACM,MAEZ,gBAAAK;AAAA,IAACG;AAAA,IAAA;AAAA,MAEG,UAAAR;AAAA,MACA,WAAAhB;AAAA,MACA,aAAAC;AAAA,MACA,aAAAC;AAAA,MACA,wBAAAM;AAAA,IAAA;AAAA,IALKQ,EAAS;AAAA,EAAA,CAQzB,EACL,CAAA;AAER;"}