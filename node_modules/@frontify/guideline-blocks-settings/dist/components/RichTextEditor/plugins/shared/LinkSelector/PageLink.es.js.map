{"version":3,"file":"PageLink.es.js","sources":["../../../../../../src/components/RichTextEditor/plugins/shared/LinkSelector/PageLink.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { AppBridgeBlock, useDocumentSection } from '@frontify/app-bridge';\nimport { merge } from '@frontify/fondue';\nimport { useEffect, useState } from 'react';\nimport { InitiallyExpandedItems } from '../../LinkPlugin/FloatingLink/InsertLinkModal/types';\nimport { SectionLink } from './SectionLink';\n\ntype DocumentLinkProps = {\n    page: {\n        id: number;\n        title: string;\n        permanentLink: string;\n    };\n    selectedUrl: string;\n    onSelectUrl: (url: string) => void;\n    appBridge: AppBridgeBlock;\n    itemsToExpandInitially: InitiallyExpandedItems;\n};\n\nexport const PageLink = ({ page, selectedUrl, onSelectUrl, itemsToExpandInitially, appBridge }: DocumentLinkProps) => {\n    const [isExpanded, setIsExpanded] = useState(page.id === itemsToExpandInitially.documentId);\n    const isActive = page.permanentLink === selectedUrl;\n    const { documentSections } = useDocumentSection(appBridge, page.id);\n    const sectionsArray = [...documentSections.values()];\n    const hasSections = sectionsArray.length > 0;\n\n    useEffect(() => {\n        if (page.id === itemsToExpandInitially.pageId) {\n            setIsExpanded(true);\n        }\n    }, [itemsToExpandInitially, page.id]);\n\n    return (\n        <>\n            <div\n                tabIndex={0}\n                data-test-id=\"internal-link-selector-page-link\"\n                className={merge([\n                    'tw-py-2 tw-px-2.5 tw-leading-5 tw-cursor-pointer',\n                    hasSections ? 'tw-pl-7' : 'tw-pl-12',\n                    isActive\n                        ? 'tw-bg-box-selected-strong tw-text-box-selected-strong-inverse hover:tw-bg-box-selected-strong-hover:hover hover:tw-text-box-selected-strong-inverse-hover:hover'\n                        : 'hover:tw-bg-box-neutral-hover hover:tw-text-box-neutral-inverse-hover',\n                ])}\n                onClick={() => onSelectUrl(page.permanentLink)}\n                onFocus={() => onSelectUrl(page.permanentLink)}\n            >\n                <div key={page.id} className=\"tw-flex tw-flex-1 tw-space-x-1 tw-items-center tw-h-6\">\n                    {hasSections && (\n                        <button\n                            data-test-id=\"tree-item-toggle\"\n                            className=\"tw-flex tw-items-center tw-justify-center tw-p-1.5 tw-cursor-pointer\"\n                            onClick={() => setIsExpanded(!isExpanded)}\n                            onFocus={() => setIsExpanded(!isExpanded)}\n                        >\n                            <div\n                                className={merge([\n                                    'tw-transition-transform tw-w-0 tw-h-0 tw-font-normal tw-border-t-4 tw-border-t-transparent tw-border-b-4 tw-border-b-transparent tw-border-l-4 tw-border-l-x-strong',\n                                    isExpanded ? 'tw-rotate-90' : '',\n                                ])}\n                            ></div>\n                        </button>\n                    )}\n                    <span className=\"tw-text-s\">{page.title}</span>\n                    <span className=\"tw-flex-auto tw-font-sans tw-text-xs tw-text-right\">Page</span>\n                </div>\n            </div>\n            {isExpanded &&\n                sectionsArray.length > 0 &&\n                sectionsArray.map((section) => {\n                    return (\n                        <SectionLink\n                            key={section.id}\n                            section={section}\n                            selectedUrl={selectedUrl}\n                            onSelectUrl={onSelectUrl}\n                        />\n                    );\n                })}\n        </>\n    );\n};\n"],"names":["PageLink","page","selectedUrl","onSelectUrl","itemsToExpandInitially","appBridge","isExpanded","setIsExpanded","useState","isActive","documentSections","useDocumentSection","sectionsArray","hasSections","useEffect","jsxs","Fragment","jsx","merge","section","SectionLink"],"mappings":";;;;;AAoBa,MAAAA,IAAW,CAAC,EAAE,MAAAC,GAAM,aAAAC,GAAa,aAAAC,GAAa,wBAAAC,GAAwB,WAAAC,QAAmC;AAC5G,QAAA,CAACC,GAAYC,CAAa,IAAIC,EAASP,EAAK,OAAOG,EAAuB,UAAU,GACpFK,IAAWR,EAAK,kBAAkBC,GAClC,EAAE,kBAAAQ,EAAiB,IAAIC,EAAmBN,GAAWJ,EAAK,EAAE,GAC5DW,IAAgB,CAAC,GAAGF,EAAiB,OAAQ,CAAA,GAC7CG,IAAcD,EAAc,SAAS;AAE3C,SAAAE,EAAU,MAAM;AACR,IAAAb,EAAK,OAAOG,EAAuB,UACnCG,EAAc,EAAI;AAAA,EAEvB,GAAA,CAACH,GAAwBH,EAAK,EAAE,CAAC,GAI5B,gBAAAc,EAAAC,GAAA,EAAA,UAAA;AAAA,IAAA,gBAAAC;AAAA,MAAC;AAAA,MAAA;AAAA,QACG,UAAU;AAAA,QACV,gBAAa;AAAA,QACb,WAAWC,EAAM;AAAA,UACb;AAAA,UACAL,IAAc,YAAY;AAAA,UAC1BJ,IACM,oKACA;AAAA,QAAA,CACT;AAAA,QACD,SAAS,MAAMN,EAAYF,EAAK,aAAa;AAAA,QAC7C,SAAS,MAAME,EAAYF,EAAK,aAAa;AAAA,QAE7C,UAAA,gBAAAc,EAAC,OAAkB,EAAA,WAAU,yDACxB,UAAA;AAAA,UACGF,KAAA,gBAAAI;AAAA,YAAC;AAAA,YAAA;AAAA,cACG,gBAAa;AAAA,cACb,WAAU;AAAA,cACV,SAAS,MAAMV,EAAc,CAACD,CAAU;AAAA,cACxC,SAAS,MAAMC,EAAc,CAACD,CAAU;AAAA,cAExC,UAAA,gBAAAW;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBACG,WAAWC,EAAM;AAAA,oBACb;AAAA,oBACAZ,IAAa,iBAAiB;AAAA,kBAAA,CACjC;AAAA,gBAAA;AAAA,cACJ;AAAA,YAAA;AAAA,UACL;AAAA,UAEH,gBAAAW,EAAA,QAAA,EAAK,WAAU,aAAa,YAAK,OAAM;AAAA,UACvC,gBAAAA,EAAA,QAAA,EAAK,WAAU,sDAAqD,UAAI,QAAA;AAAA,QAAA,EAAA,GAjBnEhB,EAAK,EAkBf;AAAA,MAAA;AAAA,IACJ;AAAA,IACCK,KACGM,EAAc,SAAS,KACvBA,EAAc,IAAI,CAACO,MAEX,gBAAAF;AAAA,MAACG;AAAA,MAAA;AAAA,QAEG,SAAAD;AAAA,QACA,aAAAjB;AAAA,QACA,aAAAC;AAAA,MAAA;AAAA,MAHKgB,EAAQ;AAAA,IAAA,CAMxB;AAAA,EACT,EAAA,CAAA;AAER;"}