import { getAboveNode as w, getPluginType as g, isDefined as L, findNode as O, isExpanded as R, removeNodes as d, getNodeProps as D, getNodeLeaf as F, getPluginOptions as I, getEditorString as M, setNodes as _ } from "@udecode/plate";
import { ELEMENT_BUTTON as i } from "../createButtonPlugin.es.js";
import { insertButton as j } from "./insertButton.es.js";
import { unwrapButton as B } from "./unwrapButton.es.js";
import { wrapButton as k } from "./wrapButton.es.js";
import { upsertButtonText as N } from "./upsertButtonText.es.js";
const S = (o, {
  url: s,
  text: n,
  buttonStyle: p,
  target: f,
  insertTextInButton: e,
  insertNodesOptions: t,
  isUrl: c = I(o, i).isUrl
}) => {
  var h;
  const u = o.selection;
  if (!u)
    return;
  const r = w(o, {
    at: u,
    match: { type: g(o, i) }
  });
  if (e && r)
    return o.insertText(s), !0;
  if (!(c != null && c(s)))
    return;
  if (L(n) && n.length === 0 && (n = s), r)
    return A(s, o, r, f, p, n), !0;
  const T = O(o, {
    at: u,
    match: { type: g(o, i) }
  }), [E, m] = T ?? [], l = q(o, m, n);
  if (R(u))
    return z(r, o, s, p, f, n), !0;
  l && d(o, {
    at: m
  });
  const y = D(E ?? {}), a = (h = o.selection) == null ? void 0 : h.focus.path;
  if (!a)
    return;
  const P = F(o, a);
  return n != null && n.length || (n = s), j(
    o,
    {
      ...y,
      url: s,
      target: f,
      children: [
        {
          ...P,
          text: n
        }
      ]
    },
    t
  ), !0;
};
function q(o, s, n) {
  return s && (n == null ? void 0 : n.length) && n !== M(o, s);
}
function z(o, s, n, p, f, e) {
  o ? B(s, {
    at: o[1]
  }) : B(s, {
    split: !0
  }), k(s, {
    url: n,
    buttonStyle: p,
    target: f
  }), N(s, { url: n, target: f, text: e });
}
function A(o, s, n, p, f, e) {
  var t, c, u;
  (o !== ((t = n[0]) == null ? void 0 : t.url) || p !== ((c = n[0]) == null ? void 0 : c.target) || f !== ((u = n[0]) == null ? void 0 : u.buttonStyle)) && _(
    s,
    { url: o, target: p, buttonStyle: f },
    {
      at: n[1]
    }
  ), N(s, { url: o, text: e, target: p });
}
export {
  S as upsertButton
};
//# sourceMappingURL=upsertButton.es.js.map
