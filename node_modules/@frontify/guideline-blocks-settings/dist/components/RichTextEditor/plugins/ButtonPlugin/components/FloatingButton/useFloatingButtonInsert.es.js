import { useEditorRef as d, getPluginOptions as c, useHotkeys as p, getSelectionBoundingClientRect as a, useComposedRef as B } from "@udecode/plate";
import { useEffect as E } from "react";
import { useFocused as F } from "slate-react";
import { ELEMENT_BUTTON as y } from "../../createButtonPlugin.es.js";
import { triggerFloatingButtonInsert as C } from "../../utils/triggerFloatingButtonInsert.es.js";
import { useFloatingButtonSelectors as r, floatingButtonActions as O } from "./floatingButtonStore.es.js";
import { useVirtualFloatingButton as R } from "./useVirtualFloatingButton.es.js";
import { useFloatingButtonEscape as I } from "./useFloatingButtonEscape.es.js";
const S = ({ floatingOptions: s, ...o }) => {
  const e = d(), n = F(), u = r().mode(), t = r().isOpen(e.id), { triggerFloatingButtonHotkeys: l } = c(e, y);
  p(
    l,
    (g) => {
      g.preventDefault(), C(e, {
        focused: n
      });
    },
    {
      enableOnContentEditable: !0
    },
    [n]
  );
  const { update: i, style: m, floating: f } = R({
    open: t && u === "insert",
    getBoundingClientRect: a,
    whileElementsMounted: void 0,
    ...s
  });
  return E(() => {
    t && i(), O.updated(t);
  }, [t, i]), I(), {
    style: {
      ...m,
      zIndex: 1e3
    },
    ...o,
    ref: B(o.ref, f)
  };
};
export {
  S as useFloatingButtonInsert
};
//# sourceMappingURL=useFloatingButtonInsert.es.js.map
