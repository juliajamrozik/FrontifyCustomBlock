import { withoutNormalizing as y, getAboveNode as b, getPluginType as n, splitNodes as f, isElement as p, unwrapNodes as N } from "@udecode/plate";
import { ELEMENT_BUTTON as u } from "../createButtonPlugin.es.js";
const A = (t, e) => y(t, () => {
  var a, s, h, l, m, o;
  if (e != null && e.split) {
    if (b(t, {
      at: (a = t.selection) == null ? void 0 : a.anchor,
      match: { type: n(t, u) }
    }))
      return f(t, {
        at: (s = t.selection) == null ? void 0 : s.anchor,
        match: (c) => p(c) && c.type === n(t, u)
      }), A(t, {
        at: (h = t.selection) == null ? void 0 : h.anchor
      }), !0;
    if (b(t, {
      at: (l = t.selection) == null ? void 0 : l.focus,
      match: { type: n(t, u) }
    }))
      return f(t, {
        at: (m = t.selection) == null ? void 0 : m.focus,
        match: (c) => p(c) && c.type === n(t, u)
      }), A(t, {
        at: (o = t.selection) == null ? void 0 : o.focus
      }), !0;
  }
  N(t, {
    match: { type: n(t, u) },
    ...e
  });
});
export {
  A as unwrapButton
};
//# sourceMappingURL=unwrapButton.es.js.map
