{"version":3,"file":"withButton.es.js","sources":["../../../../../src/components/RichTextEditor/plugins/ButtonPlugin/withButton.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport {\n    AnyObject,\n    EText,\n    PlateEditor,\n    Value,\n    WithOverride,\n    getAboveNode,\n    getNextNodeStartPoint,\n    getPluginType,\n    getPreviousNodeEndPoint,\n    insertNodes,\n    isCollapsed,\n    isEndPoint,\n    isStartPoint,\n    mockPlugin,\n    select,\n    withRemoveEmptyNodes,\n} from '@udecode/plate';\nimport { Path, Point, Range } from 'slate';\nimport { ELEMENT_BUTTON } from './createButtonPlugin';\n\n/**\n * Insert space after a url to wrap a button.\n * Lookup from the block start to the cursor to check if there is an url.\n * If not found, lookup before the cursor for a space character to check the url.\n *\n * On insert data:\n * Paste a string inside a button element will edit its children text but not its url.\n *\n */\n\nexport const withButton: WithOverride = (editor, { type }) => {\n    const { apply, normalizeNode } = editor;\n\n    editor.apply = (operation) => {\n        if (operation.type !== 'set_selection') {\n            apply(operation);\n            return;\n        }\n\n        const range = operation.newProperties;\n        if (!range?.focus || !range.anchor || !isCollapsed(range as Range)) {\n            apply(operation);\n            return;\n        }\n\n        const entry = getAboveNode(editor, {\n            at: range as Range,\n            match: { type: getPluginType(editor, ELEMENT_BUTTON) },\n        });\n\n        if (entry) {\n            const [, path] = entry;\n\n            let newPoint: Point | undefined;\n\n            if (isStartPoint(editor, range.focus, path)) {\n                newPoint = getPreviousNodeEndPoint(editor, path);\n            }\n\n            if (isEndPoint(editor, range.focus, path)) {\n                newPoint = getNextNodeStartPoint(editor, path);\n            }\n\n            if (newPoint) {\n                operation.newProperties = {\n                    anchor: newPoint,\n                    focus: newPoint,\n                };\n            }\n        }\n\n        apply(operation);\n    };\n\n    editor.normalizeNode = ([node, path]) => {\n        if (node.type === getPluginType(editor, ELEMENT_BUTTON)) {\n            const range = editor.selection as Range | null;\n\n            if (range && isCollapsed(range) && isEndPoint(editor, range.focus, path)) {\n                const nextPoint = getNextNodeStartPoint(editor, path);\n\n                // select next text node if any\n                if (nextPoint) {\n                    select(editor, nextPoint);\n                } else {\n                    // insert text node then select\n                    const nextPath = Path.next(path);\n                    insertNodes(editor, { text: '' } as EText<Value>, { at: nextPath });\n                    select(editor, nextPath);\n                }\n            }\n        }\n\n        normalizeNode([node, path]);\n    };\n\n    return withRemoveEmptyNodes<Value, PlateEditor<Value>>(\n        editor,\n        mockPlugin<AnyObject, Value, PlateEditor<Value>>({\n            options: { types: type },\n        }),\n    );\n};\n"],"names":["withButton","editor","type","apply","normalizeNode","operation","range","isCollapsed","entry","getAboveNode","getPluginType","ELEMENT_BUTTON","path","newPoint","isStartPoint","getPreviousNodeEndPoint","isEndPoint","getNextNodeStartPoint","node","nextPoint","select","nextPath","Path","insertNodes","withRemoveEmptyNodes","mockPlugin"],"mappings":";;;AAiCO,MAAMA,IAA2B,CAACC,GAAQ,EAAE,MAAAC,QAAW;AACpD,QAAA,EAAE,OAAAC,GAAO,eAAAC,EAAkB,IAAAH;AAE1B,SAAAA,EAAA,QAAQ,CAACI,MAAc;AACtB,QAAAA,EAAU,SAAS,iBAAiB;AACpC,MAAAF,EAAME,CAAS;AACf;AAAA,IACJ;AAEA,UAAMC,IAAQD,EAAU;AACpB,QAAA,EAACC,KAAA,QAAAA,EAAO,UAAS,CAACA,EAAM,UAAU,CAACC,EAAYD,CAAc,GAAG;AAChE,MAAAH,EAAME,CAAS;AACf;AAAA,IACJ;AAEM,UAAAG,IAAQC,EAAaR,GAAQ;AAAA,MAC/B,IAAIK;AAAA,MACJ,OAAO,EAAE,MAAMI,EAAcT,GAAQU,CAAc,EAAE;AAAA,IAAA,CACxD;AAED,QAAIH,GAAO;AACD,YAAA,CAAG,EAAAI,CAAI,IAAIJ;AAEb,UAAAK;AAEJ,MAAIC,EAAab,GAAQK,EAAM,OAAOM,CAAI,MAC3BC,IAAAE,EAAwBd,GAAQW,CAAI,IAG/CI,EAAWf,GAAQK,EAAM,OAAOM,CAAI,MACzBC,IAAAI,EAAsBhB,GAAQW,CAAI,IAG7CC,MACAR,EAAU,gBAAgB;AAAA,QACtB,QAAQQ;AAAA,QACR,OAAOA;AAAA,MAAA;AAAA,IAGnB;AAEA,IAAAV,EAAME,CAAS;AAAA,EAAA,GAGnBJ,EAAO,gBAAgB,CAAC,CAACiB,GAAMN,CAAI,MAAM;AACrC,QAAIM,EAAK,SAASR,EAAcT,GAAQU,CAAc,GAAG;AACrD,YAAML,IAAQL,EAAO;AAEjB,UAAAK,KAASC,EAAYD,CAAK,KAAKU,EAAWf,GAAQK,EAAM,OAAOM,CAAI,GAAG;AAChE,cAAAO,IAAYF,EAAsBhB,GAAQW,CAAI;AAGpD,YAAIO;AACA,UAAAC,EAAOnB,GAAQkB,CAAS;AAAA,aACrB;AAEG,gBAAAE,IAAWC,EAAK,KAAKV,CAAI;AACnB,UAAAW,EAAAtB,GAAQ,EAAE,MAAM,MAAsB,EAAE,IAAIoB,GAAU,GAClED,EAAOnB,GAAQoB,CAAQ;AAAA,QAC3B;AAAA,MACJ;AAAA,IACJ;AAEc,IAAAjB,EAAA,CAACc,GAAMN,CAAI,CAAC;AAAA,EAAA,GAGvBY;AAAA,IACHvB;AAAA,IACAwB,EAAiD;AAAA,MAC7C,SAAS,EAAE,OAAOvB,EAAK;AAAA,IAAA,CAC1B;AAAA,EAAA;AAET;"}