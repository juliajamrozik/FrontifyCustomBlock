import { jsx as a } from "react/jsx-runtime";
import { useElementProps as p } from "@udecode/plate";
import { useState as l } from "react";
import { BlockButtonStyles as c } from "../utils/styles.es.js";
const i = (e) => ({
  ...p({
    ...e,
    elementToAttributes: (t) => ({
      url: t.href,
      buttonStyle: t.buttonStyle || "primary",
      target: t.target || "_blank"
    })
  }),
  // quick fix: hovering <a> with href loses the editor focus
  onMouseOver: (t) => {
    t.stopPropagation();
  }
}), y = (e) => {
  const { href: o, target: t, buttonStyle: r } = i(e), { attributes: n, children: s } = e;
  return /* @__PURE__ */ a(
    m,
    {
      attributes: n,
      href: o,
      target: t,
      styles: c[`button${r.charAt(0).toUpperCase() + r.slice(1)}`],
      children: s
    }
  );
}, m = ({
  attributes: e,
  styles: o = { hover: {} },
  children: t,
  href: r = "#",
  target: n
}) => {
  const [s, u] = l(!1);
  return /* @__PURE__ */ a(
    "a",
    {
      ...e,
      onMouseEnter: () => u(!0),
      onMouseLeave: () => u(!1),
      href: r,
      target: n,
      style: s ? { ...o, ...o.hover } : o,
      children: t
    }
  );
};
export {
  y as ButtonMarkupElementNode
};
//# sourceMappingURL=ButtonMarkupElementNode.es.js.map
