import { jsx as i } from "react/jsx-runtime";
import { getTooltip as a, getHotkeyByPlatform as l, getButtonClassNames as c } from "@frontify/fondue";
import { useEditorRef as u, isRangeInSameBlock as m, someNode as f, ToolbarButton as p, focusEditor as g } from "@udecode/plate";
import { triggerFloatingButton as B } from "../utils/triggerFloatingButton.es.js";
const T = ({ type: n, ...s }) => {
  const t = u(), o = !!m(t, {
    at: t.selection
  }), r = !!(t != null && t.selection) && f(t, { match: { type: n } });
  return /* @__PURE__ */ i(
    p,
    {
      tooltip: a(
        o ? `Button
${l("Ctrl+Shift+K")}` : "Buttons can only be set for a single text block."
      ),
      classNames: c(o),
      active: r,
      onMouseDown: async (e) => {
        t && (e.preventDefault(), e.stopPropagation(), g(t, t.selection ?? t.prevSelection ?? void 0), setTimeout(() => {
          B(t, { focused: !0 });
        }, 0));
      },
      ...s
    }
  );
};
export {
  T as ButtonToolbarButton
};
//# sourceMappingURL=ButtonToolbarButton.es.js.map
