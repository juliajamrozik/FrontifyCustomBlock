import { useEditorRef as F, usePlateSelectors as h, getPluginOptions as C, getAboveNode as R, getPluginType as u, getRangeBoundingClientRect as k, getStartPoint as O, getEndPoint as P, getDefaultBoundingClientRect as b, someNode as N, useHotkeys as S, useComposedRef as T } from "@udecode/plate";
import { useCallback as v, useEffect as x } from "react";
import { ELEMENT_BUTTON as o } from "../../createButtonPlugin.es.js";
import { triggerFloatingButtonEdit as A } from "../../utils/triggerFloatingButtonEdit.es.js";
import { useFloatingButtonSelectors as l, floatingButtonActions as n, floatingButtonSelectors as d } from "./floatingButtonStore.es.js";
import { useVirtualFloatingButton as D } from "./useVirtualFloatingButton.es.js";
import { getUrlFromEditor as H } from "../../utils/getUrl.es.js";
import { useFloatingButtonEnter as U } from "./useFloatingButtonEnter.es.js";
import { useFloatingButtonEscape as w } from "./useFloatingButtonEscape.es.js";
const J = ({ floatingOptions: g, ...i }) => {
  const t = F(), c = h(t.id).keyEditor(), m = l().mode(), a = l().isOpen(t.id), { triggerFloatingButtonHotkeys: f } = C(t, o), p = v(() => {
    const e = R(t, {
      match: { type: u(t, o) }
    });
    if (e) {
      const [, s] = e;
      return k(t, {
        anchor: O(t, s),
        focus: P(t, s)
      });
    }
    return b();
  }, [t]), E = a && m === "edit", { update: r, style: B, floating: y } = D({
    open: E,
    getBoundingClientRect: p,
    ...g
  });
  return x(() => {
    const e = H(t);
    if (e && n.url(e), t.selection && N(t, {
      match: { type: u(t, o) }
    })) {
      n.show("edit", t.id), r();
      return;
    }
    d.mode() === "edit" && n.hide();
  }, [t, c, r]), S(
    f,
    (e) => {
      e.preventDefault(), d.mode() === "edit" && A(t);
    },
    {
      enableOnContentEditable: !0
    },
    []
  ), U(), w(), {
    style: {
      ...B,
      zIndex: 1e3
    },
    ...i,
    ref: T(i.ref, y)
  };
};
export {
  J as useFloatingButtonEdit
};
//# sourceMappingURL=useFloatingButtonEdit.es.js.map
