{"version":3,"file":"ButtonToolbarButton.es.js","sources":["../../../../../../src/components/RichTextEditor/plugins/ButtonPlugin/components/ButtonToolbarButton.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { getButtonClassNames, getHotkeyByPlatform, getTooltip } from '@frontify/fondue';\nimport {\n    BlockToolbarButtonProps,\n    ToolbarButton,\n    focusEditor,\n    isRangeInSameBlock,\n    someNode,\n    useEditorRef,\n} from '@udecode/plate';\n\nimport { triggerFloatingButton } from '../utils';\n\nexport interface LinkToolbarButtonProps extends BlockToolbarButtonProps {\n    /**\n     * Default onMouseDown is getting the link url by calling this promise before inserting the image.\n     */\n    getLinkUrl?: (prevUrl: string | null) => Promise<string | null>;\n}\n\nexport const ButtonToolbarButton = ({ type, ...props }: LinkToolbarButtonProps) => {\n    const editor = useEditorRef();\n    const isEnabled = !!isRangeInSameBlock(editor, {\n        at: editor.selection,\n    });\n\n    const isLink = !!editor?.selection && someNode(editor, { match: { type } });\n\n    return (\n        <ToolbarButton\n            tooltip={getTooltip(\n                isEnabled\n                    ? `Button\\n${getHotkeyByPlatform('Ctrl+Shift+K')}`\n                    : 'Buttons can only be set for a single text block.',\n            )}\n            classNames={getButtonClassNames(isEnabled)}\n            active={isLink}\n            onMouseDown={async (event) => {\n                if (!editor) {\n                    return;\n                }\n\n                event.preventDefault();\n                event.stopPropagation();\n\n                focusEditor(editor, editor.selection ?? editor.prevSelection ?? undefined);\n\n                setTimeout(() => {\n                    triggerFloatingButton(editor, { focused: true });\n                }, 0);\n            }}\n            {...props}\n        />\n    );\n};\n"],"names":["ButtonToolbarButton","type","props","editor","useEditorRef","isEnabled","isRangeInSameBlock","isLink","someNode","jsx","ToolbarButton","getTooltip","getHotkeyByPlatform","getButtonClassNames","event","focusEditor","triggerFloatingButton"],"mappings":";;;;AAqBO,MAAMA,IAAsB,CAAC,EAAE,MAAAC,GAAM,GAAGC,QAAoC;AAC/E,QAAMC,IAASC,KACTC,IAAY,CAAC,CAACC,EAAmBH,GAAQ;AAAA,IAC3C,IAAIA,EAAO;AAAA,EAAA,CACd,GAEKI,IAAS,CAAC,EAACJ,KAAA,QAAAA,EAAQ,cAAaK,EAASL,GAAQ,EAAE,OAAO,EAAE,MAAAF,EAAK,EAAG,CAAA;AAGtE,SAAA,gBAAAQ;AAAA,IAACC;AAAA,IAAA;AAAA,MACG,SAASC;AAAA,QACLN,IACM;AAAA,EAAWO,EAAoB,cAAc,CAAC,KAC9C;AAAA,MACV;AAAA,MACA,YAAYC,EAAoBR,CAAS;AAAA,MACzC,QAAQE;AAAA,MACR,aAAa,OAAOO,MAAU;AAC1B,QAAKX,MAILW,EAAM,eAAe,GACrBA,EAAM,gBAAgB,GAEtBC,EAAYZ,GAAQA,EAAO,aAAaA,EAAO,iBAAiB,MAAS,GAEzE,WAAW,MAAM;AACb,UAAAa,EAAsBb,GAAQ,EAAE,SAAS,GAAM,CAAA;AAAA,WAChD,CAAC;AAAA,MACR;AAAA,MACC,GAAGD;AAAA,IAAA;AAAA,EAAA;AAGhB;"}