{"version":3,"file":"heading3Plugin.es.js","sources":["../../../../../src/components/RichTextEditor/plugins/TextStylePlugins/heading3Plugin.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { createPluginFactory } from '@udecode/plate';\nimport type { CSSProperties } from 'react';\nimport {\n    MarkupElement,\n    Plugin,\n    PluginProps,\n    TextStyleRenderElementProps,\n    alignmentClassnames,\n    getColumnBreakClasses,\n    merge,\n} from '@frontify/fondue';\nimport { BlockStyles, TextStyles } from '../styles';\n\nconst ID = 'textstyle-heading3-plugin';\n\nexport class Heading3Plugin extends Plugin {\n    public styles: CSSProperties = {};\n    constructor({ styles = BlockStyles.heading3, ...props }: PluginProps = {}) {\n        super(TextStyles.heading3, {\n            label: 'Heading 3',\n            markupElement: new Heading3MarkupElement(),\n            ...props,\n        });\n        this.styles = styles;\n    }\n\n    plugins() {\n        return [createHeading3Plugin(this.styles)];\n    }\n}\n\nclass Heading3MarkupElement extends MarkupElement {\n    constructor(id = ID, node = Heading3MarkupElementNode) {\n        super(id, node);\n    }\n}\nconst Heading3MarkupElementNode = ({ element, attributes, children, styles }: TextStyleRenderElementProps) => {\n    const align = element.align as string;\n    return (\n        <h3 {...attributes} className={merge([align && alignmentClassnames[align], getColumnBreakClasses(element)])}>\n            <span style={styles}>{children}</span>\n        </h3>\n    );\n};\n\nconst createHeading3Plugin = (styles: CSSProperties) =>\n    createPluginFactory({\n        key: TextStyles.heading3,\n        isElement: true,\n        component: Heading3MarkupElementNode,\n        deserializeHtml: {\n            rules: [{ validNodeName: ['h3', 'H3'] }],\n        },\n    })({\n        component: (props: TextStyleRenderElementProps) => <Heading3MarkupElementNode {...props} styles={styles} />,\n    });\n"],"names":["ID","Heading3Plugin","Plugin","styles","BlockStyles","props","TextStyles","Heading3MarkupElement","createHeading3Plugin","MarkupElement","id","node","Heading3MarkupElementNode","element","attributes","children","align","jsx","merge","alignmentClassnames","getColumnBreakClasses","createPluginFactory"],"mappings":";;;;AAeA,MAAMA,IAAK;AAEJ,MAAMC,UAAuBC,EAAO;AAAA,EAEvC,YAAY,EAAE,QAAAC,IAASC,EAAY,UAAU,GAAGC,EAAuB,IAAA,IAAI;AACvE,UAAMC,EAAW,UAAU;AAAA,MACvB,OAAO;AAAA,MACP,eAAe,IAAIC,EAAsB;AAAA,MACzC,GAAGF;AAAA,IAAA,CACN,GANL,KAAO,SAAwB,IAO3B,KAAK,SAASF;AAAA,EAClB;AAAA,EAEA,UAAU;AACN,WAAO,CAACK,EAAqB,KAAK,MAAM,CAAC;AAAA,EAC7C;AACJ;AAEA,MAAMD,UAA8BE,EAAc;AAAA,EAC9C,YAAYC,IAAKV,GAAIW,IAAOC,GAA2B;AACnD,UAAMF,GAAIC,CAAI;AAAA,EAClB;AACJ;AACA,MAAMC,IAA4B,CAAC,EAAE,SAAAC,GAAS,YAAAC,GAAY,UAAAC,GAAU,QAAAZ,QAA0C;AAC1G,QAAMa,IAAQH,EAAQ;AAElB,SAAA,gBAAAI,EAAC,QAAI,GAAGH,GAAY,WAAWI,EAAM,CAACF,KAASG,EAAoBH,CAAK,GAAGI,EAAsBP,CAAO,CAAC,CAAC,GACtG,4BAAC,QAAK,EAAA,OAAOV,GAAS,UAAAY,GAAS,EACnC,CAAA;AAER,GAEMP,IAAuB,CAACL,MAC1BkB,EAAoB;AAAA,EAChB,KAAKf,EAAW;AAAA,EAChB,WAAW;AAAA,EACX,WAAWM;AAAA,EACX,iBAAiB;AAAA,IACb,OAAO,CAAC,EAAE,eAAe,CAAC,MAAM,IAAI,GAAG;AAAA,EAC3C;AACJ,CAAC,EAAE;AAAA,EACC,WAAW,CAACP,wBAAwCO,GAA2B,EAAA,GAAGP,GAAO,QAAAF,GAAgB;AAC7G,CAAC;"}