import { jsx as s } from "react/jsx-runtime";
import { createPluginFactory as o } from "@udecode/plate";
import { Plugin as m, MarkupElement as g, merge as u, alignmentClassnames as c, getColumnBreakClasses as d } from "@frontify/fondue";
import { TextStyles as r, BlockStyles as p } from "../styles.es.js";
const h = "textstyle-heading1-plugin";
class N extends m {
  constructor({ styles: e = p.heading1, ...n } = {}) {
    super(r.heading1, {
      label: "Heading 1",
      markupElement: new y(),
      ...n
    }), this.styles = {}, this.styles = e;
  }
  plugins() {
    return [k(this.styles)];
  }
}
class y extends g {
  constructor(e = h, n = l) {
    super(e, n);
  }
}
const l = ({ element: t, attributes: e, children: n, styles: i }) => {
  const a = t.align;
  return /* @__PURE__ */ s(
    "h1",
    {
      ...e,
      className: u([a && c[a], d(t), "a-h1"]),
      children: /* @__PURE__ */ s("span", { style: i, children: n })
    }
  );
}, k = (t) => o({
  key: r.heading1,
  isElement: !0,
  component: l,
  deserializeHtml: {
    rules: [{ validNodeName: ["h1", "H1"] }]
  }
})({
  component: (e) => /* @__PURE__ */ s(l, { ...e, styles: t })
});
export {
  N as Heading1Plugin
};
//# sourceMappingURL=heading1Plugin.es.js.map
