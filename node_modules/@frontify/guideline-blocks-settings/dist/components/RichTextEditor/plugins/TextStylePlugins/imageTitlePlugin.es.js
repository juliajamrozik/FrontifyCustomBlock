import { jsx as s } from "react/jsx-runtime";
import { createPluginFactory as r } from "@udecode/plate";
import { Plugin as o, MarkupElement as g, merge as u, alignmentClassnames as c, getColumnBreakClasses as p } from "@frontify/fondue";
import { TextStyles as i, BlockStyles as T } from "../styles.es.js";
const y = "textstyle-imageTitle-plugin";
class h extends o {
  constructor({ styles: e = T.imageTitle, ...l } = {}) {
    super(i.imageTitle, {
      label: "Image Title",
      markupElement: new k(),
      ...l
    }), this.styles = {}, this.styles = e;
  }
  plugins() {
    return [d(this.styles)];
  }
}
class k extends g {
  constructor(e = y, l = a) {
    super(e, l);
  }
}
const a = ({ element: t, attributes: e, children: l, styles: n }) => {
  const m = t.align;
  return /* @__PURE__ */ s(
    "p",
    {
      ...e,
      className: u([m && c[m], p(t), "a-image-title"]),
      children: /* @__PURE__ */ s("span", { style: n, children: l })
    }
  );
}, d = (t) => r({
  key: i.imageTitle,
  isElement: !0,
  component: a,
  deserializeHtml: {
    rules: [{ validClassName: i.imageTitle }]
  }
})({
  component: (e) => /* @__PURE__ */ s(a, { ...e, styles: t })
});
export {
  h as ImageTitlePlugin
};
//# sourceMappingURL=imageTitlePlugin.es.js.map
