import { jsx as n } from "react/jsx-runtime";
import { createPluginFactory as m } from "@udecode/plate";
import { Plugin as r, MarkupElement as p, merge as g, alignmentClassnames as c, getColumnBreakClasses as u } from "@frontify/fondue";
import { TextStyles as s, BlockStyles as C } from "../styles.es.js";
const y = "textstyle-imageCaption-plugin";
class h extends r {
  constructor({ styles: e = C.imageCaption, ...a } = {}) {
    super(s.imageCaption, {
      label: "Image Caption",
      markupElement: new k(),
      ...a
    }), this.styles = {}, this.styles = e;
  }
  plugins() {
    return [d(this.styles)];
  }
}
class k extends p {
  constructor(e = y, a = i) {
    super(e, a);
  }
}
const i = ({ element: t, attributes: e, children: a, styles: l }) => {
  const o = t.align;
  return /* @__PURE__ */ n(
    "p",
    {
      ...e,
      className: g([o && c[o], u(t), "a-image-caption"]),
      children: /* @__PURE__ */ n("span", { style: l, children: a })
    }
  );
}, d = (t) => m({
  key: s.imageCaption,
  isElement: !0,
  component: i,
  deserializeHtml: {
    rules: [{ validClassName: s.imageCaption }]
  }
})({
  component: (e) => /* @__PURE__ */ n(i, { ...e, styles: t })
});
export {
  h as ImageCaptionPlugin
};
//# sourceMappingURL=imageCaptionPlugin.es.js.map
