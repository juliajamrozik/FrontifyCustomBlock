{"version":3,"file":"custom3Plugin.es.js","sources":["../../../../../src/components/RichTextEditor/plugins/TextStylePlugins/custom3Plugin.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { PlateRenderElementProps, createPluginFactory } from '@udecode/plate';\nimport type { CSSProperties } from 'react';\nimport {\n    MarkupElement,\n    Plugin,\n    PluginProps,\n    TextStyleRenderElementProps,\n    TextStyles,\n    alignmentClassnames,\n    getColumnBreakClasses,\n    merge,\n} from '@frontify/fondue';\nimport { BlockStyles } from '../styles';\n\nconst ID = 'textstyle-custom3-plugin';\n\nexport class Custom3Plugin extends Plugin {\n    public styles: CSSProperties = {};\n    constructor({ styles = BlockStyles.custom3, ...props }: PluginProps = {}) {\n        super(TextStyles.custom3, {\n            label: 'Custom 3',\n            markupElement: new Custom3MarkupElement(),\n            ...props,\n        });\n        this.styles = styles;\n    }\n\n    plugins() {\n        return [createCustom3Plugin(this.styles)];\n    }\n}\n\nclass Custom3MarkupElement extends MarkupElement {\n    constructor(id = ID, node = Custom3MarkupElementNode) {\n        super(id, node);\n    }\n}\n\nconst Custom3MarkupElementNode = ({ element, attributes, children, styles }: TextStyleRenderElementProps) => {\n    const align = element.align as string;\n    return (\n        <p\n            {...attributes}\n            className={merge([align && alignmentClassnames[align], getColumnBreakClasses(element), 'a-custom3'])}\n        >\n            <span style={styles}>{children}</span>\n        </p>\n    );\n};\n\nconst createCustom3Plugin = (styles: CSSProperties) =>\n    createPluginFactory({\n        key: TextStyles.custom3,\n        isElement: true,\n        deserializeHtml: {\n            rules: [{ validClassName: TextStyles.custom3 }],\n        },\n    })({\n        component: (props: PlateRenderElementProps) => <Custom3MarkupElementNode {...props} styles={styles} />,\n    });\n"],"names":["ID","Custom3Plugin","Plugin","styles","BlockStyles","props","TextStyles","Custom3MarkupElement","createCustom3Plugin","MarkupElement","id","node","Custom3MarkupElementNode","element","attributes","children","align","jsx","merge","alignmentClassnames","getColumnBreakClasses","createPluginFactory"],"mappings":";;;;AAgBA,MAAMA,IAAK;AAEJ,MAAMC,UAAsBC,EAAO;AAAA,EAEtC,YAAY,EAAE,QAAAC,IAASC,EAAY,SAAS,GAAGC,EAAuB,IAAA,IAAI;AACtE,UAAMC,EAAW,SAAS;AAAA,MACtB,OAAO;AAAA,MACP,eAAe,IAAIC,EAAqB;AAAA,MACxC,GAAGF;AAAA,IAAA,CACN,GANL,KAAO,SAAwB,IAO3B,KAAK,SAASF;AAAA,EAClB;AAAA,EAEA,UAAU;AACN,WAAO,CAACK,EAAoB,KAAK,MAAM,CAAC;AAAA,EAC5C;AACJ;AAEA,MAAMD,UAA6BE,EAAc;AAAA,EAC7C,YAAYC,IAAKV,GAAIW,IAAOC,GAA0B;AAClD,UAAMF,GAAIC,CAAI;AAAA,EAClB;AACJ;AAEA,MAAMC,IAA2B,CAAC,EAAE,SAAAC,GAAS,YAAAC,GAAY,UAAAC,GAAU,QAAAZ,QAA0C;AACzG,QAAMa,IAAQH,EAAQ;AAElB,SAAA,gBAAAI;AAAA,IAAC;AAAA,IAAA;AAAA,MACI,GAAGH;AAAA,MACJ,WAAWI,EAAM,CAACF,KAASG,EAAoBH,CAAK,GAAGI,EAAsBP,CAAO,GAAG,WAAW,CAAC;AAAA,MAEnG,UAAC,gBAAAI,EAAA,QAAA,EAAK,OAAOd,GAAS,UAAAY,GAAS;AAAA,IAAA;AAAA,EAAA;AAG3C,GAEMP,IAAsB,CAACL,MACzBkB,EAAoB;AAAA,EAChB,KAAKf,EAAW;AAAA,EAChB,WAAW;AAAA,EACX,iBAAiB;AAAA,IACb,OAAO,CAAC,EAAE,gBAAgBA,EAAW,SAAS;AAAA,EAClD;AACJ,CAAC,EAAE;AAAA,EACC,WAAW,CAACD,wBAAoCO,GAA0B,EAAA,GAAGP,GAAO,QAAAF,GAAgB;AACxG,CAAC;"}