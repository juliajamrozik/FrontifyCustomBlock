import { jsx as o, jsxs as g } from "react/jsx-runtime";
import { useState as r, useEffect as f } from "react";
import { useSensors as q, useSensor as E, PointerSensor as B, KeyboardSensor as G, DndContext as H, closestCenter as J, DragOverlay as Q } from "@dnd-kit/core";
import { SortableContext as X, rectSortingStrategy as Y, arrayMove as Z } from "@dnd-kit/sortable";
import { useEditorState as _, useAssetUpload as $ } from "@frontify/app-bridge";
import { Tooltip as tt, TooltipPosition as et, Flyout as ot, FlyoutPlacement as st, IconPaperclip16 as nt, IconCaretDown12 as it, AssetInput as rt, AssetInputSize as lt } from "@frontify/fondue";
import { SortableAttachmentItem as dt, AttachmentItem as at } from "./AttachmentItem.es.js";
import { restrictToWindowEdges as ct } from "@dnd-kit/modifiers";
const vt = ({
  items: l = [],
  onDelete: x,
  onReplaceWithBrowse: L,
  onReplaceWithUpload: O,
  onBrowse: W,
  onUpload: N,
  onSorted: P,
  appBridge: d
}) => {
  const [e, v] = r(l), [y, a] = r(!1), R = q(E(B), E(G)), [I, b] = r(void 0), [A, h] = r(!1), [c, u] = r([]), [m, T] = r(null), p = _(d), i = e == null ? void 0 : e.find((t) => t.id === I), [j, { results: S, doneAll: D }] = $({
    onUploadProgress: () => !A && h(!0)
  });
  f(() => {
    v(l);
  }, [l]), f(() => {
    m && (h(!0), j(m));
  }, [m]), f(() => {
    (async () => {
      D && (await N(S), h(!1));
    })();
  }, [D, S]);
  const k = () => {
    a(!1), d.openAssetChooser(
      (t) => {
        W(t), d.closeAssetChooser(), a(!0);
      },
      {
        multiSelection: !0,
        selectedValueIds: e.map((t) => t.id)
      }
    );
  }, C = (t) => {
    a(!1), d.openAssetChooser(
      async (s) => {
        a(!0), d.closeAssetChooser(), u([...c, t.id]), await L(t, s[0]), u(c.filter((n) => n !== t.id));
      },
      {
        multiSelection: !1,
        selectedValueIds: e.map((s) => s.id)
      }
    );
  }, F = async (t, s) => {
    u([...c, t.id]), await O(t, s), u(c.filter((n) => n !== t.id));
  }, z = (t) => {
    const { active: s } = t;
    b(s.id);
  }, V = (t) => {
    const { active: s, over: n } = t;
    if (n && s.id !== n.id && e) {
      const K = e.findIndex((w) => w.id === s.id), M = e.findIndex((w) => w.id === n.id), U = Z(e, K, M);
      v(U), P(U);
    }
    b(void 0);
  };
  return p || ((e == null ? void 0 : e.length) ?? 0) > 0 ? /* @__PURE__ */ o(
    tt,
    {
      withArrow: !0,
      position: et.Top,
      content: "Attachments",
      disabled: y,
      enterDelay: 500,
      triggerElement: /* @__PURE__ */ o("div", { "data-test-id": "attachments-flyout-button", children: /* @__PURE__ */ o(
        ot,
        {
          placement: st.BottomRight,
          onOpenChange: (t) => a(i ? !0 : t),
          isOpen: y,
          hug: !1,
          fitContent: !0,
          legacyFooter: !1,
          trigger: /* @__PURE__ */ g("div", { className: "tw-flex tw-text-[13px] tw-font-body tw-items-center tw-gap-1 tw-rounded-full tw-bg-box-neutral-strong-inverse hover:tw-bg-box-neutral-strong-inverse-hover active:tw-bg-box-neutral-strong-inverse-pressed tw-text-box-neutral-strong tw-outline tw-outline-1 tw-outline-offset-[1px] tw-p-[6px] tw-outline-line", children: [
            /* @__PURE__ */ o(nt, {}),
            /* @__PURE__ */ o("div", { children: l.length > 0 ? l.length : "Add" }),
            /* @__PURE__ */ o(it, {})
          ] }),
          children: /* @__PURE__ */ g("div", { className: "tw-w-[300px]", children: [
            e.length > 0 && /* @__PURE__ */ g(
              H,
              {
                sensors: R,
                collisionDetection: J,
                onDragStart: z,
                onDragEnd: V,
                modifiers: [ct],
                children: [
                  /* @__PURE__ */ o(X, { items: e, strategy: Y, children: /* @__PURE__ */ o("div", { className: "tw-border-b tw-border-b-line", children: e.map((t) => /* @__PURE__ */ o(
                    dt,
                    {
                      isEditing: p,
                      isLoading: c.includes(t.id),
                      item: t,
                      onDelete: () => x(t),
                      onReplaceWithBrowse: () => C(t),
                      onReplaceWithUpload: (s) => F(t, s)
                    },
                    t.id
                  )) }) }),
                  /* @__PURE__ */ o(Q, { children: i && /* @__PURE__ */ o(
                    at,
                    {
                      isOverlay: !0,
                      isEditing: p,
                      item: i,
                      isDragging: !0,
                      onDelete: () => x(i),
                      onReplaceWithBrowse: () => C(i),
                      onReplaceWithUpload: (t) => F(i, t)
                    },
                    I
                  ) })
                ]
              }
            ),
            p && /* @__PURE__ */ g("div", { className: "tw-px-5 tw-py-3", children: [
              /* @__PURE__ */ o("div", { className: "tw-font-body tw-font-medium tw-text-text tw-text-s tw-my-4", children: "Add attachments" }),
              /* @__PURE__ */ o(
                rt,
                {
                  isLoading: A,
                  size: lt.Small,
                  onUploadClick: (t) => T(t),
                  onLibraryClick: k
                }
              )
            ] })
          ] })
        }
      ) })
    }
  ) : null;
};
export {
  vt as Attachments
};
//# sourceMappingURL=Attachments.es.js.map
