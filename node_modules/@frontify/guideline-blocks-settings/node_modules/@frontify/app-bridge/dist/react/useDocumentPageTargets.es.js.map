{"version":3,"file":"useDocumentPageTargets.es.js","sources":["../../src/react/useDocumentPageTargets.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { useEffect, useState } from 'react';\nimport { DocumentPageTargets } from '../types';\n\nimport type { AppBridgeBlock } from '../AppBridgeBlock';\nimport type { AppBridgeTheme } from '../AppBridgeTheme';\n\nexport type UseDocumentPageTargetsReturnType = {\n    documentPageTargets: Nullable<DocumentPageTargets>;\n    isLoading: boolean;\n};\n\nexport type DocumentPageTargetEvent = {\n    action: 'update';\n    payload: {\n        targets: number[];\n        pageIds: number[];\n    };\n};\n\nexport const useDocumentPageTargets = (\n    appBridge: AppBridgeBlock | AppBridgeTheme,\n    id: number,\n): UseDocumentPageTargetsReturnType => {\n    const [documentPageTargets, setDocumentPageTargets] = useState<Nullable<DocumentPageTargets>>(null);\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n\n    useEffect(() => {\n        const fetchDocumentPageTargets = async () => {\n            setIsLoading(true);\n            setDocumentPageTargets(await appBridge.getDocumentPageTargets(id));\n            setIsLoading(false);\n        };\n\n        fetchDocumentPageTargets();\n    }, [appBridge, id]);\n\n    useEffect(() => {\n        const handleTargetEventUpdates = (event: DocumentPageTargetEvent) => {\n            if (event.payload.pageIds.includes(id)) {\n                setDocumentPageTargets((previousState) => updateTargets(previousState, event.payload.targets));\n            }\n        };\n\n        window.emitter.on('AppBridge:GuidelineDocumentPageTargets:Action', handleTargetEventUpdates);\n\n        return () => {\n            window.emitter.off('AppBridge:GuidelineDocumentPageTargets:Action', handleTargetEventUpdates);\n        };\n    }, [id]);\n\n    return { documentPageTargets, isLoading };\n};\n\nconst updateTargets = (prevState: Nullable<DocumentPageTargets>, targetIds: number[]) => {\n    if (!prevState) {\n        return prevState;\n    }\n    return {\n        ...prevState,\n        hasSelectedTargets: targetIds.length > 0,\n        targets: prevState.targets.map((target) => ({\n            ...target,\n            target: { ...target.target, checked: targetIds.includes(target.target.id) },\n        })),\n    };\n};\n"],"names":["useDocumentPageTargets","appBridge","id","documentPageTargets","setDocumentPageTargets","useState","isLoading","setIsLoading","useEffect","handleTargetEventUpdates","event","previousState","updateTargets","prevState","targetIds","target"],"mappings":";AAqBa,MAAAA,IAAyB,CAClCC,GACAC,MACmC;AACnC,QAAM,CAACC,GAAqBC,CAAsB,IAAIC,EAAwC,IAAI,GAC5F,CAACC,GAAWC,CAAY,IAAIF,EAAkB,EAAI;AAExD,SAAAG,EAAU,MAAM;AAOa,KANQ,YAAY;AACzC,MAAAD,EAAa,EAAI,GACjBH,EAAuB,MAAMH,EAAU,uBAAuBC,CAAE,CAAC,GACjEK,EAAa,EAAK;AAAA,IAAA;EAGG,GAC1B,CAACN,GAAWC,CAAE,CAAC,GAElBM,EAAU,MAAM;AACN,UAAAC,IAA2B,CAACC,MAAmC;AACjE,MAAIA,EAAM,QAAQ,QAAQ,SAASR,CAAE,KACjCE,EAAuB,CAACO,MAAkBC,EAAcD,GAAeD,EAAM,QAAQ,OAAO,CAAC;AAAA,IACjG;AAGG,kBAAA,QAAQ,GAAG,iDAAiDD,CAAwB,GAEpF,MAAM;AACF,aAAA,QAAQ,IAAI,iDAAiDA,CAAwB;AAAA,IAAA;AAAA,EAChG,GACD,CAACP,CAAE,CAAC,GAEA,EAAE,qBAAAC,GAAqB,WAAAG;AAClC,GAEMM,IAAgB,CAACC,GAA0CC,MACxDD,KAGE;AAAA,EACH,GAAGA;AAAA,EACH,oBAAoBC,EAAU,SAAS;AAAA,EACvC,SAASD,EAAU,QAAQ,IAAI,CAACE,OAAY;AAAA,IACxC,GAAGA;AAAA,IACH,QAAQ,EAAE,GAAGA,EAAO,QAAQ,SAASD,EAAU,SAASC,EAAO,OAAO,EAAE,EAAE;AAAA,EAAA,EAC5E;AAAA;"}