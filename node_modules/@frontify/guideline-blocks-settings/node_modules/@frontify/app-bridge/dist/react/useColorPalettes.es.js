import { useState as P, useEffect as d } from "react";
import { compareObjects as i } from "../utilities/object.es.js";
const h = (o, l) => {
  const e = o.getBlockId(), [r, s] = P([]), n = (t) => {
    t.blockId === e && !i(t.colorPalettes, t.prevColorPalettes) && s(t.colorPalettes);
  };
  d(() => {
    let t = !0;
    return e && ((async () => {
      const C = await o.getColorPalettesWithColors(l);
      t && s(C);
    })(), window.emitter.on("AppBridge:ColorPalettesUpdated", n)), () => {
      t = !1, window.emitter.off("AppBridge:ColorPalettesUpdated", n);
    };
  }, [o, e, l]);
  const a = async () => {
    window.emitter.emit("AppBridge:ColorPalettesUpdated", {
      blockId: e,
      colorPalettes: await o.getColorPalettesWithColors(l),
      prevColorPalettes: { ...r }
    });
  };
  return {
    colorPalettes: r,
    createColorPalette: async (t) => {
      await o.createColorPalette(t), a();
    },
    updateColorPalette: async (t, c) => {
      await o.updateColorPalette(t, c), a();
    },
    deleteColorPalette: async (t) => {
      await o.deleteColorPalette(t), a();
    },
    downloadColorKit: (t) => o.downloadColorKit(t)
  };
};
export {
  h as useColorPalettes
};
//# sourceMappingURL=useColorPalettes.es.js.map
