{"version":3,"file":"useDocumentTargets.es.js","sources":["../../src/react/useDocumentTargets.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { useEffect, useState } from 'react';\n\nimport type { AppBridgeBlock } from '../AppBridgeBlock';\nimport type { AppBridgeTheme } from '../AppBridgeTheme';\nimport type { DocumentTargets } from '../types';\n\nexport type UseDocumentTargetsReturnType = {\n    documentTargets: Nullable<DocumentTargets>;\n    isLoading: boolean;\n};\n\ntype DocumentTargetEvent = {\n    action: 'update';\n    payload: {\n        targets: number[];\n        documentIds: number[];\n    };\n};\n\nexport const useDocumentTargets = (\n    appBridge: AppBridgeBlock | AppBridgeTheme,\n    id: number,\n): UseDocumentTargetsReturnType => {\n    const [documentTargets, setDocumentTargets] = useState<Nullable<DocumentTargets>>(null);\n    const [isLoading, setIsLoading] = useState<boolean>(true);\n\n    useEffect(() => {\n        const fetchDocumentTargets = async () => {\n            setIsLoading(true);\n            setDocumentTargets(await appBridge.getDocumentTargets(id));\n            setIsLoading(false);\n        };\n\n        fetchDocumentTargets();\n    }, [appBridge, id]);\n\n    useEffect(() => {\n        const handleTargetEventUpdates = (event: DocumentTargetEvent) => {\n            if (event.payload.documentIds.includes(id)) {\n                setDocumentTargets((previousState) => updateTargets(previousState, event.payload.targets));\n            }\n        };\n\n        window.emitter.on('AppBridge:GuidelineDocumentTargets:Action', handleTargetEventUpdates);\n        return () => {\n            window.emitter.off('AppBridge:GuidelineDocumentTargets:Action', handleTargetEventUpdates);\n        };\n    }, [id]);\n\n    return { documentTargets, isLoading };\n};\n\nconst updateTargets = (prevState: Nullable<DocumentTargets>, targetIds: number[]) => {\n    if (!prevState) {\n        return prevState;\n    }\n\n    return {\n        ...prevState,\n        hasSelectedTargets: targetIds.length > 0,\n        targets: prevState.targets.map((target) => ({\n            ...target,\n            target: { ...target.target, checked: targetIds.includes(target.target.id) },\n        })),\n    };\n};\n"],"names":["useDocumentTargets","appBridge","id","documentTargets","setDocumentTargets","useState","isLoading","setIsLoading","useEffect","handleTargetEventUpdates","event","previousState","updateTargets","prevState","targetIds","target"],"mappings":";AAqBa,MAAAA,IAAqB,CAC9BC,GACAC,MAC+B;AAC/B,QAAM,CAACC,GAAiBC,CAAkB,IAAIC,EAAoC,IAAI,GAChF,CAACC,GAAWC,CAAY,IAAIF,EAAkB,EAAI;AAExD,SAAAG,EAAU,MAAM;AAOS,KANQ,YAAY;AACrC,MAAAD,EAAa,EAAI,GACjBH,EAAmB,MAAMH,EAAU,mBAAmBC,CAAE,CAAC,GACzDK,EAAa,EAAK;AAAA,IAAA;EAGD,GACtB,CAACN,GAAWC,CAAE,CAAC,GAElBM,EAAU,MAAM;AACN,UAAAC,IAA2B,CAACC,MAA+B;AAC7D,MAAIA,EAAM,QAAQ,YAAY,SAASR,CAAE,KACrCE,EAAmB,CAACO,MAAkBC,EAAcD,GAAeD,EAAM,QAAQ,OAAO,CAAC;AAAA,IAC7F;AAGG,kBAAA,QAAQ,GAAG,6CAA6CD,CAAwB,GAChF,MAAM;AACF,aAAA,QAAQ,IAAI,6CAA6CA,CAAwB;AAAA,IAAA;AAAA,EAC5F,GACD,CAACP,CAAE,CAAC,GAEA,EAAE,iBAAAC,GAAiB,WAAAG;AAC9B,GAEMM,IAAgB,CAACC,GAAsCC,MACpDD,KAIE;AAAA,EACH,GAAGA;AAAA,EACH,oBAAoBC,EAAU,SAAS;AAAA,EACvC,SAASD,EAAU,QAAQ,IAAI,CAACE,OAAY;AAAA,IACxC,GAAGA;AAAA,IACH,QAAQ,EAAE,GAAGA,EAAO,QAAQ,SAASD,EAAU,SAASC,EAAO,OAAO,EAAE,EAAE;AAAA,EAAA,EAC5E;AAAA;"}