{"version":3,"file":"useColors.es.js","sources":["../../src/react/useColors.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { useEffect, useState } from 'react';\n\nimport { compareObjects } from '../utilities';\nimport type { AppBridgeBlock } from '../AppBridgeBlock';\nimport type { Color, ColorCreate, ColorPatch } from '../types';\n\nexport type UseColorsReturnType = {\n    colorsByPaletteId: Color[];\n    createColor: (colorCreate: ColorCreate) => void;\n    updateColor: (colorId: number, colorPatch: ColorPatch) => void;\n    deleteColor: (colorId: number) => void;\n};\n\nexport const useColors = (appBridge: AppBridgeBlock, colorPaletteId: number): UseColorsReturnType => {\n    const blockId = appBridge.getBlockId();\n\n    const [colorsByPaletteId, setColorsByPaletteId] = useState<Color[]>([]);\n\n    useEffect(() => {\n        let componentMounted = true;\n\n        const updateColorsFromEvent = (event: { blockId: number; colors: Color[]; prevColors: Color[] }) => {\n            if (event.blockId === blockId && !compareObjects(event.colors, event.prevColors)) {\n                const sortedColors = [...event.colors].sort((a, b) => a.sort - b.sort);\n                setColorsByPaletteId(sortedColors);\n            }\n        };\n\n        if (blockId) {\n            const mountingFetch = async () => {\n                const allColors = await appBridge.getColorsByColorPaletteId(colorPaletteId);\n                if (componentMounted) {\n                    const sortedColors = [...allColors].sort((a, b) => a.sort - b.sort);\n                    setColorsByPaletteId(sortedColors);\n                }\n            };\n            mountingFetch();\n\n            window.emitter.on('AppBridge:ColorsUpdated', updateColorsFromEvent);\n        }\n\n        return () => {\n            componentMounted = false;\n            window.emitter.off('AppBridge:ColorsUpdated', updateColorsFromEvent);\n        };\n    }, [appBridge, blockId, colorPaletteId]);\n\n    const emitUpdatedColors = async () => {\n        window.emitter.emit('AppBridge:ColorsUpdated', {\n            blockId,\n            colors: await appBridge.getColorsByColorPaletteId(colorPaletteId),\n            prevColors: { ...colorsByPaletteId },\n        });\n    };\n\n    const createColor = async (colorCreate: ColorCreate) => {\n        await appBridge.createColor(colorCreate);\n\n        emitUpdatedColors();\n    };\n\n    const updateColor = async (colorId: number, colorPatch: ColorPatch) => {\n        await appBridge.updateColor(colorId, colorPatch);\n\n        emitUpdatedColors();\n    };\n\n    const deleteColor = async (colorId: number) => {\n        await appBridge.deleteColor(colorId);\n\n        emitUpdatedColors();\n    };\n\n    return {\n        colorsByPaletteId,\n        createColor,\n        updateColor,\n        deleteColor,\n    };\n};\n"],"names":["useColors","appBridge","colorPaletteId","blockId","colorsByPaletteId","setColorsByPaletteId","useState","useEffect","componentMounted","updateColorsFromEvent","event","compareObjects","sortedColors","b","allColors","a","emitUpdatedColors","colorCreate","colorId","colorPatch"],"mappings":";;AAea,MAAAA,IAAY,CAACC,GAA2BC,MAAgD;AAC3F,QAAAC,IAAUF,EAAU,cAEpB,CAACG,GAAmBC,CAAoB,IAAIC,EAAkB,CAAE,CAAA;AAEtE,EAAAC,EAAU,MAAM;AACZ,QAAIC,IAAmB;AAEjB,UAAAC,IAAwB,CAACC,MAAqE;AAC5F,UAAAA,EAAM,YAAYP,KAAW,CAACQ,EAAeD,EAAM,QAAQA,EAAM,UAAU,GAAG;AAC9E,cAAME,IAAe,CAAC,GAAGF,EAAM,MAAM,EAAE,KAAK,CAAC,GAAGG,MAAM,EAAE,OAAOA,EAAE,IAAI;AACrE,QAAAR,EAAqBO,CAAY;AAAA,MACrC;AAAA,IAAA;AAGJ,WAAIT,OACsB,YAAY;AAC9B,YAAMW,IAAY,MAAMb,EAAU,0BAA0BC,CAAc;AAC1E,UAAIM,GAAkB;AAClB,cAAMI,IAAe,CAAC,GAAGE,CAAS,EAAE,KAAK,CAACC,GAAGF,MAAME,EAAE,OAAOF,EAAE,IAAI;AAClE,QAAAR,EAAqBO,CAAY;AAAA,MACrC;AAAA,IAAA,MAIG,OAAA,QAAQ,GAAG,2BAA2BH,CAAqB,IAG/D,MAAM;AACU,MAAAD,IAAA,IACZ,OAAA,QAAQ,IAAI,2BAA2BC,CAAqB;AAAA,IAAA;AAAA,EAExE,GAAA,CAACR,GAAWE,GAASD,CAAc,CAAC;AAEvC,QAAMc,IAAoB,YAAY;AAC3B,WAAA,QAAQ,KAAK,2BAA2B;AAAA,MAC3C,SAAAb;AAAA,MACA,QAAQ,MAAMF,EAAU,0BAA0BC,CAAc;AAAA,MAChE,YAAY,EAAE,GAAGE,EAAkB;AAAA,IAAA,CACtC;AAAA,EAAA;AAqBE,SAAA;AAAA,IACH,mBAAAA;AAAA,IACA,aApBgB,OAAOa,MAA6B;AAC9C,YAAAhB,EAAU,YAAYgB,CAAW,GAErBD;IAAA;AAAA,IAkBlB,aAfgB,OAAOE,GAAiBC,MAA2B;AAC7D,YAAAlB,EAAU,YAAYiB,GAASC,CAAU,GAE7BH;IAAA;AAAA,IAalB,aAVgB,OAAOE,MAAoB;AACrC,YAAAjB,EAAU,YAAYiB,CAAO,GAEjBF;IAAA;AAAA,EAOlB;AAER;"}