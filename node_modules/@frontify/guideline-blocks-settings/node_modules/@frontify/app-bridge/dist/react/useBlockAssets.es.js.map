{"version":3,"file":"useBlockAssets.es.js","sources":["../../src/react/useBlockAssets.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { useEffect, useState } from 'react';\n\nimport type { AppBridgeBlock } from '../AppBridgeBlock';\nimport type { Asset } from '../types';\nimport { compareObjects } from '../utilities';\n\nexport const useBlockAssets = (appBridge: AppBridgeBlock) => {\n    const blockId = appBridge.getBlockId();\n\n    const [blockAssets, setBlockAssets] = useState<Record<string, Asset[]>>({});\n\n    const updateBlockAssetsFromEvent = (event: {\n        blockId: number;\n        blockAssets: Record<string, Asset[]>;\n        prevBlockAssets: Record<string, Asset[]>;\n    }) => {\n        if (event.blockId === blockId && !compareObjects(event.blockAssets, event.prevBlockAssets)) {\n            setBlockAssets(event.blockAssets);\n        }\n    };\n\n    // Fetch the block assets on mount.\n    // And add listener for block assets updates.\n    useEffect(() => {\n        let componentMounted = true;\n\n        if (blockId) {\n            const mountingFetch = async () => {\n                const allBlockAssets = await appBridge.getBlockAssets();\n                if (componentMounted) {\n                    setBlockAssets(allBlockAssets);\n                }\n            };\n            mountingFetch();\n\n            window.emitter.on('AppBridge:BlockAssetsUpdated', updateBlockAssetsFromEvent);\n        }\n\n        return () => {\n            componentMounted = false;\n            window.emitter.off('AppBridge:BlockAssetsUpdated', updateBlockAssetsFromEvent);\n        };\n    }, [appBridge]);\n\n    const emitUpdatedBlockAssets = async () => {\n        window.emitter.emit('AppBridge:BlockAssetsUpdated', {\n            blockId,\n            blockAssets: await appBridge.getBlockAssets(),\n            prevBlockAssets: { ...blockAssets },\n        });\n    };\n\n    const updateAssetIdsFromKey = async (key: string, newAssetIds: number[]) => {\n        const currentBlockAssets = await appBridge.getBlockAssets();\n        const oldAssetIds = currentBlockAssets[key]?.map((asset) => asset.id) ?? [];\n\n        try {\n            await appBridge.deleteAssetIdsFromBlockAssetKey(key, oldAssetIds);\n            await appBridge.addAssetIdsToBlockAssetKey(key, newAssetIds);\n        } catch (error) {\n            console.error(error);\n        }\n\n        emitUpdatedBlockAssets();\n    };\n\n    const deleteAssetIdsFromKey = async (key: string, assetIds: number[]) => {\n        await appBridge.deleteAssetIdsFromBlockAssetKey(key, assetIds);\n        emitUpdatedBlockAssets();\n    };\n\n    const addAssetIdsToKey = async (key: string, assetIds: number[]) => {\n        await appBridge.addAssetIdsToBlockAssetKey(key, assetIds);\n        emitUpdatedBlockAssets();\n    };\n\n    return {\n        blockAssets,\n        addAssetIdsToKey,\n        deleteAssetIdsFromKey,\n        updateAssetIdsFromKey,\n    };\n};\n"],"names":["useBlockAssets","appBridge","blockId","blockAssets","setBlockAssets","useState","updateBlockAssetsFromEvent","event","compareObjects","useEffect","componentMounted","allBlockAssets","emitUpdatedBlockAssets","key","assetIds","newAssetIds","oldAssetIds","_a","asset","error"],"mappings":";;AAQa,MAAAA,IAAiB,CAACC,MAA8B;AACnD,QAAAC,IAAUD,EAAU,cAEpB,CAACE,GAAaC,CAAc,IAAIC,EAAkC,CAAE,CAAA,GAEpEC,IAA6B,CAACC,MAI9B;AACE,IAAAA,EAAM,YAAYL,KAAW,CAACM,EAAeD,EAAM,aAAaA,EAAM,eAAe,KACrFH,EAAeG,EAAM,WAAW;AAAA,EACpC;AAKJ,EAAAE,EAAU,MAAM;AACZ,QAAIC,IAAmB;AAEvB,WAAIR,OACsB,YAAY;AACxB,YAAAS,IAAiB,MAAMV,EAAU;AACvC,MAAIS,KACAN,EAAeO,CAAc;AAAA,IACjC,MAIG,OAAA,QAAQ,GAAG,gCAAgCL,CAA0B,IAGzE,MAAM;AACU,MAAAI,IAAA,IACZ,OAAA,QAAQ,IAAI,gCAAgCJ,CAA0B;AAAA,IAAA;AAAA,EACjF,GACD,CAACL,CAAS,CAAC;AAEd,QAAMW,IAAyB,YAAY;AAChC,WAAA,QAAQ,KAAK,gCAAgC;AAAA,MAChD,SAAAV;AAAA,MACA,aAAa,MAAMD,EAAU,eAAe;AAAA,MAC5C,iBAAiB,EAAE,GAAGE,EAAY;AAAA,IAAA,CACrC;AAAA,EAAA;AA2BE,SAAA;AAAA,IACH,aAAAA;AAAA,IACA,kBAPqB,OAAOU,GAAaC,MAAuB;AAC1D,YAAAb,EAAU,2BAA2BY,GAAKC,CAAQ,GACjCF;IAAA;AAAA,IAMvB,uBAb0B,OAAOC,GAAaC,MAAuB;AAC/D,YAAAb,EAAU,gCAAgCY,GAAKC,CAAQ,GACtCF;IAAA;AAAA,IAYvB,uBA5B0B,OAAOC,GAAaE,MAA0B;;AAElE,YAAAC,MAAcC,KADO,MAAMhB,EAAU,kBACJY,CAAG,MAAtB,gBAAAI,EAAyB,IAAI,CAACC,MAAUA,EAAM,QAAO;AAErE,UAAA;AACM,cAAAjB,EAAU,gCAAgCY,GAAKG,CAAW,GAC1D,MAAAf,EAAU,2BAA2BY,GAAKE,CAAW;AAAA,eACtDI,GAAO;AACZ,gBAAQ,MAAMA,CAAK;AAAA,MACvB;AAEuB,MAAAP;IAAA;AAAA,EAiBvB;AAER;"}