import { FetchError as c } from "../errors/NotifyError.es.js";
import { TimeoutReachedError as i } from "../errors/TimeoutReachedError.es.js";
const u = 3 * 1e3;
function E(r, o, s) {
  return new Promise((m, t) => {
    const n = (a) => {
      const e = a.data;
      e.token === o && e.topic === r && e.success ? m(e.data || !0) : t(new c(r)), window.removeEventListener("message", n);
    };
    window.addEventListener("message", n), setTimeout(
      () => {
        t(new i(r));
      },
      (s == null ? void 0 : s.timeout) || u
    );
  });
}
export {
  u as SUBSCRIBE_TIMEOUT,
  E as subscribe
};
//# sourceMappingURL=subscribe.es.js.map
