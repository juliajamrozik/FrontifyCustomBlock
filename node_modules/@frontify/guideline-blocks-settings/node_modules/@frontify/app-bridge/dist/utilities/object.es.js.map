{"version":3,"file":"object.es.js","sources":["../../src/utilities/object.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport type { CamelCasedPropertiesDeep, SnakeCasedPropertiesDeep } from 'type-fest';\n\nimport transform from 'lodash-es/transform';\nimport snakeCase from 'lodash-es/snakeCase';\nimport camelCase from 'lodash-es/camelCase';\n\nexport const compareObjects = (obj1: unknown, obj2: unknown) => {\n    if (!obj1 || !obj2 || typeof obj1 !== 'object' || typeof obj2 !== 'object') {\n        return false;\n    }\n\n    const obj1Keys = Object.keys(obj1) as (keyof typeof obj1)[];\n    const obj2Keys = Object.keys(obj2) as (keyof typeof obj2)[];\n\n    if (obj1Keys.length !== obj2Keys.length) {\n        return false;\n    }\n\n    for (const key of obj1Keys) {\n        if (\n            (typeof obj1[key] === 'object' && !compareObjects(obj1[key], obj2[key])) ||\n            (typeof obj1[key] !== 'object' && obj1[key] !== obj2[key])\n        ) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\nexport const isObject = (item: unknown) => {\n    return item && typeof item === 'object' && !Array.isArray(item);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const mergeDeep = <T = Record<string, unknown>>(target: any, ...sources: any): T => {\n    if (sources.length === 0) {\n        return target;\n    }\n\n    const source = sources.shift();\n\n    if (isObject(target) && isObject(source)) {\n        for (const key in source) {\n            if (isObject(source[key])) {\n                if (!target[key]) {\n                    Object.assign(target, { [key]: {} });\n                }\n                mergeDeep(target[key], source[key]);\n            } else {\n                Object.assign(target, { [key]: source[key] });\n            }\n        }\n    }\n\n    return mergeDeep(target, ...sources);\n};\n\n/**\n *\n * @param obj object or array of objects\n * @param caseType camel or snake\n * @returns converted object or array of objects\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const convertObjectCase = <Obj extends Record<string, any>, Case extends 'camel' | 'snake'>(\n    obj: Obj,\n    caseType: Case,\n): Case extends 'camel' ? CamelCasedPropertiesDeep<Obj> : SnakeCasedPropertiesDeep<Obj> => {\n    const caseFn = {\n        camel: camelCase,\n        snake: snakeCase,\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return transform(obj, (acc: any, value, key, target) => {\n        const caseKey = Array.isArray(target) ? key : caseFn[caseType](key);\n\n        acc[caseKey] = isObject(value) || Array.isArray(value) ? convertObjectCase(value, caseType) : value;\n    });\n};\n"],"names":["compareObjects","obj1","obj2","obj1Keys","obj2Keys","key","isObject","item","mergeDeep","target","sources","source","convertObjectCase","obj","caseType","caseFn","camelCase","snakeCase","transform","acc","value","caseKey"],"mappings":";;;AAQa,MAAAA,IAAiB,CAACC,GAAeC,MAAkB;AACxD,MAAA,CAACD,KAAQ,CAACC,KAAQ,OAAOD,KAAS,YAAY,OAAOC,KAAS;AACvD,WAAA;AAGL,QAAAC,IAAW,OAAO,KAAKF,CAAI,GAC3BG,IAAW,OAAO,KAAKF,CAAI;AAE7B,MAAAC,EAAS,WAAWC,EAAS;AACtB,WAAA;AAGX,aAAWC,KAAOF;AAET,QAAA,OAAOF,EAAKI,CAAG,KAAM,YAAY,CAACL,EAAeC,EAAKI,CAAG,GAAGH,EAAKG,CAAG,CAAC,KACrE,OAAOJ,EAAKI,CAAG,KAAM,YAAYJ,EAAKI,CAAG,MAAMH,EAAKG,CAAG;AAEjD,aAAA;AAIR,SAAA;AACX,GAEaC,IAAW,CAACC,MACdA,KAAQ,OAAOA,KAAS,YAAY,CAAC,MAAM,QAAQA,CAAI,GAIrDC,IAAY,CAA8BC,MAAgBC,MAAoB;AACnF,MAAAA,EAAQ,WAAW;AACZ,WAAAD;AAGL,QAAAE,IAASD,EAAQ;AAEvB,MAAIJ,EAASG,CAAM,KAAKH,EAASK,CAAM;AACnC,eAAWN,KAAOM;AACd,MAAIL,EAASK,EAAON,CAAG,CAAC,KACfI,EAAOJ,CAAG,KACJ,OAAA,OAAOI,GAAQ,EAAE,CAACJ,CAAG,GAAG,IAAI,GAEvCG,EAAUC,EAAOJ,CAAG,GAAGM,EAAON,CAAG,CAAC,KAE3B,OAAA,OAAOI,GAAQ,EAAE,CAACJ,CAAG,GAAGM,EAAON,CAAG,EAAA,CAAG;AAKjD,SAAAG,EAAUC,GAAQ,GAAGC,CAAO;AACvC,GASaE,IAAoB,CAC7BC,GACAC,MACuF;AACvF,QAAMC,IAAS;AAAA,IACX,OAAOC;AAAA,IACP,OAAOC;AAAA,EAAA;AAIX,SAAOC,EAAUL,GAAK,CAACM,GAAUC,GAAOf,GAAKI,MAAW;AAC9C,UAAAY,IAAU,MAAM,QAAQZ,CAAM,IAAIJ,IAAMU,EAAOD,CAAQ,EAAET,CAAG;AAElE,IAAAc,EAAIE,CAAO,IAAIf,EAASc,CAAK,KAAK,MAAM,QAAQA,CAAK,IAAIR,EAAkBQ,GAAON,CAAQ,IAAIM;AAAA,EAAA,CACjG;AACL;"}