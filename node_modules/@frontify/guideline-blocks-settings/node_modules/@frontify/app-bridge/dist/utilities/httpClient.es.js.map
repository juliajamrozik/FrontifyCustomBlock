{"version":3,"file":"httpClient.es.js","sources":["../../src/utilities/httpClient.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { HttpClientError } from '../errors/HttpClientError';\n\ntype HttpMethod = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE';\n\ntype RequestOptions = {\n    method: string;\n    headers: RequestHeaders;\n    body?: string;\n    signal?: AbortSignal;\n};\n\ntype RequestHeaders = {\n    'X-CSRF-TOKEN'?: string;\n    'Content-Type'?: string;\n};\n\ntype EndpointResponse<T> = {\n    currentPage?: number;\n    totalPages?: number;\n    data: T;\n    success: boolean;\n};\n\ntype DefaultHttpResponse = Record<string, unknown>;\n\nexport type HttpUtilResponse<T> = {\n    result: EndpointResponse<T>;\n};\n\nconst request = async <T>(\n    method: HttpMethod,\n    url: string,\n    data?: Record<never, never>,\n    headers?: RequestHeaders,\n): Promise<HttpUtilResponse<T>> => {\n    const parameters: RequestOptions = {\n        method,\n        headers: {\n            'Content-Type': 'application/json; charset=utf-8',\n            ...headers,\n        },\n        ...(data && { body: JSON.stringify(data) }),\n    };\n\n    const apiResponse = await window.fetch(`${window.location.origin}${url}`, parameters);\n    const apiResponseJson = await apiResponse.json();\n\n    if (!apiResponse.ok) {\n        throw new HttpClientError(apiResponseJson, apiResponse.status, apiResponseJson.error);\n    }\n\n    return {\n        result: apiResponseJson as EndpointResponse<T>,\n    };\n};\n\nexport class HttpClient {\n    static getCsrfToken() {\n        const tokenElement = document.getElementsByName('x-csrf-token');\n\n        if (tokenElement.length > 0) {\n            return (tokenElement[0] as HTMLMetaElement).content;\n        }\n\n        return undefined;\n    }\n\n    static async get<T = DefaultHttpResponse>(url: string): Promise<HttpUtilResponse<T>> {\n        return request<T>('GET', url, '', { 'X-CSRF-TOKEN': this.getCsrfToken() });\n    }\n\n    static async post<T = DefaultHttpResponse>(url: string, data?: Record<never, never>): Promise<HttpUtilResponse<T>> {\n        return request<T>('POST', url, data, { 'X-CSRF-TOKEN': this.getCsrfToken() });\n    }\n\n    static async put<T = DefaultHttpResponse>(url: string, data?: Record<never, never>): Promise<HttpUtilResponse<T>> {\n        return request<T>('PUT', url, data, { 'X-CSRF-TOKEN': this.getCsrfToken() });\n    }\n\n    static async patch<T = DefaultHttpResponse>(\n        url: string,\n        data?: Record<never, never>,\n    ): Promise<HttpUtilResponse<T>> {\n        return request<T>('PATCH', url, data, { 'X-CSRF-TOKEN': this.getCsrfToken() });\n    }\n\n    static async delete<T = DefaultHttpResponse>(\n        url: string,\n        data?: Record<never, never>,\n    ): Promise<HttpUtilResponse<T>> {\n        return request<T>('DELETE', url, data, { 'X-CSRF-TOKEN': this.getCsrfToken() });\n    }\n}\n"],"names":["request","method","url","data","headers","parameters","apiResponse","apiResponseJson","HttpClientError","HttpClient","tokenElement"],"mappings":";AA+BA,MAAMA,IAAU,OACZC,GACAC,GACAC,GACAC,MAC+B;AAC/B,QAAMC,IAA6B;AAAA,IAC/B,QAAAJ;AAAA,IACA,SAAS;AAAA,MACL,gBAAgB;AAAA,MAChB,GAAGG;AAAA,IACP;AAAA,IACA,GAAID,KAAQ,EAAE,MAAM,KAAK,UAAUA,CAAI,EAAE;AAAA,EAAA,GAGvCG,IAAc,MAAM,OAAO,MAAM,GAAG,OAAO,SAAS,MAAM,GAAGJ,CAAG,IAAIG,CAAU,GAC9EE,IAAkB,MAAMD,EAAY;AAEtC,MAAA,CAACA,EAAY;AACb,UAAM,IAAIE,EAAgBD,GAAiBD,EAAY,QAAQC,EAAgB,KAAK;AAGjF,SAAA;AAAA,IACH,QAAQA;AAAA,EAAA;AAEhB;AAEO,MAAME,EAAW;AAAA,EACpB,OAAO,eAAe;AACZ,UAAAC,IAAe,SAAS,kBAAkB,cAAc;AAE1D,QAAAA,EAAa,SAAS;AACd,aAAAA,EAAa,CAAC,EAAsB;AAAA,EAIpD;AAAA,EAEA,aAAa,IAA6BR,GAA2C;AAC1E,WAAAF,EAAW,OAAOE,GAAK,IAAI,EAAE,gBAAgB,KAAK,aAAa,EAAA,CAAG;AAAA,EAC7E;AAAA,EAEA,aAAa,KAA8BA,GAAaC,GAA2D;AACxG,WAAAH,EAAW,QAAQE,GAAKC,GAAM,EAAE,gBAAgB,KAAK,aAAa,EAAA,CAAG;AAAA,EAChF;AAAA,EAEA,aAAa,IAA6BD,GAAaC,GAA2D;AACvG,WAAAH,EAAW,OAAOE,GAAKC,GAAM,EAAE,gBAAgB,KAAK,aAAa,EAAA,CAAG;AAAA,EAC/E;AAAA,EAEA,aAAa,MACTD,GACAC,GAC4B;AACrB,WAAAH,EAAW,SAASE,GAAKC,GAAM,EAAE,gBAAgB,KAAK,aAAa,EAAA,CAAG;AAAA,EACjF;AAAA,EAEA,aAAa,OACTD,GACAC,GAC4B;AACrB,WAAAH,EAAW,UAAUE,GAAKC,GAAM,EAAE,gBAAgB,KAAK,aAAa,EAAA,CAAG;AAAA,EAClF;AACJ;"}