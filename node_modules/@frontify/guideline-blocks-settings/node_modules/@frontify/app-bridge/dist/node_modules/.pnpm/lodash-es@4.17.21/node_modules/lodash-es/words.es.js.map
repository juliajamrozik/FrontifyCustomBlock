{"version":3,"file":"words.es.js","sources":["../../../../../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/words.js"],"sourcesContent":["import asciiWords from './_asciiWords.js';\nimport hasUnicodeWord from './_hasUnicodeWord.js';\nimport toString from './toString.js';\nimport unicodeWords from './_unicodeWords.js';\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nexport default words;\n"],"names":["words","string","pattern","guard","toString","hasUnicodeWord","unicodeWords","asciiWords"],"mappings":";;;;AAwBA,SAASA,EAAMC,GAAQC,GAASC,GAAO;AAIrC,SAHAF,IAASG,EAASH,CAAM,GACxBC,IAAUC,IAAQ,SAAYD,GAE1BA,MAAY,SACPG,EAAeJ,CAAM,IAAIK,EAAaL,CAAM,IAAIM,EAAWN,CAAM,IAEnEA,EAAO,MAAMC,CAAO,KAAK,CAAA;AAClC;","x_google_ignoreList":[0]}