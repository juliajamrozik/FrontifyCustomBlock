{"version":3,"file":"isEqualWith.es.js","sources":["../../../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isEqualWith.js"],"sourcesContent":["import baseIsEqual from './_baseIsEqual.js';\n\n/**\n * This method is like `_.isEqual` except that it accepts `customizer` which\n * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n * are handled by the method instead. The `customizer` is invoked with up to\n * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * function isGreeting(value) {\n *   return /^h(?:i|ello)$/.test(value);\n * }\n *\n * function customizer(objValue, othValue) {\n *   if (isGreeting(objValue) && isGreeting(othValue)) {\n *     return true;\n *   }\n * }\n *\n * var array = ['hello', 'goodbye'];\n * var other = ['hi', 'goodbye'];\n *\n * _.isEqualWith(array, other, customizer);\n * // => true\n */\nfunction isEqualWith(value, other, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  var result = customizer ? customizer(value, other) : undefined;\n  return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n}\n\nexport default isEqualWith;\n"],"names":["isEqualWith","value","other","customizer","result","baseIsEqual"],"mappings":";AAkCA,SAASA,EAAYC,GAAOC,GAAOC,GAAY;AAC7C,EAAAA,IAAa,OAAOA,KAAc,aAAaA,IAAa;AAC5D,MAAIC,IAASD,IAAaA,EAAWF,GAAOC,CAAK,IAAI;AACrD,SAAOE,MAAW,SAAYC,EAAYJ,GAAOC,GAAO,QAAWC,CAAU,IAAI,CAAC,CAACC;AACrF;","x_google_ignoreList":[0]}