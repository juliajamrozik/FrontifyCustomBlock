import { useCallback as c, useEffect as b } from "react";
const f = [
  "input:not([disabled]):not([type=hidden])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  "[contenteditable]",
  '[tabindex]:not([tabindex="-1"]):not([disabled])'
].join(':not([hidden]):not([tabindex="-1"]),'), E = (e, a, d = !1) => {
  const s = c(
    (t) => {
      const o = (e == null ? void 0 : e.querySelectorAll(f)) ?? [], n = o[0], l = o[o.length - 1], i = document.activeElement ?? document.body, u = t.key === "Tab";
      !e || o.length === 0 || !u || d || ([...o].includes(i) || (n.focus(), t.preventDefault()), !t.shiftKey && t.target === l && (n.focus(), t.preventDefault()), t.shiftKey && t.target === n && (l.focus(), t.preventDefault()));
    },
    [d, e]
  );
  return b(() => {
    const t = document.activeElement ?? document.body;
    return a && window.addEventListener("keydown", s), () => {
      window.removeEventListener("keydown", s), d || t.focus();
    };
  }, [s, d, a]), e;
};
export {
  f as TABBABLE_ELEMENTS,
  E as useFocusTrap
};
//# sourceMappingURL=useFocusTrap.es.js.map
