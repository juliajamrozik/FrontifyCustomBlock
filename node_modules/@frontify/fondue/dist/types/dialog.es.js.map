{"version":3,"file":"dialog.es.js","sources":["../../src/types/dialog.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { ReactElement, ReactNode } from 'react';\nimport { IconProps } from '@foundation/Icon';\nimport { BadgeProps } from '@components/Badge';\nimport { ButtonProps } from '@components/Button';\nimport { PopperProps } from '@components/Popper/types';\n\nexport type DialogSize = 'small' | 'medium' | 'large';\nexport const DIALOG_SIZE = ['small', 'medium', 'large']; // To be used in Stories\n\nexport const dialogPaddingMap: Record<DialogSize, string> = {\n    small: 'tw-p-4',\n    medium: 'tw-p-6',\n    large: 'tw-p-10',\n};\n\nexport type DialogHeaderProps = {\n    title: string;\n    size?: DialogSize;\n    collapseBottom?: boolean;\n    onClose?: () => void;\n    icon?: ReactElement<IconProps>;\n    badge?: ReactElement<BadgeProps>;\n    'data-test-id'?: string;\n};\n\nexport type DialogBodyProps = {\n    children: ReactNode;\n    maxHeight?: number | string;\n    padding?: DialogSize;\n    'data-test-id'?: string;\n};\n\nexport type DialogFooterProps = {\n    children?: ReactNode;\n    actionButtons: ButtonProps[];\n    backButton?: Omit<ButtonProps, 'emphasis' | 'icon' | 'size'>;\n    padding?: DialogSize;\n    'data-test-id'?: string;\n};\n\nexport enum Modality {\n    Modal = 'modal',\n    NonModal = 'non-modal',\n    BlockingModal = 'blocking-modal',\n}\n\nexport type BaseDialogProps = {\n    modality?: Modality;\n    maxWidth?: string | number;\n    maxHeight?: string | number;\n    minWidth?: string | number;\n    minHeight?: string | number;\n    handleClose?: () => void;\n    /** @description This property enable a full screen gray underlay only for modal and blocking-modal options. */\n    darkUnderlay?: boolean;\n    /** @description If enabled, any value assigned to the maxHeight property won't have any effect.\n     * autoHeight will set the maxHeight of the dialog Component automatically calculating the available space in the viewport. */\n    autoHeight?: boolean;\n};\n\nexport type OverlayProps = {\n    open: boolean;\n    'data-test-id'?: string;\n    role?: string;\n} & PopperProps;\n"],"names":["dialogPaddingMap","Modality"],"mappings":"AAWO,MAAMA,IAA+C;AAAA,EACxD,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,OAAO;AACX;AA2BY,IAAAC,sBAAAA,OACRA,EAAA,QAAQ,SACRA,EAAA,WAAW,aACXA,EAAA,gBAAgB,kBAHRA,IAAAA,KAAA,CAAA,CAAA;"}