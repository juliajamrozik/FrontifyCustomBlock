import t from "react";
import { merge as f } from "../../utilities/merge.es.js";
import { IconSize as y } from "../../foundation/Icon/IconSize.es.js";
import { MenuItemContent as M } from "./MenuItemContent.es.js";
import { MenuItemContentSize as n, MenuItemStyle as e, SelectionIndicatorIcon as l } from "./types.es.js";
import { getItemElementType as P } from "../../utilities/elements.es.js";
import k from "../../foundation/Icon/Generated/IconCaretRight.es.js";
import H from "../../foundation/Icon/Generated/IconCheckMark.es.js";
const T = {
  [n.XSmall]: "tw-px-5 tw-py-2 tw-min-h-[36px]",
  [n.Small]: "tw-px-5 tw-py-2.5 tw-min-h-[36px]",
  [n.Large]: "tw-px-5 tw-py-3 tw-min-h-[60px]"
};
var W = /* @__PURE__ */ ((a) => (a.Default = "Default", a.Active = "Active", a.Disabled = "Disabled", a))(W || {});
const X = {
  [e.Primary]: {
    Default: "tw-text-text-x-weak",
    Active: "tw-text-text",
    Disabled: "tw-text-text-disabled"
  },
  [e.Danger]: {
    Default: "tw-text-red-60",
    Active: "tw-text-red-70",
    Disabled: "tw-text-text-disabled"
  },
  [e.Warning]: {
    Default: "tw-text-text-warning",
    Active: "tw-text-yellow-90",
    Disabled: "tw-text-text-disabled"
  }
}, $ = {
  [e.Primary]: "hover:tw-text-text",
  [e.Danger]: "hover:tw-text-text-negative",
  [e.Warning]: "hover:tw-text-text-warning"
}, C = "tw-cursor-pointer tw-flex tw-items-center tw-justify-between tw-transition-colors tw-gap-2", j = "hover:tw-bg-box-neutral-hover hover:tw-text-box-neutral-inverse-hover", p = f(["tw-w-full tw-text-left tw-py-2 tw-px-5", j]), F = "tw-bg-box-selected", K = ({
  title: a,
  decorator: h,
  switchComponent: A,
  subtitle: N,
  size: m = n.Small,
  style: u = e.Primary,
  disabled: i = !1,
  active: o = !1,
  checked: R = !1,
  selectionIndicator: _ = l.Check,
  children: r,
  link: E,
  onBlur: S,
  onClick: s,
  onFocus: d,
  onMouseEnter: b,
  onMouseOut: g,
  onMouseOver: v,
  onMouseLeave: I,
  "data-test-id": w = "menu-item"
}) => {
  const D = m === n.XSmall ? y.Size16 : y.Size20, z = {
    [l.CaretRight]: /* @__PURE__ */ t.createElement(k, { "data-test-id": `${w}-caret`, size: D }),
    [l.Check]: o && /* @__PURE__ */ t.createElement(H, { "data-test-id": `${w}-active`, size: D }),
    [l.None]: null
  }[_];
  let c = "Default";
  i ? c = "Disabled" : o && (c = "Active");
  const L = X[u][c], x = P(E, s);
  return /* @__PURE__ */ t.createElement(t.Fragment, null, r && /* @__PURE__ */ t.createElement(
    "li",
    {
      "data-test-id": w,
      role: "menuitem",
      className: f([
        "tw-text-sm tw-leading-4 tw-text-text-weak",
        C,
        R ? F : ""
      ])
    },
    x === "a" && /* @__PURE__ */ t.createElement(
      "a",
      {
        href: E,
        className: p,
        onBlur: S,
        onClick: s,
        onFocus: d,
        onMouseEnter: b,
        onMouseLeave: I,
        onMouseOut: g,
        onMouseOver: v
      },
      r
    ),
    x === "button" && /* @__PURE__ */ t.createElement(
      "button",
      {
        type: "button",
        disabled: i,
        className: p,
        onBlur: S,
        onClick: s,
        onFocus: d,
        onMouseEnter: b,
        onMouseLeave: I,
        onMouseOut: g,
        onMouseOver: v
      },
      r
    ),
    x === "span" && /* @__PURE__ */ t.createElement("span", { className: p }, r)
  ), !r && /* @__PURE__ */ t.createElement(
    "div",
    {
      className: f([
        C,
        $[u],
        T[m],
        i && "tw-bg-box-disabled tw-pointer-events-none",
        o && "tw-font-medium",
        L
      ])
    },
    /* @__PURE__ */ t.createElement(
      M,
      {
        title: a,
        decorator: h,
        subtitle: m === n.Large ? N : void 0,
        size: m,
        switchComponent: A
      }
    ),
    /* @__PURE__ */ t.createElement("div", { className: "tw-flex-none" }, z)
  ));
};
K.displayName = "FondueMenuItem";
export {
  K as MenuItem,
  W as MenuItemTextColorState,
  T as menuItemSizeClassMap,
  X as menuItemTextColorRecord
};
//# sourceMappingURL=MenuItem.es.js.map
