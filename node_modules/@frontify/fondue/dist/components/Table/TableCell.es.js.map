{"version":3,"file":"TableCell.es.js","sources":["../../../src/components/Table/TableCell.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Checkbox as CheckboxComponent, CheckboxState } from '@components/Checkbox/Checkbox';\nimport { merge } from '@utilities/merge';\nimport React, { Key, useRef } from 'react';\nimport { SelectionMode } from '..';\n\nexport enum TableCellType {\n    Default = 'Default',\n    Checkbox = 'Checkbox',\n}\n\nexport type TableCellProps = {\n    cell: any;\n    selectionMode: string;\n    type?: TableCellType;\n    isChecked?: boolean;\n    selectedRows: Key[];\n    setSelectedRows?: (ids?: Key[]) => void;\n};\n\nexport const TableCell = ({\n    cell,\n    selectionMode,\n    type = TableCellType.Default,\n    isChecked = false,\n    selectedRows,\n    setSelectedRows,\n}: TableCellProps) => {\n    const ref = useRef<HTMLTableCellElement | null>(null);\n\n    if (type === TableCellType.Checkbox) {\n        const { key } = cell;\n        const handleChange = () => {\n            if (!setSelectedRows) {\n                return;\n            }\n\n            if (isChecked) {\n                const filteredRows = selectedRows.filter((row) => row !== cell.parentKey);\n                setSelectedRows(filteredRows);\n                return;\n            }\n\n            const rowsToSelect =\n                selectionMode === SelectionMode.SingleSelect ? [cell.parentKey] : [...selectedRows, cell.parentKey];\n            setSelectedRows(rowsToSelect);\n        };\n\n        return (\n            <td\n                role=\"cell\"\n                ref={ref}\n                className={merge([\n                    'tw-pl-8 tw-py-4 tw-pr-4 tw-relative after:tw-absolute after:tw-left-0 after:tw-top-[-1px] after:tw-bottom-[-1px] after:tw-w-1',\n                    isChecked ? 'after:tw-bg-box-selected-strong' : 'after:tw-bg-transparent',\n                ])}\n                data-test-id=\"table-select-cell\"\n            >\n                <CheckboxComponent\n                    value={key}\n                    aria-label={cell['aria-label'] || key}\n                    state={isChecked ? CheckboxState.Checked : CheckboxState.Unchecked}\n                    onChange={handleChange}\n                />\n            </td>\n        );\n    }\n\n    return (\n        <td\n            role=\"cell\"\n            ref={ref}\n            className={merge([\n                'tw-p-4 tw-font-normal tw-text-xs focus:tw-outline-none',\n                isChecked ? 'tw-text-black-100 dark:tw-text-white' : 'tw-text-black-80 dark:tw-text-black-20',\n            ])}\n        >\n            {cell.rendered}\n        </td>\n    );\n};\nTableCell.displayName = 'FondueTableCell';\n"],"names":["TableCellType","TableCell","cell","selectionMode","type","isChecked","selectedRows","setSelectedRows","ref","useRef","key","handleChange","filteredRows","row","rowsToSelect","SelectionMode","React","merge","CheckboxComponent","CheckboxState"],"mappings":";;;;AAQY,IAAAA,sBAAAA,OACRA,EAAA,UAAU,WACVA,EAAA,WAAW,YAFHA,IAAAA,KAAA,CAAA,CAAA;AAcL,MAAMC,IAAY,CAAC;AAAA,EACtB,MAAAC;AAAA,EACA,eAAAC;AAAA,EACA,MAAAC,IAAO;AAAA,EACP,WAAAC,IAAY;AAAA,EACZ,cAAAC;AAAA,EACA,iBAAAC;AACJ,MAAsB;AACZ,QAAAC,IAAMC,EAAoC,IAAI;AAEpD,MAAIL,MAAS,YAAwB;AAC3B,UAAA,EAAE,KAAAM,EAAQ,IAAAR,GACVS,IAAe,MAAM;AACvB,UAAI,CAACJ;AACD;AAGJ,UAAIF,GAAW;AACX,cAAMO,IAAeN,EAAa,OAAO,CAACO,MAAQA,MAAQX,EAAK,SAAS;AACxE,QAAAK,EAAgBK,CAAY;AAC5B;AAAA,MACJ;AAEA,YAAME,IACFX,MAAkBY,EAAc,eAAe,CAACb,EAAK,SAAS,IAAI,CAAC,GAAGI,GAAcJ,EAAK,SAAS;AACtG,MAAAK,EAAgBO,CAAY;AAAA,IAAA;AAI5B,WAAA,gBAAAE,EAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACG,MAAK;AAAA,QACL,KAAAR;AAAA,QACA,WAAWS,EAAM;AAAA,UACb;AAAA,UACAZ,IAAY,oCAAoC;AAAA,QAAA,CACnD;AAAA,QACD,gBAAa;AAAA,MAAA;AAAA,MAEb,gBAAAW,EAAA;AAAA,QAACE;AAAAA,QAAA;AAAA,UACG,OAAOR;AAAA,UACP,cAAYR,EAAK,YAAY,KAAKQ;AAAA,UAClC,OAAOL,IAAYc,EAAc,UAAUA,EAAc;AAAA,UACzD,UAAUR;AAAA,QAAA;AAAA,MACd;AAAA,IAAA;AAAA,EAGZ;AAGI,SAAA,gBAAAK,EAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACG,MAAK;AAAA,MACL,KAAAR;AAAA,MACA,WAAWS,EAAM;AAAA,QACb;AAAA,QACAZ,IAAY,yCAAyC;AAAA,MAAA,CACxD;AAAA,IAAA;AAAA,IAEAH,EAAK;AAAA,EAAA;AAGlB;AACAD,EAAU,cAAc;"}