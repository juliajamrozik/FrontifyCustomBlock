import { useTableState as S, TableHeader as v, Column as N, TableBody as x, Row as D, Cell as R } from "@react-stately/table";
import t, { useState as A, useRef as O } from "react";
import { TableCellType as b, TableCell as H } from "./TableCell.es.js";
import { TableColumnHeaderType as p, TableColumnHeader as F } from "./TableColumnHeader.es.js";
import { TableHeaderRow as L } from "./TableHeaderRow.es.js";
import { TableRow as _ } from "./TableRow.es.js";
var $ = /* @__PURE__ */ ((e) => (e.NoSelect = "none", e.SingleSelect = "single", e.MultiSelect = "multiple", e))($ || {}), z = /* @__PURE__ */ ((e) => (e.Ascending = "ascending", e.Descending = "descending", e))(z || {});
const B = "descending", I = (e, s, o = !1) => ({
  children: [
    /* @__PURE__ */ t.createElement(v, { key: "table-header", columns: e }, (l) => {
      const n = !!(l.sortable && o);
      return /* @__PURE__ */ t.createElement(N, { allowsSorting: n }, l.name);
    }),
    /* @__PURE__ */ t.createElement(x, { key: "table-body", items: s }, (l) => /* @__PURE__ */ t.createElement(D, null, (n) => /* @__PURE__ */ t.createElement(R, { key: `${l.key}-${n}`, "aria-label": l.cells[n].ariaLabel }, l.cells[n].value)))
  ]
}), K = (e, s) => e.find(({ key: o }) => o === s) || null, P = (e) => e.map(({ key: s }) => s), U = ({
  columns: e,
  rows: s,
  onSelectionChange: o,
  selectionMode: l = "none",
  onSortChange: n,
  selectedRowIds: d = [],
  ariaLabel: y = "Table"
}) => {
  const u = l === "single" || l === "multiple", [{ sortedColumnKey: m, sortOrder: k }, w] = A({
    sortedColumnKey: void 0,
    sortOrder: void 0
  }), h = (a, r) => {
    w({
      sortedColumnKey: a,
      sortOrder: m !== a ? B : r === "ascending" ? "descending" : "ascending"
    }), n == null || n(a, r);
  }, g = P(s), T = O(null), E = I(e, s, !!n), f = S({
    ...E,
    selectionMode: l,
    showSelectionCheckboxes: u
  }), { collection: i } = f;
  return /* @__PURE__ */ t.createElement("div", { className: "tw-w-full tw-max-h-96 sm:tw-max-h-full" }, /* @__PURE__ */ t.createElement(
    "table",
    {
      "aria-label": y,
      ref: T,
      className: "tw-border-collapse tw-table-auto tw-w-full tw-min-w-max tw-text-left dark:tw-bg-black-100 dark:tw-text-black-20"
    },
    /* @__PURE__ */ t.createElement("thead", null, i.headerRows.map((a) => /* @__PURE__ */ t.createElement(L, { key: a.key }, [...a.childNodes].map((r) => {
      const c = r.props.isSelectionCell ? p.SelectAll : p.Default;
      return /* @__PURE__ */ t.createElement(
        F,
        {
          key: r.key,
          column: r,
          type: c,
          rowIds: g,
          sortDirection: k,
          selectionMode: l,
          isColumnSorted: m === r.key,
          handleSortChange: h,
          setSelectedRows: o
        }
      );
    }), /* @__PURE__ */ t.createElement("td", null)))),
    /* @__PURE__ */ t.createElement("tbody", null, [...i.body.childNodes].map((a) => {
      const r = K(s, a.key);
      return /* @__PURE__ */ t.createElement(_, { key: a.key, isSelected: d.includes(a.key) }, [...a.childNodes].map((c) => {
        const C = c.props.isSelectionCell ? b.Checkbox : b.Default;
        return /* @__PURE__ */ t.createElement(
          H,
          {
            key: c.key,
            cell: c,
            selectionMode: l,
            type: C,
            isChecked: d.includes(a.key),
            selectedRows: d,
            setSelectedRows: o
          }
        );
      }), (r == null ? void 0 : r.actionElements) && /* @__PURE__ */ t.createElement("td", { className: "tw-sticky tw-right-0 tw-z-10", "data-test-id": "table-actions" }, /* @__PURE__ */ t.createElement("div", { className: "tw-float-right hover:tw-bg-gradient-to-r hover:tw-from-transparent hover:tw-to-black-0 dark:hover:tw-to-black-95 tw-py-4 tw-pr-8 tw-pl-4" }, r.actionElements)));
    }))
  ));
};
U.displayName = "FondueTable";
export {
  $ as SelectionMode,
  z as SortDirection,
  U as Table
};
//# sourceMappingURL=Table.es.js.map
