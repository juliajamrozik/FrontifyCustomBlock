import { Checkbox as u, CheckboxState as f } from "../Checkbox/Checkbox.es.js";
import { merge as c } from "../../utilities/merge.es.js";
import a, { useRef as x } from "react";
import { SelectionMode as d } from "./Table.es.js";
var k = /* @__PURE__ */ ((t) => (t.Default = "Default", t.Checkbox = "Checkbox", t))(k || {});
const h = ({
  cell: t,
  selectionMode: w,
  type: b = "Default",
  isChecked: e = !1,
  selectedRows: o,
  setSelectedRows: r
}) => {
  const n = x(null);
  if (b === "Checkbox") {
    const { key: l } = t, m = () => {
      if (!r)
        return;
      if (e) {
        const i = o.filter((s) => s !== t.parentKey);
        r(i);
        return;
      }
      const p = w === d.SingleSelect ? [t.parentKey] : [...o, t.parentKey];
      r(p);
    };
    return /* @__PURE__ */ a.createElement(
      "td",
      {
        role: "cell",
        ref: n,
        className: c([
          "tw-pl-8 tw-py-4 tw-pr-4 tw-relative after:tw-absolute after:tw-left-0 after:tw-top-[-1px] after:tw-bottom-[-1px] after:tw-w-1",
          e ? "after:tw-bg-box-selected-strong" : "after:tw-bg-transparent"
        ]),
        "data-test-id": "table-select-cell"
      },
      /* @__PURE__ */ a.createElement(
        u,
        {
          value: l,
          "aria-label": t["aria-label"] || l,
          state: e ? f.Checked : f.Unchecked,
          onChange: m
        }
      )
    );
  }
  return /* @__PURE__ */ a.createElement(
    "td",
    {
      role: "cell",
      ref: n,
      className: c([
        "tw-p-4 tw-font-normal tw-text-xs focus:tw-outline-none",
        e ? "tw-text-black-100 dark:tw-text-white" : "tw-text-black-80 dark:tw-text-black-20"
      ])
    },
    t.rendered
  );
};
h.displayName = "FondueTableCell";
export {
  h as TableCell,
  k as TableCellType
};
//# sourceMappingURL=TableCell.es.js.map
