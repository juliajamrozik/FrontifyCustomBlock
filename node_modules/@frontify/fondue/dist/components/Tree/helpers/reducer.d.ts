import { ReactElement } from 'react';
import type { InternalTreeItemProps } from '../TreeItem';
export declare const findIndexById: (nodes: ReactElement<InternalTreeItemProps>[], id: string) => number;
export declare const getNodeChildrenIds: (nodes: ReactElement<InternalTreeItemProps>[], id: string) => string[];
export declare const updateNodeWithNewChildren: (nodes: ReactElement<InternalTreeItemProps>[], parentId: string, children: ReactElement[]) => ReactElement<any, string | import("react").JSXElementConstructor<any>>[];
export declare const getCurrentChildrenForNewNodesIfExpanded: (currentNodes: ReactElement[], expandedIds: Set<string>, newNodes: ReactElement[]) => ReactElement<any, string | import("react").JSXElementConstructor<any>>[];
export declare const currentNodesChanged: (currentChildrenIds: string[], currentNodes: ReactElement<InternalTreeItemProps>[], newNodes: ReactElement<InternalTreeItemProps>[]) => boolean;
