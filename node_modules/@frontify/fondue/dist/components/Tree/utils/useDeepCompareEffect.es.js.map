{"version":3,"file":"useDeepCompareEffect.es.js","sources":["../../../../src/components/Tree/utils/useDeepCompareEffect.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { DependencyList, EffectCallback, useEffect, useRef } from 'react';\nimport isEqual from 'react-fast-compare';\n\nconst isPrimitive = (val: unknown): boolean => val !== Object(val);\n\nexport const useDeepCompareEffect = (effect: EffectCallback, deps: unknown[]): void => {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!deps || deps.length === 0) {\n            console.warn(\n                '`useDeepCompareEffect` should not be used with no dependencies. Use React.useEffect instead.',\n            );\n        }\n\n        if (deps.every(isPrimitive)) {\n            console.warn(\n                '`useDeepCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.',\n            );\n        }\n    }\n\n    const ref = useRef<DependencyList | undefined>(undefined);\n\n    if (!isEqual(deps, ref.current)) {\n        ref.current = deps;\n    }\n\n    // Intended eslint disable, it doesn't pick ref.current as dependencies array\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(effect, ref.current);\n};\n"],"names":["isPrimitive","val","useDeepCompareEffect","effect","deps","ref","useRef","isEqual","useEffect"],"mappings":";;AAKA,MAAMA,IAAc,CAACC,MAA0BA,MAAQ,OAAOA,CAAG,GAEpDC,IAAuB,CAACC,GAAwBC,MAA0B;AAC/E,EAAA,QAAQ,IAAI,aAAa,kBACrB,CAACA,KAAQA,EAAK,WAAW,MACjB,QAAA;AAAA,IACJ;AAAA,EAAA,GAIJA,EAAK,MAAMJ,CAAW,KACd,QAAA;AAAA,IACJ;AAAA,EAAA;AAKN,QAAAK,IAAMC,EAAmC,MAAS;AAExD,EAAKC,EAAQH,GAAMC,EAAI,OAAO,MAC1BA,EAAI,UAAUD,IAKRI,EAAAL,GAAQE,EAAI,OAAO;AACjC;"}