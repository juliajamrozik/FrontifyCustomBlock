{"version":3,"file":"Breadcrumbs.es.js","sources":["../../../src/components/Breadcrumbs/Breadcrumbs.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { BadgeProps } from '@components/Badge';\nimport { IconProps } from '@foundation/Icon/IconProps';\nimport { AriaBreadcrumbsProps, useBreadcrumbs } from '@react-aria/breadcrumbs';\nimport React, { MouseEvent, ReactElement } from 'react';\nimport { BreadcrumbItem } from './BreadcrumbItem';\nimport { CurrentBreadcrumbItem } from './CurrentBreadcrumbItem';\nimport { merge } from '@utilities/merge';\n\nconst mapBreadcrumbsToAriaProps = (items: Breadcrumb[]) => ({\n    children: items.map(({ label }, index) => (\n        <li key={`breadcrumb-${index}`} aria-label={label}>\n            {label}\n        </li>\n    )),\n});\n\nexport type Breadcrumb = {\n    label: string;\n    link?: string;\n    onClick?: (event: MouseEvent<HTMLButtonElement>) => void;\n    decorator?: ReactElement<IconProps>;\n    bold?: boolean;\n    badges?: BadgeProps[];\n    'data-test-id'?: string;\n};\n\nexport type BreadcrumbsProps = {\n    items: Breadcrumb[];\n    'data-test-id'?: string;\n    verticalGap?: BreadcrumbGap;\n};\n\nexport enum BreadcrumbGap {\n    None = 'None',\n    Small = 'Small',\n    Medium = 'Medium',\n}\n\nexport const verticalGapClassMap: Record<BreadcrumbGap, string> = {\n    [BreadcrumbGap.None]: 'tw-gap-y-0',\n    [BreadcrumbGap.Small]: 'tw-gap-y-0.5',\n    [BreadcrumbGap.Medium]: 'tw-gap-y-1',\n};\n\nexport const Breadcrumbs = ({\n    items,\n    'data-test-id': dataTestId = 'breadcrumb',\n    verticalGap = BreadcrumbGap.Medium,\n}: BreadcrumbsProps): ReactElement => {\n    const props = mapBreadcrumbsToAriaProps(items);\n    const { navProps } = useBreadcrumbs(props as AriaBreadcrumbsProps);\n\n    return (\n        <nav {...navProps} className=\"tw-font-sans\" aria-label=\"Breadcrumb\" data-test-id={dataTestId}>\n            <ol className={merge(['tw-list-none tw-flex tw-flex-wrap', verticalGapClassMap[verticalGap]])}>\n                {items.map(({ label, badges, bold, decorator, link, onClick }, index) => {\n                    const isCurrent = index === items.length - 1;\n                    const key = `breadcrumb-${index}`;\n\n                    if (isCurrent) {\n                        return (\n                            <CurrentBreadcrumbItem\n                                key={key}\n                                label={label}\n                                badges={badges}\n                                bold={bold}\n                                decorator={decorator}\n                                link={link}\n                                onClick={onClick}\n                                data-test-id={dataTestId}\n                            />\n                        );\n                    }\n\n                    return (\n                        <BreadcrumbItem\n                            key={key}\n                            label={label}\n                            link={link}\n                            onClick={onClick}\n                            showSeparator={index < items.length - 2}\n                            data-test-id={dataTestId}\n                        />\n                    );\n                })}\n            </ol>\n        </nav>\n    );\n};\nBreadcrumbs.displayName = 'FondueBreadcrumbs';\n"],"names":["mapBreadcrumbsToAriaProps","items","label","index","React","BreadcrumbGap","verticalGapClassMap","Breadcrumbs","dataTestId","verticalGap","props","navProps","useBreadcrumbs","merge","badges","bold","decorator","link","onClick","isCurrent","key","CurrentBreadcrumbItem","BreadcrumbItem"],"mappings":";;;;;AAUA,MAAMA,IAA4B,CAACC,OAAyB;AAAA,EACxD,UAAUA,EAAM,IAAI,CAAC,EAAE,OAAAC,KAASC,MAC3B,gBAAAC,EAAA,cAAA,MAAA,EAAG,KAAK,cAAcD,KAAS,cAAYD,EAAA,GACvCA,CACL,CACH;AACL;AAkBY,IAAAG,sBAAAA,OACRA,EAAA,OAAO,QACPA,EAAA,QAAQ,SACRA,EAAA,SAAS,UAHDA,IAAAA,KAAA,CAAA,CAAA;AAML,MAAMC,IAAqD;AAAA,EAC7D,MAAqB;AAAA,EACrB,OAAsB;AAAA,EACtB,QAAuB;AAC5B,GAEaC,IAAc,CAAC;AAAA,EACxB,OAAAN;AAAA,EACA,gBAAgBO,IAAa;AAAA,EAC7B,aAAAC,IAAc;AAAA;AAClB,MAAsC;AAC5B,QAAAC,IAAQV,EAA0BC,CAAK,GACvC,EAAE,UAAAU,EAAA,IAAaC,EAAeF,CAA6B;AAEjE,SACK,gBAAAN,EAAA,cAAA,OAAA,EAAK,GAAGO,GAAU,WAAU,gBAAe,cAAW,cAAa,gBAAcH,EAC9E,GAAA,gBAAAJ,EAAA,cAAC,MAAG,EAAA,WAAWS,EAAM,CAAC,qCAAqCP,EAAoBG,CAAW,CAAC,CAAC,EACvF,GAAAR,EAAM,IAAI,CAAC,EAAE,OAAAC,GAAO,QAAAY,GAAQ,MAAAC,GAAM,WAAAC,GAAW,MAAAC,GAAM,SAAAC,KAAWf,MAAU;AAC/D,UAAAgB,IAAYhB,MAAUF,EAAM,SAAS,GACrCmB,IAAM,cAAcjB;AAE1B,WAAIgB,IAEI,gBAAAf,EAAA;AAAA,MAACiB;AAAA,MAAA;AAAA,QACG,KAAAD;AAAA,QACA,OAAAlB;AAAA,QACA,QAAAY;AAAA,QACA,MAAAC;AAAA,QACA,WAAAC;AAAA,QACA,MAAAC;AAAA,QACA,SAAAC;AAAA,QACA,gBAAcV;AAAA,MAAA;AAAA,IAAA,IAMtB,gBAAAJ,EAAA;AAAA,MAACkB;AAAA,MAAA;AAAA,QACG,KAAAF;AAAA,QACA,OAAAlB;AAAA,QACA,MAAAe;AAAA,QACA,SAAAC;AAAA,QACA,eAAef,IAAQF,EAAM,SAAS;AAAA,QACtC,gBAAcO;AAAA,MAAA;AAAA,IAAA;AAAA,EAGzB,CAAA,CACL,CACJ;AAER;AACAD,EAAY,cAAc;"}