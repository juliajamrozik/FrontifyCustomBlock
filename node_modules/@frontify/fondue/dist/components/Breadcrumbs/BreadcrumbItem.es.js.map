{"version":3,"file":"BreadcrumbItem.es.js","sources":["../../../src/components/Breadcrumbs/BreadcrumbItem.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport React, { ReactElement, useRef } from 'react';\nimport { useBreadcrumbItem } from '@react-aria/breadcrumbs';\nimport { useFocusRing } from '@react-aria/focus';\nimport { mergeProps } from '@react-aria/utils';\n\nimport { getItemElementType } from '@utilities/elements';\nimport { FOCUS_STYLE } from '@utilities/focusStyle';\nimport { merge } from '@utilities/merge';\n\nimport { Breadcrumb } from './Breadcrumbs';\n\nconst Separator = () => (\n    <svg\n        aria-hidden=\"true\"\n        width=\"13\"\n        height=\"17\"\n        viewBox=\"0 0 13 17\"\n        fill=\"none\"\n        className=\"tw-stroke-current tw-text-black-20\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <line x1=\"3.52447\" y1=\"16.0623\" x2=\"8.46874\" y2=\"0.845385\" />\n    </svg>\n);\n\ntype BreadcrumbItemProps = Pick<Breadcrumb, 'label' | 'link' | 'onClick'> & {\n    showSeparator: boolean;\n    'data-test-id'?: string;\n};\n\nexport const BreadcrumbItem = ({\n    label,\n    link,\n    onClick,\n    showSeparator,\n    'data-test-id': dataTestId = 'breadcrumb',\n}: BreadcrumbItemProps): ReactElement => {\n    const ref = useRef(null);\n\n    const Element = getItemElementType(link, onClick);\n\n    const { itemProps } = useBreadcrumbItem(\n        {\n            isCurrent: false,\n            children: label,\n            elementType: Element,\n        },\n        ref,\n    );\n\n    const { isFocusVisible, focusProps } = useFocusRing();\n\n    const elementTypeProps = { a: { href: link }, button: { onClick, type: 'button' as const }, span: {} };\n    const props = mergeProps(itemProps, focusProps, elementTypeProps[Element]);\n\n    return (\n        <li\n            className=\"tw-flex tw-items-center tw-text-text-weak hover:tw-text-text tw-text-xs tw-transition-colors\"\n            data-test-id={`${dataTestId}-item`}\n        >\n            <Element ref={ref} {...props} className={merge(['tw-outline-none', isFocusVisible && FOCUS_STYLE])}>\n                {label}\n            </Element>\n            {showSeparator && <Separator />}\n        </li>\n    );\n};\nBreadcrumbItem.displayName = 'FondueBreadcrumbItem';\n"],"names":["Separator","React","BreadcrumbItem","label","link","onClick","showSeparator","dataTestId","ref","useRef","Element","getItemElementType","itemProps","useBreadcrumbItem","isFocusVisible","focusProps","useFocusRing","props","mergeProps","merge","FOCUS_STYLE"],"mappings":";;;;;;;AAaA,MAAMA,IAAY,MACd,gBAAAC,EAAA;AAAA,EAAC;AAAA,EAAA;AAAA,IACG,eAAY;AAAA,IACZ,OAAM;AAAA,IACN,QAAO;AAAA,IACP,SAAQ;AAAA,IACR,MAAK;AAAA,IACL,WAAU;AAAA,IACV,OAAM;AAAA,EAAA;AAAA,EAEN,gBAAAA,EAAA,cAAC,UAAK,IAAG,WAAU,IAAG,WAAU,IAAG,WAAU,IAAG,WAAW,CAAA;AAC/D,GAQSC,IAAiB,CAAC;AAAA,EAC3B,OAAAC;AAAA,EACA,MAAAC;AAAA,EACA,SAAAC;AAAA,EACA,eAAAC;AAAA,EACA,gBAAgBC,IAAa;AACjC,MAAyC;AAC/B,QAAAC,IAAMC,EAAO,IAAI,GAEjBC,IAAUC,EAAmBP,GAAMC,CAAO,GAE1C,EAAE,WAAAO,MAAcC;AAAA,IAClB;AAAA,MACI,WAAW;AAAA,MACX,UAAUV;AAAA,MACV,aAAaO;AAAA,IACjB;AAAA,IACAF;AAAA,EAAA,GAGE,EAAE,gBAAAM,GAAgB,YAAAC,EAAW,IAAIC,EAAa,GAG9CC,IAAQC,EAAWN,GAAWG,GADX,EAAE,GAAG,EAAE,MAAMX,EAAK,GAAG,QAAQ,EAAE,SAAAC,GAAS,MAAM,SAAqB,GAAA,MAAM,CAAG,EAAA,EACpCK,CAAO,CAAC;AAGrE,SAAA,gBAAAT,EAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACG,WAAU;AAAA,MACV,gBAAc,GAAGM;AAAA,IAAA;AAAA,IAEhB,gBAAAN,EAAA,cAAAS,GAAA,EAAQ,KAAAF,GAAW,GAAGS,GAAO,WAAWE,EAAM,CAAC,mBAAmBL,KAAkBM,CAAW,CAAC,KAC5FjB,CACL;AAAA,IACCG,qCAAkBN,GAAU,IAAA;AAAA,EAAA;AAGzC;AACAE,EAAe,cAAc;"}