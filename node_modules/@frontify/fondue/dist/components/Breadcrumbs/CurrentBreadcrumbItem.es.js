import r, { useRef as y } from "react";
import { useBreadcrumbItem as E } from "@react-aria/breadcrumbs";
import { useFocusRing as h } from "@react-aria/focus";
import { mergeProps as B } from "@react-aria/utils";
import { FOCUS_STYLE as F } from "../../utilities/focusStyle.es.js";
import { merge as I } from "../../utilities/merge.es.js";
import { getItemElementType as N } from "../../utilities/elements.es.js";
import { Badge as P } from "../Badge/Badge.es.js";
const T = ({
  label: m,
  badges: e,
  bold: c,
  decorator: i,
  link: o,
  onClick: n,
  "data-test-id": a = "breadcrumb"
}) => {
  const s = y(null), t = N(o, n), { itemProps: p } = E(
    {
      isCurrent: !0,
      children: m,
      elementType: t
    },
    s
  ), l = { a: { href: o }, button: { onClick: n, type: "button" }, span: {} }, { isFocusVisible: u, focusProps: f } = h(), d = B(p, f, l[t]), w = I([
    "tw-flex tw-gap-x-1 tw-items-center tw-leading-4 tw-h-6",
    c && "tw-font-bold",
    u && F
  ]);
  return /* @__PURE__ */ r.createElement(
    "li",
    {
      className: "tw-w-full tw-inline-flex tw-align-middle tw-gap-x-1 tw-text-m tw-text-text tw-items-center",
      "data-test-id": `${a}-item`
    },
    /* @__PURE__ */ r.createElement(t, { ref: s, ...d, className: w }, i, m),
    e == null ? void 0 : e.map(({ children: x, ...b }, g) => /* @__PURE__ */ r.createElement(P, { ...b, key: `breadcrumb-badge-${g}` }, x))
  );
};
T.displayName = "FondueCurrentBreadcrumbItem";
export {
  T as CurrentBreadcrumbItem
};
//# sourceMappingURL=CurrentBreadcrumbItem.es.js.map
