import e, { useRef as u } from "react";
import { useBreadcrumbItem as w } from "@react-aria/breadcrumbs";
import { useFocusRing as d } from "@react-aria/focus";
import { mergeProps as f } from "@react-aria/utils";
import { getItemElementType as x } from "../../utilities/elements.es.js";
import { FOCUS_STYLE as b } from "../../utilities/focusStyle.es.js";
import { merge as g } from "../../utilities/merge.es.js";
const h = () => /* @__PURE__ */ e.createElement(
  "svg",
  {
    "aria-hidden": "true",
    width: "13",
    height: "17",
    viewBox: "0 0 13 17",
    fill: "none",
    className: "tw-stroke-current tw-text-black-20",
    xmlns: "http://www.w3.org/2000/svg"
  },
  /* @__PURE__ */ e.createElement("line", { x1: "3.52447", y1: "16.0623", x2: "8.46874", y2: "0.845385" })
), y = ({
  label: r,
  link: o,
  onClick: m,
  showSeparator: n,
  "data-test-id": a = "breadcrumb"
}) => {
  const s = u(null), t = x(o, m), { itemProps: c } = w(
    {
      isCurrent: !1,
      children: r,
      elementType: t
    },
    s
  ), { isFocusVisible: i, focusProps: l } = d(), p = f(c, l, { a: { href: o }, button: { onClick: m, type: "button" }, span: {} }[t]);
  return /* @__PURE__ */ e.createElement(
    "li",
    {
      className: "tw-flex tw-items-center tw-text-text-weak hover:tw-text-text tw-text-xs tw-transition-colors",
      "data-test-id": `${a}-item`
    },
    /* @__PURE__ */ e.createElement(t, { ref: s, ...p, className: g(["tw-outline-none", i && b]) }, r),
    n && /* @__PURE__ */ e.createElement(h, null)
  );
};
y.displayName = "FondueBreadcrumbItem";
export {
  y as BreadcrumbItem
};
//# sourceMappingURL=BreadcrumbItem.es.js.map
