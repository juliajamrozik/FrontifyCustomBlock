import { useBreadcrumbs as f } from "@react-aria/breadcrumbs";
import t from "react";
import { BreadcrumbItem as w } from "./BreadcrumbItem.es.js";
import { CurrentBreadcrumbItem as g } from "./CurrentBreadcrumbItem.es.js";
import { merge as y } from "../../utilities/merge.es.js";
const N = (e) => ({
  children: e.map(({ label: r }, a) => /* @__PURE__ */ t.createElement("li", { key: `breadcrumb-${a}`, "aria-label": r }, r))
});
var B = /* @__PURE__ */ ((e) => (e.None = "None", e.Small = "Small", e.Medium = "Medium", e))(B || {});
const E = {
  None: "tw-gap-y-0",
  Small: "tw-gap-y-0.5",
  Medium: "tw-gap-y-1"
}, M = ({
  items: e,
  "data-test-id": r = "breadcrumb",
  verticalGap: a = "Medium"
  /* Medium */
}) => {
  const l = N(e), { navProps: u } = f(l);
  return /* @__PURE__ */ t.createElement("nav", { ...u, className: "tw-font-sans", "aria-label": "Breadcrumb", "data-test-id": r }, /* @__PURE__ */ t.createElement("ol", { className: y(["tw-list-none tw-flex tw-flex-wrap", E[a]]) }, e.map(({ label: o, badges: p, bold: d, decorator: i, link: n, onClick: s }, m) => {
    const b = m === e.length - 1, c = `breadcrumb-${m}`;
    return b ? /* @__PURE__ */ t.createElement(
      g,
      {
        key: c,
        label: o,
        badges: p,
        bold: d,
        decorator: i,
        link: n,
        onClick: s,
        "data-test-id": r
      }
    ) : /* @__PURE__ */ t.createElement(
      w,
      {
        key: c,
        label: o,
        link: n,
        onClick: s,
        showSeparator: m < e.length - 2,
        "data-test-id": r
      }
    );
  })));
};
M.displayName = "FondueBreadcrumbs";
export {
  B as BreadcrumbGap,
  M as Breadcrumbs,
  E as verticalGapClassMap
};
//# sourceMappingURL=Breadcrumbs.es.js.map
