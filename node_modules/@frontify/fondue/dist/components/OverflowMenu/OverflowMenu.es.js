import e, { useState as m, useRef as i } from "react";
import { merge as u } from "../../utilities/merge.es.js";
import { FOCUS_VISIBLE_STYLE as p } from "../../utilities/focusStyle.es.js";
import f from "../../foundation/Icon/Generated/IconDotsHorizontal.es.js";
import { Menu as w } from "../Menu/Menu.es.js";
import { MenuItem as c } from "../MenuItem/MenuItem.es.js";
const d = ({ items: l, "data-test-id": a = "overflow-menu" }) => {
  const [t, n] = m(!1), o = i(null);
  return /* @__PURE__ */ e.createElement("div", { "data-test-id": a, className: "tw-relative tw-bottom-0 tw-top-0 tw-flex" }, /* @__PURE__ */ e.createElement(
    "button",
    {
      "aria-haspopup": "true",
      "aria-expanded": t,
      "aria-label": "Open overflow menu",
      ref: o,
      className: u([
        "tw-w-6 tw-h-6 hover:tw-bg-box-neutral-strong-inverse-hover tw-rounded tw-flex tw-justify-center tw-items-center",
        t ? "tw-bg-box-neutral-strong-inverse-pressed" : "tw-bg-box-neutral-strong-inverse",
        p
      ]),
      type: "button",
      onClick: () => {
        n(!t);
      }
    },
    /* @__PURE__ */ e.createElement(f, null)
  ), /* @__PURE__ */ e.createElement(w, { triggerRef: o, onClose: () => n(!1), open: t }, l.map((r, s) => /* @__PURE__ */ e.createElement(c, { link: r.link, onClick: r.onClick, key: `overflow-menu-item-${s}` }, r.label))));
};
d.displayName = "FondueOverflowMenu";
export {
  d as OverflowMenu
};
//# sourceMappingURL=OverflowMenu.es.js.map
