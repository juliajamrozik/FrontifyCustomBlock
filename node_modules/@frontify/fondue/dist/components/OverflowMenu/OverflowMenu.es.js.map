{"version":3,"file":"OverflowMenu.es.js","sources":["../../../src/components/OverflowMenu/OverflowMenu.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport React, { MouseEvent, useRef, useState } from 'react';\nimport { IconDotsHorizontal } from '@foundation/Icon/Generated';\nimport { merge } from '@utilities/merge';\nimport { FOCUS_VISIBLE_STYLE } from '@utilities/focusStyle';\nimport { Menu } from '@components/Menu';\nimport { MenuItem } from '@components/MenuItem';\n\nexport interface OverflowMenuItemProps {\n    id?: string;\n    label: string;\n    link?: string;\n    onClick?: <T extends HTMLAnchorElement | HTMLButtonElement>(event: MouseEvent<T>) => void;\n    disabled?: boolean;\n}\n\nexport interface OverflowMenuProps {\n    items: OverflowMenuItemProps[];\n    'data-test-id'?: string;\n}\n\nexport const OverflowMenu = ({ items, 'data-test-id': dataTestId = 'overflow-menu' }: OverflowMenuProps) => {\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    const menuOpenerRef = useRef<HTMLButtonElement>(null);\n\n    return (\n        <div data-test-id={dataTestId} className=\"tw-relative tw-bottom-0 tw-top-0 tw-flex\">\n            <button\n                aria-haspopup=\"true\"\n                aria-expanded={isMenuOpen}\n                aria-label=\"Open overflow menu\"\n                ref={menuOpenerRef}\n                className={merge([\n                    'tw-w-6 tw-h-6 hover:tw-bg-box-neutral-strong-inverse-hover tw-rounded tw-flex tw-justify-center tw-items-center',\n                    isMenuOpen ? 'tw-bg-box-neutral-strong-inverse-pressed' : 'tw-bg-box-neutral-strong-inverse',\n                    FOCUS_VISIBLE_STYLE,\n                ])}\n                type=\"button\"\n                onClick={() => {\n                    setIsMenuOpen(!isMenuOpen);\n                }}\n            >\n                <IconDotsHorizontal />\n            </button>\n            <Menu triggerRef={menuOpenerRef} onClose={() => setIsMenuOpen(false)} open={isMenuOpen}>\n                {items.map((item, index) => (\n                    <MenuItem link={item.link} onClick={item.onClick} key={`overflow-menu-item-${index}`}>\n                        {item.label}\n                    </MenuItem>\n                ))}\n            </Menu>\n        </div>\n    );\n};\nOverflowMenu.displayName = 'FondueOverflowMenu';\n"],"names":["OverflowMenu","items","dataTestId","isMenuOpen","setIsMenuOpen","useState","menuOpenerRef","useRef","React","merge","FOCUS_VISIBLE_STYLE","IconDotsHorizontal","Menu","item","index","MenuItem"],"mappings":";;;;;;AAsBO,MAAMA,IAAe,CAAC,EAAE,OAAAC,GAAO,gBAAgBC,IAAa,sBAAyC;AACxG,QAAM,CAACC,GAAYC,CAAa,IAAIC,EAAS,EAAK,GAC5CC,IAAgBC,EAA0B,IAAI;AAEpD,SACK,gBAAAC,EAAA,cAAA,OAAA,EAAI,gBAAcN,GAAY,WAAU,8CACrC,gBAAAM,EAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACG,iBAAc;AAAA,MACd,iBAAeL;AAAA,MACf,cAAW;AAAA,MACX,KAAKG;AAAA,MACL,WAAWG,EAAM;AAAA,QACb;AAAA,QACAN,IAAa,6CAA6C;AAAA,QAC1DO;AAAA,MAAA,CACH;AAAA,MACD,MAAK;AAAA,MACL,SAAS,MAAM;AACX,QAAAN,EAAc,CAACD,CAAU;AAAA,MAC7B;AAAA,IAAA;AAAA,oCAECQ,GAAmB,IAAA;AAAA,EAAA,GAExB,gBAAAH,EAAA,cAACI,GAAK,EAAA,YAAYN,GAAe,SAAS,MAAMF,EAAc,EAAK,GAAG,MAAMD,EACvE,GAAAF,EAAM,IAAI,CAACY,GAAMC,MACd,gBAAAN,EAAA,cAACO,GAAS,EAAA,MAAMF,EAAK,MAAM,SAASA,EAAK,SAAS,KAAK,sBAAsBC,IACxE,GAAAD,EAAK,KACV,CACH,CACL,CACJ;AAER;AACAb,EAAa,cAAc;"}