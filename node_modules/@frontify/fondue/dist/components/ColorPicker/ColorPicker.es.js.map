{"version":3,"file":"ColorPicker.es.js","sources":["../../../src/components/ColorPicker/ColorPicker.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { SegmentedControls } from '@components/SegmentedControls/SegmentedControls';\nimport React, { useState } from 'react';\nimport { Color, ColorFormat, Palette } from '../../types/colors';\nimport { BrandColorPicker } from './BrandColorPicker';\nimport './ColorPicker.css';\nimport { ColorPreview } from './ColorPreview';\nimport { CustomColorPicker } from './CustomColorPicker';\n\nexport type ColorPickerProps = {\n    palettes?: Palette[];\n    currentColor: Color;\n    currentFormat: ColorFormat;\n    setFormat: (id: ColorFormat) => void;\n    onSelect: (color: Color) => void;\n    showPreview?: boolean;\n    allowCustomColor?: boolean;\n};\n\nenum ColorType {\n    Brand = 'Brand',\n    Custom = 'Custom',\n}\n\nconst colorTypes = [\n    { id: ColorType.Brand, value: 'Brand' },\n    { id: ColorType.Custom, value: 'Custom' },\n];\n\nexport const ColorPicker = ({\n    currentColor,\n    palettes,\n    onSelect,\n    setFormat,\n    showPreview = true,\n    currentFormat = ColorFormat.Hex,\n    allowCustomColor = true,\n}: ColorPickerProps) => {\n    const [colorType, setColorType] = useState(ColorType.Brand);\n\n    return (\n        <div className=\"tw-w-[400px] tw-relative\">\n            {showPreview && <ColorPreview color={currentColor} />}\n            <div className=\"tw-p-5 tw-flex tw-flex-col tw-gap-2\">\n                {palettes && allowCustomColor && (\n                    <SegmentedControls\n                        items={colorTypes}\n                        activeItemId={colorType}\n                        onChange={(type) => setColorType(type as ColorType)}\n                    />\n                )}\n                {palettes && colorType === ColorType.Brand ? (\n                    <BrandColorPicker currentColor={currentColor} palettes={palettes} onSelect={onSelect} />\n                ) : (\n                    <CustomColorPicker\n                        currentColor={currentColor}\n                        currentFormat={currentFormat}\n                        setFormat={setFormat}\n                        onSelect={onSelect}\n                    />\n                )}\n            </div>\n        </div>\n    );\n};\nColorPicker.displayName = 'FondueColorPicker';\n"],"names":["colorTypes","ColorPicker","currentColor","palettes","onSelect","setFormat","showPreview","currentFormat","ColorFormat","allowCustomColor","colorType","setColorType","useState","React","ColorPreview","SegmentedControls","type","BrandColorPicker","CustomColorPicker"],"mappings":";;;;;;;AAyBA,MAAMA,IAAa;AAAA,EACf,EAAE,IAAI,SAAiB,OAAO,QAAQ;AAAA,EACtC,EAAE,IAAI,UAAkB,OAAO,SAAS;AAC5C,GAEaC,IAAc,CAAC;AAAA,EACxB,cAAAC;AAAA,EACA,UAAAC;AAAA,EACA,UAAAC;AAAA,EACA,WAAAC;AAAA,EACA,aAAAC,IAAc;AAAA,EACd,eAAAC,IAAgBC,EAAY;AAAA,EAC5B,kBAAAC,IAAmB;AACvB,MAAwB;AACpB,QAAM,CAACC,GAAWC,CAAY,IAAIC;AAAA,IAAS;AAAA;AAAA,EAAe;AAE1D,SACK,gBAAAC,EAAA,cAAA,OAAA,EAAI,WAAU,2BAAA,GACVP,KAAgB,gBAAAO,EAAA,cAAAC,GAAA,EAAa,OAAOZ,EAAA,CAAc,GAClD,gBAAAW,EAAA,cAAA,OAAA,EAAI,WAAU,yCACVV,KAAYM,KACT,gBAAAI,EAAA;AAAA,IAACE;AAAA,IAAA;AAAA,MACG,OAAOf;AAAA,MACP,cAAcU;AAAA,MACd,UAAU,CAACM,MAASL,EAAaK,CAAiB;AAAA,IAAA;AAAA,EACtD,GAEHb,KAAYO,MAAc,0CACtBO,GAAiB,EAAA,cAAAf,GAA4B,UAAAC,GAAoB,UAAAC,GAAoB,IAEtF,gBAAAS,EAAA;AAAA,IAACK;AAAA,IAAA;AAAA,MACG,cAAAhB;AAAA,MACA,eAAAK;AAAA,MACA,WAAAF;AAAA,MACA,UAAAD;AAAA,IAAA;AAAA,EAGZ,CAAA,CACJ;AAER;AACAH,EAAY,cAAc;"}