import { SegmentedControls as N } from "../SegmentedControls/SegmentedControls.es.js";
import { TextInput as h } from "../TextInput/TextInput.es.js";
import { IconSize as L } from "../../foundation/Icon/IconSize.es.js";
import { isColorLight as k, toShortRgb as v } from "../../utilities/colors.es.js";
import { merge as d } from "../../utilities/merge.es.js";
import e, { useState as w, useEffect as C } from "react";
import I from "tinycolor2";
import S from "../../foundation/Icon/Generated/IconMagnifier.es.js";
import y from "../../foundation/Icon/Generated/IconCheckMark.es.js";
import z from "../../foundation/Icon/Generated/IconGridRegular.es.js";
import R from "../../foundation/Icon/Generated/IconStackVertical.es.js";
const o = (l, r = "") => l == null ? void 0 : l.toLocaleLowerCase().includes(r.toLocaleLowerCase().trim()), G = ({ palettes: l = [], currentColor: r, onSelect: x }) => {
  const f = [
    { id: "Grid", icon: /* @__PURE__ */ e.createElement(z, null), ariaLabel: "Grid" },
    { id: "List", icon: /* @__PURE__ */ e.createElement(R, null), ariaLabel: "List" }
  ], [s, g] = w(f[0].id), [m, u] = w(""), [E, b] = w(l);
  C(() => {
    const a = setTimeout(() => {
      b(
        l.filter(({ title: i, colors: n }) => o(i, m) || n.some(({ name: t }) => o(t, m))).map(({ id: i, title: n, colors: t }) => ({
          id: i,
          title: n,
          colors: t.some(({ name: c }) => o(c, m)) ? t.filter(({ name: c }) => o(c, m)) : t
        }))
      );
    }, 200);
    return () => clearTimeout(a);
  }, [l, m]);
  const p = E.filter((a) => a.colors.length > 0);
  return /* @__PURE__ */ e.createElement("div", { className: "tw-flex tw-flex-col tw-gap-4", "data-test-id": "brand-color-picker" }, /* @__PURE__ */ e.createElement("div", { className: "tw-flex tw-gap-2" }, /* @__PURE__ */ e.createElement("div", { className: "tw-flex-1" }, /* @__PURE__ */ e.createElement(
    h,
    {
      value: m,
      decorator: /* @__PURE__ */ e.createElement(S, null),
      placeholder: "Search",
      onChange: (a) => u(a),
      clearable: !0
    }
  )), /* @__PURE__ */ e.createElement("div", { className: "tw-w-[72px]" }, /* @__PURE__ */ e.createElement(
    N,
    {
      size: "small",
      items: f,
      activeItemId: s,
      onChange: (a) => g(a)
    }
  ))), /* @__PURE__ */ e.createElement("ul", { className: "tw-flex tw-flex-col tw-gap-4" }, p.length > 0 ? p.map(({ id: a, title: i, colors: n }) => /* @__PURE__ */ e.createElement("li", { key: a, className: "tw-flex tw-flex-col tw-gap-2" }, /* @__PURE__ */ e.createElement("p", { className: "tw-text-black tw-text-xs tw-font-medium dark:tw-text-white" }, i), /* @__PURE__ */ e.createElement(
    "ul",
    {
      className: d([
        "tw-flex tw-gap-y-2 tw-flex-wrap",
        s === "List" && "tw-flex-col"
      ])
    },
    n.map((t) => /* @__PURE__ */ e.createElement("li", { key: t.name, "data-test-id": "brand-color" }, /* @__PURE__ */ e.createElement(
      "button",
      {
        className: "tw-flex tw-w-full",
        onClick: () => x(t),
        type: "button"
      },
      /* @__PURE__ */ e.createElement(
        "span",
        {
          className: d([
            "tw-h-6 tw-w-6 tw-mr-2 tw-rounded tw-flex tw-items-center tw-justify-center tw-ring-1 tw-ring-black-10 tw-ring-offset-1",
            k(t) ? "tw-text-black" : "tw-text-white"
          ]),
          style: { background: I(v(t)).toRgbString() }
        },
        t.red === r.red && t.green === r.green && t.blue === r.blue && t.alpha === r.alpha && /* @__PURE__ */ e.createElement(y, { size: L.Size20 })
      ),
      s === "List" && /* @__PURE__ */ e.createElement("span", { className: "tw-h-6 tw-grow tw-flex tw-items-center tw-text-sm tw-text-left" }, t.name)
    )))
  ))) : "No colors found"));
};
G.displayName = "FondueBrandColorPicker";
export {
  G as BrandColorPicker
};
//# sourceMappingURL=BrandColorPicker.es.js.map
