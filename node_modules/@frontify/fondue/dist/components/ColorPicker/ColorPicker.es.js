import { SegmentedControls as d } from "../SegmentedControls/SegmentedControls.es.js";
import e, { useState as p } from "react";
import { ColorFormat as C } from "../../types/colors.es.js";
import { BrandColorPicker as f } from "./BrandColorPicker.es.js";
import "./ColorPicker.css.es.js";
import { ColorPreview as u } from "./ColorPreview.es.js";
import { CustomColorPicker as w } from "./CustomColorPicker.es.js";
const v = [
  { id: "Brand", value: "Brand" },
  { id: "Custom", value: "Custom" }
], E = ({
  currentColor: o,
  palettes: r,
  onSelect: t,
  setFormat: a,
  showPreview: l = !0,
  currentFormat: i = C.Hex,
  allowCustomColor: c = !0
}) => {
  const [m, n] = p(
    "Brand"
    /* Brand */
  );
  return /* @__PURE__ */ e.createElement("div", { className: "tw-w-[400px] tw-relative" }, l && /* @__PURE__ */ e.createElement(u, { color: o }), /* @__PURE__ */ e.createElement("div", { className: "tw-p-5 tw-flex tw-flex-col tw-gap-2" }, r && c && /* @__PURE__ */ e.createElement(
    d,
    {
      items: v,
      activeItemId: m,
      onChange: (s) => n(s)
    }
  ), r && m === "Brand" ? /* @__PURE__ */ e.createElement(f, { currentColor: o, palettes: r, onSelect: t }) : /* @__PURE__ */ e.createElement(
    w,
    {
      currentColor: o,
      currentFormat: i,
      setFormat: a,
      onSelect: t
    }
  )));
};
E.displayName = "FondueColorPicker";
export {
  E as ColorPicker
};
//# sourceMappingURL=ColorPicker.es.js.map
