import { Dropdown as I } from "../Dropdown/Dropdown.es.js";
import { TextInputType as n } from "../TextInput/TextInput.es.js";
import { toShortRgb as k, toLongRgb as C } from "../../utilities/colors.es.js";
import t, { useState as f, useEffect as y } from "react";
import { RgbaColorPicker as H } from "react-colorful";
import v from "tinycolor2";
import { ColorInput as r, DecoratorPosition as P } from "./ColorInput.es.js";
import { ColorFormat as h } from "../../types/colors.es.js";
const E = (a) => v(k(a)).toHex(), R = ({
  currentColor: a,
  currentFormat: l,
  setFormat: s,
  onSelect: o
}) => {
  const b = [
    {
      id: "color-picker-format-dropdown-block",
      menuItems: Object.values(h).map((e) => ({ id: e, title: e.toLocaleUpperCase() }))
    }
  ], { red: i, green: c, blue: p, alpha: m = 1 } = a, [d, g] = f(E(a)), [N, u] = f(m), w = () => {
    const e = v(d);
    e.isValid() && o(C(e.toRgb()));
  };
  return y(() => {
    u(m), g(E(a));
  }, [m, a]), /* @__PURE__ */ t.createElement("div", { className: "tw-flex tw-flex-col tw-gap-4", "data-test-id": "custom-color-picker", id: "custom-color-picker" }, /* @__PURE__ */ t.createElement("div", { className: "tw-flex tw-flex-col md:tw-flex-row tw-gap-2 tw-max-w-full" }, /* @__PURE__ */ t.createElement("div", { className: "tw-min-w-[84px]" }, /* @__PURE__ */ t.createElement(
    I,
    {
      menuBlocks: b,
      activeItemId: l,
      onChange: (e) => e && s && s(e)
    }
  )), l === h.Hex ? /* @__PURE__ */ t.createElement("div", { className: "tw-flex-1" }, /* @__PURE__ */ t.createElement(
    r,
    {
      value: d,
      decorator: "#",
      size: 6,
      onChange: g,
      onEnterPressed: w,
      onBlur: w
    }
  )) : /* @__PURE__ */ t.createElement(t.Fragment, null, /* @__PURE__ */ t.createElement("div", { className: "tw-flex-1" }, /* @__PURE__ */ t.createElement(
    r,
    {
      min: 0,
      max: 255,
      size: 3,
      type: n.Number,
      value: i.toString(),
      onChange: (e) => o({ ...a, red: parseInt(e) })
    }
  )), /* @__PURE__ */ t.createElement("div", { className: "tw-flex-1" }, /* @__PURE__ */ t.createElement(
    r,
    {
      min: 0,
      max: 255,
      size: 3,
      type: n.Number,
      value: c.toString(),
      onChange: (e) => o({ ...a, green: parseInt(e) })
    }
  )), /* @__PURE__ */ t.createElement("div", { className: "tw-flex-1" }, /* @__PURE__ */ t.createElement(
    r,
    {
      min: 0,
      max: 255,
      size: 3,
      type: n.Number,
      value: p.toString(),
      onChange: (e) => o({ ...a, blue: parseInt(e) })
    }
  ))), /* @__PURE__ */ t.createElement(
    r,
    {
      min: 0,
      max: 100,
      size: 3,
      type: n.Number,
      value: Math.trunc(N * 100).toString(),
      decorator: "%",
      decoratorPosition: P.Right,
      onChange: (e) => {
        const x = parseInt(e || "0", 10) / 100;
        u(x), o({ ...a, alpha: x });
      }
    }
  )), /* @__PURE__ */ t.createElement("div", { className: "tw-flex tw-gap-2 tw-w-full tw-h-[200px]" }, /* @__PURE__ */ t.createElement("div", { className: "tw-relative tw-grow tw-rounded" }, /* @__PURE__ */ t.createElement(
    H,
    {
      color: { r: i, g: c, b: p, a: m },
      onChange: (e) => o({
        red: e.r,
        green: e.g,
        blue: e.b,
        alpha: e.a
      }),
      style: { width: "100%" }
    }
  ))));
};
R.displayName = "FondueCustomColorPicker";
export {
  R as CustomColorPicker
};
//# sourceMappingURL=CustomColorPicker.es.js.map
