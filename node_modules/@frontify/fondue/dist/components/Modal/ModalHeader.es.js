import e, { useContext as r, cloneElement as s } from "react";
import { merge as m } from "../../utilities/merge.es.js";
import { modalHeaderVariants as c, ModalHeaderVariant as p } from "./types.es.js";
import { IconSize as w } from "../../foundation/Icon/IconSize.es.js";
import { ModalTitle as f } from "./context/ModalTitle.es.js";
import { ModalLayout as x } from "./context/ModalLayout.es.js";
const u = ({
  title: l,
  leadText: t,
  decorator: a,
  variant: d = p.Default
}) => {
  const i = r(f), { padding: o, compact: n } = r(x);
  return /* @__PURE__ */ e.createElement("div", { "data-test-id": "modal-header", className: `${o.top} ${o.horizontal}` }, /* @__PURE__ */ e.createElement("div", { className: "tw-flex tw-items-center" }, a && /* @__PURE__ */ e.createElement(
    "span",
    {
      "data-test-id": "modal-header-decorator-container",
      className: m(["tw-mr-2", c[d]])
    },
    s(a, { size: w.Size24 })
  ), /* @__PURE__ */ e.createElement(
    "h3",
    {
      ...i,
      className: m([
        "tw-font-heading tw-font-medium tw-text-text",
        n ? "tw-text-lg" : "tw-text-xl"
      ])
    },
    l
  )), t && /* @__PURE__ */ e.createElement("p", { className: "tw-text-text-weak tw-mt-4" }, t));
};
u.displayName = "FondueModalHeader";
export {
  u as ModalHeader
};
//# sourceMappingURL=ModalHeader.es.js.map
