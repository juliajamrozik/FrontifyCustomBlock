{"version":3,"file":"types.es.js","sources":["../../../src/components/Modal/types.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { AriaOverlayProps } from '@react-aria/overlays';\nimport { AriaDialogProps } from '@react-types/dialog';\nimport { PatternDesign, PatternTheme } from '@foundation/Pattern';\nimport { ScrollWrapperDirection } from '@components/ScrollWrapper/types';\nimport { ReactElement, ReactNode } from 'react';\nimport { ButtonProps } from '..';\n\nexport type ModalButton = Omit<ButtonProps, 'size'>;\n\nexport type ModalVisualProps = {\n    pattern?: PatternDesign;\n    foregroundColor?: PatternTheme;\n};\n\nexport enum ModalHeaderVariant {\n    Default = 'Default',\n    Informative = 'Informative',\n    Negative = 'Negative',\n    Positive = 'Positive',\n    Warning = 'Warning',\n}\n\nexport const modalHeaderVariants: Record<ModalHeaderVariant, string> = {\n    [ModalHeaderVariant.Default]: 'tw-text-grey-80',\n    [ModalHeaderVariant.Informative]: 'tw-text-violet-60',\n    [ModalHeaderVariant.Negative]: 'tw-text-red-60',\n    [ModalHeaderVariant.Positive]: 'tw-text-green-60',\n    [ModalHeaderVariant.Warning]: 'tw-text-yellow-60',\n};\n\nexport type ModalHeaderProps = {\n    title?: string;\n    leadText?: ReactNode;\n    decorator?: ReactElement;\n    variant?: ModalHeaderVariant;\n};\n\ntype ModalBodyChildren = ReactElement | ReactElement[];\n\nexport type ModalBodyProps = {\n    direction?: ScrollWrapperDirection;\n    children?: ModalBodyChildren;\n    horizontalPadding?: boolean;\n};\n\nexport type ModalFooterProps = {\n    buttons: [ModalButton] | [ModalButton, ModalButton];\n};\n\nexport enum ModalWidth {\n    Default = 'Default',\n    Small = 'Small',\n    Large = 'Large',\n}\n\nexport type ModalPadding = {\n    [key: string]: { top: string; horizontal: string; bottom: string };\n};\n\nexport type ModalProps = {\n    visual?: ModalVisualProps;\n    width?: ModalWidth;\n    children?: ModalBodyChildren;\n    isOpen: boolean;\n    onClose?: () => void;\n    isDismissable?: boolean;\n    zIndex?: number;\n    compact?: boolean;\n} & Omit<AriaOverlayProps, 'isOpen'> &\n    AriaDialogProps;\n"],"names":["ModalHeaderVariant","modalHeaderVariants","ModalWidth"],"mappings":"AAgBY,IAAAA,sBAAAA,OACRA,EAAA,UAAU,WACVA,EAAA,cAAc,eACdA,EAAA,WAAW,YACXA,EAAA,WAAW,YACXA,EAAA,UAAU,WALFA,IAAAA,KAAA,CAAA,CAAA;AAQL,MAAMC,IAA0D;AAAA,EAClE,SAA6B;AAAA,EAC7B,aAAiC;AAAA,EACjC,UAA8B;AAAA,EAC9B,UAA8B;AAAA,EAC9B,SAA6B;AAClC;AAqBY,IAAAC,sBAAAA,OACRA,EAAA,UAAU,WACVA,EAAA,QAAQ,SACRA,EAAA,QAAQ,SAHAA,IAAAA,KAAA,CAAA,CAAA;"}