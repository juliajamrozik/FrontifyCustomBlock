import { TooltipIcon as u } from "../TooltipIcon/TooltipIcon.es.js";
import { IconSize as v } from "../../foundation/Icon/IconSize.es.js";
import { merge as r } from "../../utilities/merge.es.js";
import t from "react";
const g = ({
  children: e,
  htmlFor: s,
  required: w = !1,
  disabled: n = !1,
  clickable: m = !1,
  tooltip: a = [],
  bold: p,
  "data-test-id": o = "input-label"
}) => {
  const c = (Array.isArray(a) ? a : [a]).map((i, l) => ({
    key: l,
    ...i
  }));
  return /* @__PURE__ */ t.createElement(
    "div",
    {
      className: r([
        "tw-inline-flex tw-leading-4 tw-items-center tw-gap-1 tw-font-sans tw-text-s tw-max-w-full tw-min-w-0 tw-flex-initial",
        n ? "tw-text-text-disabled" : "tw-text-text-weak"
      ]),
      "data-test-id": `${o}-container`
    },
    /* @__PURE__ */ t.createElement("div", { className: "tw-flex-1 tw-overflow-hidden tw-text-ellipsis tw-whitespace-nowrap" }, /* @__PURE__ */ t.createElement(
      "label",
      {
        htmlFor: s,
        className: r([
          "tw-select-none tw-max-w-full",
          p && "tw-font-medium",
          n || !m ? "hover:tw-cursor-not-allowed tw-pointer-events-none" : "hover:tw-cursor-pointer hover:tw-text-text group-hover:tw-text-text"
        ]),
        "data-test-id": o,
        title: typeof e == "string" ? e : ""
      },
      e
    )),
    w && /* @__PURE__ */ t.createElement("span", { "data-test-id": `${o}-required`, className: "tw-h-4 tw-text-m tw-text-text-negative" }, "*"),
    c.map(({ key: i, triggerIcon: l, triggerStyle: x, hoverDelay: f = 100, ...d }) => /* @__PURE__ */ t.createElement("div", { key: i, className: "tw-leading-3" }, /* @__PURE__ */ t.createElement(
      u,
      {
        tooltip: { ...d, hoverDelay: f },
        iconSize: v.Size16,
        triggerIcon: l,
        triggerStyle: x
      }
    )))
  );
};
g.displayName = "FondueInputLabel";
export {
  g as InputLabel
};
//# sourceMappingURL=InputLabel.es.js.map
