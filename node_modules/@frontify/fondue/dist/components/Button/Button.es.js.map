{"version":3,"file":"Button.es.js","sources":["../../../src/components/Button/Button.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport React, { ForwardRefRenderFunction, MouseEvent, ReactElement, ReactNode, cloneElement, forwardRef } from 'react';\n\nimport { useButton } from '@react-aria/button';\nimport { merge } from '@utilities/merge';\nimport { useForwardedRef } from '@utilities/useForwardedRef';\nimport {\n    ButtonElements,\n    ButtonEmphasis,\n    ButtonRounding,\n    ButtonSize,\n    ButtonStyle,\n    ButtonType,\n    UpdatedButtonStyle,\n} from './ButtonTypes';\nimport {\n    ButtonCommonClasses,\n    ButtonDisabledClasses,\n    ButtonRoundingClasses,\n    ButtonSizeClasses,\n    ButtonStyleClasses,\n    IconSpacingClasses,\n} from './ButtonClasses';\nimport { FOCUS_VISIBLE_STYLE } from '@utilities/focusStyle';\nimport { buttonIconSizeMap, buttonTypeMap } from '@components/Button/mappings';\nimport { useFocusRing } from '@react-aria/focus';\n\n// To be NON-Breaking but import should be done through index.ts\nexport * from './ButtonClasses';\nexport * from './ButtonTypes';\n\nexport type ButtonProps = {\n    type?: ButtonType;\n    style?: ButtonStyle;\n    emphasis?: ButtonEmphasis;\n    hideLabel?: boolean;\n    size?: ButtonSize;\n    rounding?: ButtonRounding;\n    disabled?: boolean;\n    icon?: ReactElement;\n    children?: ReactNode;\n    onClick?: (event?: MouseEvent<HTMLButtonElement>) => void;\n    hugWidth?: boolean;\n    'aria-label'?: string;\n    'aria-describedby'?: string;\n    formId?: string;\n    /** @deprecated use emphasis with ButtonEmphasis.Weak */\n    solid?: boolean;\n    /** @deprecated inverted can be done by wrapping the component in a className=\"tw-dark\" */\n    inverted?: boolean;\n    'data-test-id'?: string;\n};\n\nconst ButtonComponent: ForwardRefRenderFunction<HTMLButtonElement | null, ButtonProps> = (\n    {\n        type = ButtonType.Button,\n        style = ButtonStyle.Default,\n        size = ButtonSize.Medium,\n        rounding = ButtonRounding.Medium,\n        emphasis = ButtonEmphasis.Strong,\n        hideLabel = false,\n        disabled = false,\n        icon,\n        children,\n        onClick,\n        hugWidth = true,\n        'aria-label': ariaLabel,\n        'aria-describedby': ariaDescribedBy,\n        formId,\n        solid,\n        inverted,\n        'data-test-id': dataTestId = 'button',\n    },\n    externalRef,\n) => {\n    // Map Style Primary, Secondary to style and emphasis\n    // Primary and Secondary can be omitted from the style type\n    if (style === ButtonStyle.Primary) {\n        style = ButtonStyle.Default;\n        emphasis = ButtonEmphasis.Strong;\n    } else if (style === ButtonStyle.Secondary) {\n        style = ButtonStyle.Default;\n        emphasis = ButtonEmphasis.Default;\n    }\n\n    // Rewrite Solid to property emphasis\n    if (solid === false) {\n        emphasis = ButtonEmphasis.Weak;\n    }\n\n    const ref = useForwardedRef<HTMLButtonElement | null>(externalRef);\n    const { buttonProps } = useButton(\n        { onPress: () => onClick && onClick(), isDisabled: disabled, type: buttonTypeMap[type] },\n        ref,\n    );\n    const { isFocusVisible, focusProps } = useFocusRing();\n\n    const getStyles = (kind: keyof ButtonElements) =>\n        !disabled\n            ? `${ButtonStyleClasses[emphasis][style as unknown as UpdatedButtonStyle][kind]}`\n            : ButtonDisabledClasses;\n\n    const buttonClassName = merge([\n        getStyles('button'),\n        ButtonCommonClasses,\n        ButtonRoundingClasses[rounding],\n        (icon && !children) || hideLabel ? ButtonSizeClasses[size].iconOnly : ButtonSizeClasses[size].default,\n        !hugWidth && 'tw-w-full',\n    ]);\n\n    return (\n        <button\n            data-test-id={dataTestId}\n            aria-label={ariaLabel}\n            aria-disabled={disabled}\n            aria-describedby={ariaDescribedBy}\n            ref={ref}\n            className={merge([buttonClassName, inverted && 'tw-dark', isFocusVisible && FOCUS_VISIBLE_STYLE])}\n            disabled={disabled}\n            form={formId}\n            {...buttonProps}\n            {...focusProps}\n        >\n            {icon && (\n                <span\n                    data-test-id={`${dataTestId}-icon`}\n                    className={merge([children && !hideLabel ? IconSpacingClasses[size] : '', getStyles('icon')])}\n                >\n                    {cloneElement(icon, { size: buttonIconSizeMap[size] })}\n                </span>\n            )}\n            {children && (\n                <span\n                    data-test-id={`${dataTestId}-text`}\n                    className={merge([getStyles('text'), hideLabel && 'tw-sr-only'])}\n                >\n                    {children}\n                </span>\n            )}\n        </button>\n    );\n};\n\nexport const Button = forwardRef(ButtonComponent);\nButton.displayName = 'FondueButton';\n"],"names":["ButtonComponent","type","ButtonType","style","ButtonStyle","size","ButtonSize","rounding","ButtonRounding","emphasis","ButtonEmphasis","hideLabel","disabled","icon","children","onClick","hugWidth","ariaLabel","ariaDescribedBy","formId","solid","inverted","dataTestId","externalRef","ref","useForwardedRef","buttonProps","useButton","buttonTypeMap","isFocusVisible","focusProps","useFocusRing","getStyles","kind","ButtonDisabledClasses","ButtonStyleClasses","buttonClassName","merge","ButtonCommonClasses","ButtonRoundingClasses","ButtonSizeClasses","React","FOCUS_VISIBLE_STYLE","IconSpacingClasses","cloneElement","buttonIconSizeMap","Button","forwardRef"],"mappings":";;;;;;;;;;AAsDA,MAAMA,IAAmF,CACrF;AAAA,EACI,MAAAC,IAAOC,EAAW;AAAA,EAClB,OAAAC,IAAQC,EAAY;AAAA,EACpB,MAAAC,IAAOC,EAAW;AAAA,EAClB,UAAAC,IAAWC,EAAe;AAAA,EAC1B,UAAAC,IAAWC,EAAe;AAAA,EAC1B,WAAAC,IAAY;AAAA,EACZ,UAAAC,IAAW;AAAA,EACX,MAAAC;AAAA,EACA,UAAAC;AAAA,EACA,SAAAC;AAAA,EACA,UAAAC,IAAW;AAAA,EACX,cAAcC;AAAA,EACd,oBAAoBC;AAAA,EACpB,QAAAC;AAAA,EACA,OAAAC;AAAA,EACA,UAAAC;AAAA,EACA,gBAAgBC,IAAa;AACjC,GACAC,MACC;AAGG,EAAApB,MAAUC,EAAY,WACtBD,IAAQC,EAAY,SACpBK,IAAWC,EAAe,UACnBP,MAAUC,EAAY,cAC7BD,IAAQC,EAAY,SACpBK,IAAWC,EAAe,UAI1BU,MAAU,OACVX,IAAWC,EAAe;AAGxB,QAAAc,IAAMC,EAA0CF,CAAW,GAC3D,EAAE,aAAAG,MAAgBC;AAAA,IACpB,EAAE,SAAS,MAAMZ,KAAWA,EAAW,GAAA,YAAYH,GAAU,MAAMgB,EAAc3B,CAAI,EAAE;AAAA,IACvFuB;AAAA,EAAA,GAEE,EAAE,gBAAAK,GAAgB,YAAAC,EAAW,IAAIC,EAAa,GAE9CC,IAAY,CAACC,MACdrB,IAEKsB,IADA,GAAGC,EAAmB1B,CAAQ,EAAEN,CAAsC,EAAE8B,CAAI,KAGhFG,IAAkBC,EAAM;AAAA,IAC1BL,EAAU,QAAQ;AAAA,IAClBM;AAAA,IACAC,EAAsBhC,CAAQ;AAAA,IAC7BM,KAAQ,CAACC,KAAaH,IAAY6B,EAAkBnC,CAAI,EAAE,WAAWmC,EAAkBnC,CAAI,EAAE;AAAA,IAC9F,CAACW,KAAY;AAAA,EAAA,CAChB;AAGG,SAAA,gBAAAyB,EAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACG,gBAAcnB;AAAA,MACd,cAAYL;AAAA,MACZ,iBAAeL;AAAA,MACf,oBAAkBM;AAAA,MAClB,KAAAM;AAAA,MACA,WAAWa,EAAM,CAACD,GAAiBf,KAAY,WAAWQ,KAAkBa,CAAmB,CAAC;AAAA,MAChG,UAAA9B;AAAA,MACA,MAAMO;AAAA,MACL,GAAGO;AAAA,MACH,GAAGI;AAAA,IAAA;AAAA,IAEHjB,KACG,gBAAA4B,EAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACG,gBAAc,GAAGnB;AAAA,QACjB,WAAWe,EAAM,CAACvB,KAAY,CAACH,IAAYgC,EAAmBtC,CAAI,IAAI,IAAI2B,EAAU,MAAM,CAAC,CAAC;AAAA,MAAA;AAAA,MAE3FY,EAAa/B,GAAM,EAAE,MAAMgC,EAAkBxC,CAAI,GAAG;AAAA,IACzD;AAAA,IAEHS,KACG,gBAAA2B,EAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACG,gBAAc,GAAGnB;AAAA,QACjB,WAAWe,EAAM,CAACL,EAAU,MAAM,GAAGrB,KAAa,YAAY,CAAC;AAAA,MAAA;AAAA,MAE9DG;AAAA,IACL;AAAA,EAAA;AAIhB,GAEagC,IAASC,EAAW/C,CAAe;AAChD8C,EAAO,cAAc;"}