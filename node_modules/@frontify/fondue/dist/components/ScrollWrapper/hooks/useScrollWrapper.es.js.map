{"version":3,"file":"useScrollWrapper.es.js","sources":["../../../../src/components/ScrollWrapper/hooks/useScrollWrapper.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { RefObject, UIEvent, useEffect, useState } from 'react';\n\nconst getScrollDimensions = (HTMLElement: HTMLElement) => ({\n    top: Math.ceil(HTMLElement.scrollTop),\n    height: HTMLElement.scrollHeight,\n    left: Math.ceil(HTMLElement.scrollLeft),\n    width: HTMLElement.scrollWidth,\n});\n\nexport const useScrollWrapper = (scrollingContainer: RefObject<HTMLElement>) => {\n    const [scrollDimensions, setScrollDimensions] = useState({ top: 0, height: Infinity, width: Infinity, left: 0 });\n\n    const onScroll = (event: UIEvent) => {\n        const target = event.target as HTMLElement;\n        const dimensions = getScrollDimensions(target);\n        setScrollDimensions(dimensions);\n    };\n\n    useEffect(() => {\n        const updateDimensionsFromRef = () => {\n            if (scrollingContainer.current) {\n                const dimensions = getScrollDimensions(scrollingContainer.current);\n                /* setTimeout is required to prevent error \"ResizeObserver loop limit exceeded\"\n                from being thrown during cypress component tests */\n                setTimeout(() => setScrollDimensions(dimensions), 0);\n            }\n        };\n\n        updateDimensionsFromRef();\n\n        const resizeObserver = new ResizeObserver(updateDimensionsFromRef);\n        if (scrollingContainer.current) {\n            resizeObserver.observe(scrollingContainer.current);\n        }\n        window.addEventListener('resize', updateDimensionsFromRef);\n\n        return () => {\n            resizeObserver.disconnect();\n            window.removeEventListener('resize', updateDimensionsFromRef);\n        };\n    }, [scrollingContainer]);\n\n    const { top, height, left, width } = scrollDimensions;\n\n    const currentHeight = scrollingContainer.current?.clientHeight ?? 0;\n    const showTopShadow = height > 0 && top !== 0;\n    const showBottomShadow = height !== 0 && top < height - currentHeight;\n    const currentWidth = scrollingContainer.current?.clientWidth ?? 0;\n    const showLeftShadow = width > 0 && left !== 0;\n    const showRightShadow = width !== 0 && left < width - currentWidth;\n\n    return [\n        {\n            showTopShadow,\n            showBottomShadow,\n            showLeftShadow,\n            showRightShadow,\n        },\n        { onScroll },\n    ];\n};\n"],"names":["getScrollDimensions","HTMLElement","useScrollWrapper","scrollingContainer","scrollDimensions","setScrollDimensions","useState","onScroll","event","target","dimensions","useEffect","updateDimensionsFromRef","resizeObserver","top","height","left","width","currentHeight","_a","showTopShadow","showBottomShadow","currentWidth","_b","showLeftShadow","showRightShadow"],"mappings":";AAIA,MAAMA,IAAsB,CAACC,OAA8B;AAAA,EACvD,KAAK,KAAK,KAAKA,EAAY,SAAS;AAAA,EACpC,QAAQA,EAAY;AAAA,EACpB,MAAM,KAAK,KAAKA,EAAY,UAAU;AAAA,EACtC,OAAOA,EAAY;AACvB,IAEaC,IAAmB,CAACC,MAA+C;;AAC5E,QAAM,CAACC,GAAkBC,CAAmB,IAAIC,EAAS,EAAE,KAAK,GAAG,QAAQ,OAAU,OAAO,OAAU,MAAM,EAAG,CAAA,GAEzGC,IAAW,CAACC,MAAmB;AACjC,UAAMC,IAASD,EAAM,QACfE,IAAaV,EAAoBS,CAAM;AAC7C,IAAAJ,EAAoBK,CAAU;AAAA,EAAA;AAGlC,EAAAC,EAAU,MAAM;AACZ,UAAMC,IAA0B,MAAM;AAClC,UAAIT,EAAmB,SAAS;AACtB,cAAAO,IAAaV,EAAoBG,EAAmB,OAAO;AAGjE,mBAAW,MAAME,EAAoBK,CAAU,GAAG,CAAC;AAAA,MACvD;AAAA,IAAA;AAGoB,IAAAE;AAElB,UAAAC,IAAiB,IAAI,eAAeD,CAAuB;AACjE,WAAIT,EAAmB,WACJU,EAAA,QAAQV,EAAmB,OAAO,GAE9C,OAAA,iBAAiB,UAAUS,CAAuB,GAElD,MAAM;AACT,MAAAC,EAAe,WAAW,GACnB,OAAA,oBAAoB,UAAUD,CAAuB;AAAA,IAAA;AAAA,EAChE,GACD,CAACT,CAAkB,CAAC;AAEvB,QAAM,EAAE,KAAAW,GAAK,QAAAC,GAAQ,MAAAC,GAAM,OAAAC,MAAUb,GAE/Bc,MAAgBC,IAAAhB,EAAmB,YAAnB,gBAAAgB,EAA4B,iBAAgB,GAC5DC,IAAgBL,IAAS,KAAKD,MAAQ,GACtCO,IAAmBN,MAAW,KAAKD,IAAMC,IAASG,GAClDI,MAAeC,IAAApB,EAAmB,YAAnB,gBAAAoB,EAA4B,gBAAe,GAC1DC,IAAiBP,IAAQ,KAAKD,MAAS,GACvCS,IAAkBR,MAAU,KAAKD,IAAOC,IAAQK;AAE/C,SAAA;AAAA,IACH;AAAA,MACI,eAAAF;AAAA,MACA,kBAAAC;AAAA,MACA,gBAAAG;AAAA,MACA,iBAAAC;AAAA,IACJ;AAAA,IACA,EAAE,UAAAlB,EAAS;AAAA,EAAA;AAEnB;"}