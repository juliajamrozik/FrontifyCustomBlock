import n, { createContext as x, useState as d, useEffect as R, useMemo as F, Children as w, isValidElement as N, useContext as g } from "react";
import { usePopper as M } from "react-popper";
import { Portal as S } from "../Portal/Portal.es.js";
const P = x({}), p = ({ children: e }) => e;
p.displayName = "FonduePopperReference";
const s = ({ children: e }) => {
  const { open: o } = V();
  return o ? /* @__PURE__ */ n.createElement(n.Fragment, null, e) : null;
};
s.displayName = "FonduePopperContent";
const V = () => {
  const e = g(P);
  if (!e)
    throw new Error("Popper compound components cannot be rendered outside the Popper component");
  return e;
}, a = ({
  children: e,
  open: o,
  placement: u = "bottom-start",
  offset: c = [0, 8],
  flip: m = !0,
  enablePortal: E = !0,
  zIndex: l = "auto"
}) => {
  const [y, C] = d(null), [b, f] = d(null), r = M(y, b, {
    placement: u,
    modifiers: [
      { name: "offset", options: { offset: c } },
      {
        name: "flip",
        enabled: m
      }
    ]
  });
  R(() => {
    (async () => {
      r.update && await r.update();
    })().catch(console.error);
  }, [m, u, c, o]);
  const v = F(() => ({ open: o }), [o]);
  return /* @__PURE__ */ n.createElement(P.Provider, { value: v }, w.map(e, (t) => {
    if (N(t) && typeof t.type == "function") {
      const { name: i } = t.type;
      if (i === p.name)
        return /* @__PURE__ */ n.createElement("div", { ref: C }, t);
      if (i === s.name)
        return E ? /* @__PURE__ */ n.createElement(S, null, /* @__PURE__ */ n.createElement(
          "div",
          {
            ref: f,
            style: { zIndex: l, ...r.styles.popper },
            ...r.attributes.popper
          },
          t
        )) : /* @__PURE__ */ n.createElement(
          "div",
          {
            ref: f,
            style: { zIndex: l, ...r.styles.popper },
            ...r.attributes.popper
          },
          t
        );
    }
  }));
};
a.displayName = "FonduePopper";
a.Reference = p;
a.Content = s;
export {
  a as Popper
};
//# sourceMappingURL=Popper.es.js.map
