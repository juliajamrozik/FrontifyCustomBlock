{"version":3,"file":"AriaMenuItem.es.js","sources":["../../../../src/components/ActionMenu/Aria/AriaMenuItem.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { MenuItem } from '@components/MenuItem/MenuItem';\nimport { Switch } from '@components/Switch';\nimport { useFocusRing } from '@react-aria/focus';\nimport { useMenuItem } from '@react-aria/menu';\nimport { mergeProps } from '@react-aria/utils';\nimport { TreeState } from '@react-stately/tree';\nimport { Node } from '@react-types/shared';\nimport { FOCUS_STYLE_INSET } from '@utilities/focusStyle';\nimport { merge } from '@utilities/merge';\nimport React, { ReactElement, useEffect, useRef, useState } from 'react';\nimport { MenuItemType } from '@components/Dropdown';\nimport { ActionMenuItemType, ActionMenuSwitchItemType } from '@components/ActionMenu';\n\nexport type AriaOptionProps = {\n    menuItem: MenuItemType | ActionMenuItemType | ActionMenuSwitchItemType;\n    node: Node<object>;\n    isSelected?: boolean;\n    state: TreeState<object>;\n    onClick?: () => void;\n};\n\ninterface SwitchObject {\n    switchComponent: ReactElement | undefined;\n    switchValue: boolean | null;\n    toggleSwitch: VoidFunction | null;\n}\n\nconst isActionMenuItem = (\n    menuItem: MenuItemType | ActionMenuItemType | ActionMenuSwitchItemType,\n): menuItem is ActionMenuItemType =>\n    typeof (menuItem as ActionMenuItemType).onClick !== 'undefined' && typeof menuItem.type === 'undefined';\nconst isActionMenuSwitchItem = (\n    menuItem: MenuItemType | ActionMenuItemType | ActionMenuSwitchItemType,\n): menuItem is ActionMenuSwitchItemType =>\n    typeof (menuItem as ActionMenuSwitchItemType).onClick !== 'undefined' && menuItem.type === 'switch';\n\nconst useSwitch = (isSwitch: boolean, initialValue: boolean) => {\n    const [switchValue, setSwitchValue] = useState<boolean>(initialValue ?? false);\n    const [switchObject, setSwitchObject] = useState<SwitchObject>({\n        switchComponent: undefined,\n        switchValue: null,\n        toggleSwitch: null,\n    });\n\n    useEffect(() => {\n        if (isSwitch) {\n            const toggleSwitch = () => setSwitchValue(!switchValue);\n            const switchComponent = <Switch size=\"small\" mode={switchValue ? 'on' : 'off'} />;\n\n            setSwitchObject({\n                switchComponent,\n                switchValue,\n                toggleSwitch,\n            });\n        }\n    }, [isSwitch, switchValue]);\n\n    return switchObject;\n};\n\nexport const AriaMenuItem = ({ menuItem, node, state, isSelected, onClick }: AriaOptionProps): ReactElement => {\n    const ref = useRef<HTMLLIElement | null>(null);\n    const initialValue = isActionMenuSwitchItem(menuItem) ? menuItem.initialValue : false;\n    const {\n        switchComponent = undefined,\n        switchValue = null,\n        toggleSwitch = null,\n    } = useSwitch(isActionMenuSwitchItem(menuItem), initialValue) as SwitchObject;\n\n    const { menuItemProps } = useMenuItem(\n        {\n            ...node,\n            onAction: () => {\n                if (isActionMenuItem(menuItem)) {\n                    menuItem.onClick();\n                }\n                if (isActionMenuSwitchItem(menuItem)) {\n                    toggleSwitch?.();\n                    menuItem.onClick(Boolean(!switchValue));\n                }\n            },\n            isDisabled: menuItem?.disabled || false,\n            'aria-label': typeof menuItem?.title === 'string' ? menuItem?.title : 'Menu item',\n        },\n        state,\n        ref,\n    );\n    const { title, decorator, subtitle, size, style, disabled, selectionIndicator } = menuItem;\n    const { isFocusVisible, focusProps } = useFocusRing();\n\n    return (\n        // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-noninteractive-element-interactions\n        <li\n            {...mergeProps(menuItemProps, focusProps)}\n            data-test-id=\"menu-item\"\n            className={merge([\n                'tw-relative hover:tw-bg-box-neutral-hover tw-list-none tw-outline-none',\n                disabled && 'tw-pointer-events-none tw-top-px',\n                isFocusVisible && FOCUS_STYLE_INSET,\n            ])}\n            ref={ref}\n            onClick={(event) => {\n                event.stopPropagation();\n                if (onClick) {\n                    onClick();\n                }\n            }}\n        >\n            <MenuItem\n                title={title}\n                decorator={decorator}\n                subtitle={subtitle}\n                size={size}\n                style={style}\n                disabled={disabled}\n                active={isSelected}\n                selectionIndicator={selectionIndicator}\n                switchComponent={switchComponent}\n            />\n        </li>\n    );\n};\nAriaMenuItem.displayName = 'FondueAriaMenuItem';\n"],"names":["isActionMenuItem","menuItem","isActionMenuSwitchItem","useSwitch","isSwitch","initialValue","switchValue","setSwitchValue","useState","switchObject","setSwitchObject","useEffect","toggleSwitch","Switch","AriaMenuItem","node","state","isSelected","onClick","ref","useRef","switchComponent","menuItemProps","useMenuItem","title","decorator","subtitle","size","style","disabled","selectionIndicator","isFocusVisible","focusProps","useFocusRing","React","mergeProps","merge","FOCUS_STYLE_INSET","event","MenuItem"],"mappings":";;;;;;;;AA6BA,MAAMA,IAAmB,CACrBC,MAEA,OAAQA,EAAgC,UAAY,OAAe,OAAOA,EAAS,OAAS,KAC1FC,IAAyB,CAC3BD,MAEA,OAAQA,EAAsC,UAAY,OAAeA,EAAS,SAAS,UAEzFE,IAAY,CAACC,GAAmBC,MAA0B;AAC5D,QAAM,CAACC,GAAaC,CAAc,IAAIC,EAAkBH,KAAgB,EAAK,GACvE,CAACI,GAAcC,CAAe,IAAIF,EAAuB;AAAA,IAC3D,iBAAiB;AAAA,IACjB,aAAa;AAAA,IACb,cAAc;AAAA,EAAA,CACjB;AAED,SAAAG,EAAU,MAAM;AACZ,QAAIP,GAAU;AACV,YAAMQ,IAAe,MAAML,EAAe,CAACD,CAAW;AAGtC,MAAAI,EAAA;AAAA,QACZ,iDAHqBG,GAAO,EAAA,MAAK,SAAQ,MAAMP,IAAc,OAAO,MAAO,CAAA;AAAA,QAI3E,aAAAA;AAAA,QACA,cAAAM;AAAA,MAAA,CACH;AAAA,IACL;AAAA,EAAA,GACD,CAACR,GAAUE,CAAW,CAAC,GAEnBG;AACX,GAEaK,IAAe,CAAC,EAAE,UAAAb,GAAU,MAAAc,GAAM,OAAAC,GAAO,YAAAC,GAAY,SAAAC,QAA6C;AACrG,QAAAC,IAAMC,EAA6B,IAAI,GACvCf,IAAeH,EAAuBD,CAAQ,IAAIA,EAAS,eAAe,IAC1E;AAAA,IACF,iBAAAoB,IAAkB;AAAA,IAClB,aAAAf,IAAc;AAAA,IACd,cAAAM,IAAe;AAAA,EACf,IAAAT,EAAUD,EAAuBD,CAAQ,GAAGI,CAAY,GAEtD,EAAE,eAAAiB,MAAkBC;AAAA,IACtB;AAAA,MACI,GAAGR;AAAA,MACH,UAAU,MAAM;AACR,QAAAf,EAAiBC,CAAQ,KACzBA,EAAS,QAAQ,GAEjBC,EAAuBD,CAAQ,MAChBW,KAAA,QAAAA,KACfX,EAAS,QAAQ,QAAQ,CAACK,CAAW,CAAC;AAAA,MAE9C;AAAA,MACA,aAAYL,KAAA,gBAAAA,EAAU,aAAY;AAAA,MAClC,cAAc,QAAOA,KAAA,gBAAAA,EAAU,UAAU,WAAWA,KAAA,gBAAAA,EAAU,QAAQ;AAAA,IAC1E;AAAA,IACAe;AAAA,IACAG;AAAA,EAAA,GAEE,EAAE,OAAAK,GAAO,WAAAC,GAAW,UAAAC,GAAU,MAAAC,GAAM,OAAAC,GAAO,UAAAC,GAAU,oBAAAC,EAAuB,IAAA7B,GAC5E,EAAE,gBAAA8B,GAAgB,YAAAC,EAAW,IAAIC,EAAa;AAEpD;AAAA;AAAA,IAEI,gBAAAC,EAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACI,GAAGC,EAAWb,GAAeU,CAAU;AAAA,QACxC,gBAAa;AAAA,QACb,WAAWI,EAAM;AAAA,UACb;AAAA,UACAP,KAAY;AAAA,UACZE,KAAkBM;AAAA,QAAA,CACrB;AAAA,QACD,KAAAlB;AAAA,QACA,SAAS,CAACmB,MAAU;AAChB,UAAAA,EAAM,gBAAgB,GAClBpB,KACQA;QAEhB;AAAA,MAAA;AAAA,MAEA,gBAAAgB,EAAA;AAAA,QAACK;AAAA,QAAA;AAAA,UACG,OAAAf;AAAA,UACA,WAAAC;AAAA,UACA,UAAAC;AAAA,UACA,MAAAC;AAAA,UACA,OAAAC;AAAA,UACA,UAAAC;AAAA,UACA,QAAQZ;AAAA,UACR,oBAAAa;AAAA,UACA,iBAAAT;AAAA,QAAA;AAAA,MACJ;AAAA,IACJ;AAAA;AAER;AACAP,EAAa,cAAc;"}