import { MenuItem as E } from "../../MenuItem/MenuItem.es.js";
import { useFocusRing as A } from "@react-aria/focus";
import { useMenuItem as k } from "@react-aria/menu";
import { mergeProps as F } from "@react-aria/utils";
import { FOCUS_STYLE_INSET as P } from "../../../utilities/focusStyle.es.js";
import { merge as x } from "../../../utilities/merge.es.js";
import a, { useRef as N, useState as d, useEffect as O } from "react";
import { Switch as R } from "../../Switch/Switch.es.js";
const j = (t) => typeof t.onClick < "u" && typeof t.type > "u", r = (t) => typeof t.onClick < "u" && t.type === "switch", z = (t, s) => {
  const [o, l] = d(s ?? !1), [i, e] = d({
    switchComponent: void 0,
    switchValue: null,
    toggleSwitch: null
  });
  return O(() => {
    if (t) {
      const n = () => l(!o);
      e({
        switchComponent: /* @__PURE__ */ a.createElement(R, { size: "small", mode: o ? "on" : "off" }),
        switchValue: o,
        toggleSwitch: n
      });
    }
  }, [t, o]), i;
}, T = ({ menuItem: t, node: s, state: o, isSelected: l, onClick: i }) => {
  const e = N(null), n = r(t) ? t.initialValue : !1, {
    switchComponent: f = void 0,
    switchValue: w = null,
    toggleSwitch: c = null
  } = z(r(t), n), { menuItemProps: h } = k(
    {
      ...s,
      onAction: () => {
        j(t) && t.onClick(), r(t) && (c == null || c(), t.onClick(Boolean(!w)));
      },
      isDisabled: (t == null ? void 0 : t.disabled) || !1,
      "aria-label": typeof (t == null ? void 0 : t.title) == "string" ? t == null ? void 0 : t.title : "Menu item"
    },
    o,
    e
  ), { title: u, decorator: b, subtitle: C, size: S, style: g, disabled: p, selectionIndicator: y } = t, { isFocusVisible: v, focusProps: M } = A();
  return (
    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-noninteractive-element-interactions
    /* @__PURE__ */ a.createElement(
      "li",
      {
        ...F(h, M),
        "data-test-id": "menu-item",
        className: x([
          "tw-relative hover:tw-bg-box-neutral-hover tw-list-none tw-outline-none",
          p && "tw-pointer-events-none tw-top-px",
          v && P
        ]),
        ref: e,
        onClick: (V) => {
          V.stopPropagation(), i && i();
        }
      },
      /* @__PURE__ */ a.createElement(
        E,
        {
          title: u,
          decorator: b,
          subtitle: C,
          size: S,
          style: g,
          disabled: p,
          active: l,
          selectionIndicator: y,
          switchComponent: f
        }
      )
    )
  );
};
T.displayName = "FondueAriaMenuItem";
export {
  T as AriaMenuItem
};
//# sourceMappingURL=AriaMenuItem.es.js.map
