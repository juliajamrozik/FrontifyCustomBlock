{"version":3,"file":"ActionMenu.es.js","sources":["../../../../src/components/ActionMenu/ActionMenu/ActionMenu.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { AriaList } from '@components/ActionMenu/Aria/AriaList';\nimport { AriaMenuItem } from '@components/ActionMenu/Aria/AriaMenuItem';\nimport { AriaSection } from '@components/ActionMenu/Aria/AriaSection';\nimport { getDisabledItemIds, getKeyItemRecord, getMenuItems, mapToAriaProps } from '@components/ActionMenu/Aria/helper';\nimport { MenuItemType } from '@components/Dropdown/SelectMenu/SelectMenu';\nimport { useMenu } from '@react-aria/menu';\nimport { useTreeState } from '@react-stately/tree';\nimport { FocusStrategy } from '@react-types/shared';\nimport React, { ReactElement, useRef } from 'react';\n\nexport type ActionMenuItemType = MenuItemType & { onClick: () => void };\nexport type ActionMenuSwitchItemType = MenuItemType & {\n    onClick: (switchValue: boolean) => void;\n    type: 'switch';\n    initialValue: boolean;\n};\n\nexport type ActionMenuBlock = {\n    id: string;\n    menuItems: (ActionMenuItemType | ActionMenuSwitchItemType)[];\n    ariaLabel?: string;\n};\n\nexport type ActionMenuProps = {\n    ariaLabel?: string;\n    menuBlocks: ActionMenuBlock[];\n    focus?: FocusStrategy;\n    border?: boolean;\n    scrollable?: boolean;\n    onClick?: () => void;\n};\n\nexport const ActionMenu = ({\n    menuBlocks,\n    ariaLabel = 'Action Menu',\n    focus,\n    border = true,\n    scrollable = false,\n    onClick,\n}: ActionMenuProps): ReactElement<ActionMenuProps> => {\n    const items = getMenuItems(menuBlocks);\n    const keyItemRecord = getKeyItemRecord(items);\n    const props = mapToAriaProps(ariaLabel, menuBlocks);\n    const state = useTreeState({\n        ...props,\n        selectionMode: 'none',\n        disabledKeys: getDisabledItemIds(items),\n    });\n    const menuRef = useRef<HTMLUListElement | null>(null);\n    const { menuProps } = useMenu({ ...props, autoFocus: focus }, state, menuRef);\n\n    return (\n        <AriaList ariaProps={{ ...menuProps }} ref={menuRef} border={border} scrollable={scrollable}>\n            {[...state.collection].map((section) => {\n                const { key: sectionKey, 'aria-label': sectionAriaLabel } = section;\n\n                return (\n                    <AriaSection key={sectionKey} ariaLabel={sectionAriaLabel}>\n                        {[...section.childNodes].map((item) => (\n                            <AriaMenuItem\n                                key={item.key}\n                                menuItem={keyItemRecord[item.key]}\n                                state={state}\n                                node={item}\n                                onClick={onClick}\n                            />\n                        ))}\n                    </AriaSection>\n                );\n            })}\n        </AriaList>\n    );\n};\nActionMenu.displayName = 'FondueActionMenu';\n"],"names":["ActionMenu","menuBlocks","ariaLabel","focus","border","scrollable","onClick","items","getMenuItems","keyItemRecord","getKeyItemRecord","props","mapToAriaProps","state","useTreeState","getDisabledItemIds","menuRef","useRef","menuProps","useMenu","AriaList","section","sectionKey","sectionAriaLabel","React","AriaSection","item","AriaMenuItem"],"mappings":";;;;;;;AAkCO,MAAMA,IAAa,CAAC;AAAA,EACvB,YAAAC;AAAA,EACA,WAAAC,IAAY;AAAA,EACZ,OAAAC;AAAA,EACA,QAAAC,IAAS;AAAA,EACT,YAAAC,IAAa;AAAA,EACb,SAAAC;AACJ,MAAsD;AAC5C,QAAAC,IAAQC,EAAaP,CAAU,GAC/BQ,IAAgBC,EAAiBH,CAAK,GACtCI,IAAQC,EAAeV,GAAWD,CAAU,GAC5CY,IAAQC,EAAa;AAAA,IACvB,GAAGH;AAAA,IACH,eAAe;AAAA,IACf,cAAcI,EAAmBR,CAAK;AAAA,EAAA,CACzC,GACKS,IAAUC,EAAgC,IAAI,GAC9C,EAAE,WAAAC,EAAU,IAAIC,EAAQ,EAAE,GAAGR,GAAO,WAAWR,EAAS,GAAAU,GAAOG,CAAO;AAE5E,yCACKI,GAAS,EAAA,WAAW,EAAE,GAAGF,EAAA,GAAa,KAAKF,GAAS,QAAAZ,GAAgB,YAAAC,EAAA,GAChE,CAAC,GAAGQ,EAAM,UAAU,EAAE,IAAI,CAACQ,MAAY;AACpC,UAAM,EAAE,KAAKC,GAAY,cAAcC,MAAqBF;AAE5D,WACK,gBAAAG,EAAA,cAAAC,GAAA,EAAY,KAAKH,GAAY,WAAWC,EAAA,GACpC,CAAC,GAAGF,EAAQ,UAAU,EAAE,IAAI,CAACK,MAC1B,gBAAAF,EAAA;AAAA,MAACG;AAAA,MAAA;AAAA,QACG,KAAKD,EAAK;AAAA,QACV,UAAUjB,EAAciB,EAAK,GAAG;AAAA,QAChC,OAAAb;AAAA,QACA,MAAMa;AAAA,QACN,SAAApB;AAAA,MAAA;AAAA,IAEP,CAAA,CACL;AAAA,EAEP,CAAA,CACL;AAER;AACAN,EAAW,cAAc;"}