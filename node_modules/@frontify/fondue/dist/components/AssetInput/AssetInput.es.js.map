{"version":3,"file":"AssetInput.es.js","sources":["../../../src/components/AssetInput/AssetInput.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { ActionMenuProps } from '@components/ActionMenu/ActionMenu/ActionMenu';\nimport { Button, ButtonEmphasis, ButtonStyle } from '@components/Button';\nimport { IconArrowCircleUp, IconImageStack } from '@foundation/Icon/';\nimport { IconProps } from '@foundation/Icon/IconProps';\nimport { useMemoizedId } from '@hooks/useMemoizedId';\nimport { merge } from '@utilities/merge';\nimport React, { ChangeEvent, ReactElement, useRef } from 'react';\nimport { MultiAssetPreview } from './MultiAssetPreview';\nimport { SelectedAsset } from './SingleAsset/SelectedAsset';\n\ntype BaseAsset = {\n    name: string;\n};\n\nexport type ImageAsset = {\n    type: 'image' | 'logo';\n    name: string;\n    extension: string;\n    src?: string;\n    alt?: string;\n    icon?: undefined;\n    size: number;\n};\n\ntype OtherAsset = BaseAsset & {\n    type: 'audio';\n    extension: string;\n    src?: undefined;\n    alt?: undefined;\n    icon?: undefined;\n    size: number;\n};\n\ntype IconAsset = BaseAsset & {\n    type: 'icon';\n    extension?: undefined;\n    src?: undefined;\n    alt?: undefined;\n    icon: ReactElement<IconProps>;\n    size?: undefined;\n};\n\nexport type UploadSource = { source: 'upload'; sourceName?: undefined };\nexport type LibrarySource = { source: 'library'; sourceName: string };\n\nexport enum AssetInputSize {\n    Small = 'Small',\n    Large = 'Large',\n}\n\nexport type AssetType =\n    | (ImageAsset & UploadSource)\n    | (ImageAsset & LibrarySource)\n    | (IconAsset & UploadSource)\n    | (IconAsset & LibrarySource)\n    | (OtherAsset & UploadSource)\n    | (OtherAsset & LibrarySource);\n\nexport type AssetInputProps = {\n    assets?: AssetType[];\n    size: AssetInputSize;\n    numberOfLocations?: number;\n    actions?: ActionMenuProps['menuBlocks'];\n    isLoading?: boolean;\n    hideSize?: boolean;\n    hideExtension?: boolean;\n    onUploadClick?: (files: FileList) => void;\n    onLibraryClick?: () => void;\n    onMultiAssetClick?: () => void;\n    acceptFileType?: string;\n};\n\nexport const AssetInput = ({\n    assets = [],\n    numberOfLocations = 1,\n    actions = [],\n    size = AssetInputSize.Small,\n    isLoading = false,\n    hideSize = false,\n    hideExtension = false,\n    onLibraryClick,\n    onUploadClick,\n    onMultiAssetClick,\n    acceptFileType,\n}: AssetInputProps): ReactElement => {\n    const assetsLength = assets.length;\n    const inputFile = useRef<HTMLInputElement | null>(null);\n    const id = useMemoizedId();\n\n    const onFileChange = (event: ChangeEvent<HTMLInputElement>) => {\n        const files = event.target.files;\n\n        if (files && onUploadClick) {\n            onUploadClick(files);\n        }\n    };\n\n    const onOpenFileUpload = () => {\n        if (inputFile.current) {\n            inputFile.current.click();\n        }\n    };\n\n    if ((isLoading || assetsLength === 1) && actions) {\n        return (\n            <SelectedAsset\n                asset={assets[0]}\n                size={size}\n                actions={actions}\n                isLoading={isLoading}\n                hideExtension={hideExtension}\n                hideSize={hideSize}\n            />\n        );\n    }\n\n    if (assetsLength > 1 && onMultiAssetClick) {\n        return <MultiAssetPreview assets={assets} onClick={onMultiAssetClick} numberOfLocations={numberOfLocations} />;\n    }\n\n    return (\n        <div\n            data-test-id=\"asset-input-placeholder\"\n            className={merge([\n                'tw-grid tw-p-3 tw-border tw-border-dashed tw-border-black-10 tw-rounded',\n                onUploadClick && onLibraryClick ? 'tw-grid-cols-2 tw-divide-x tw-divide-black-10' : 'tw-grid-cols-1',\n            ])}\n        >\n            {onUploadClick && (\n                <div\n                    className={merge(['tw-flex tw-flex-col tw-h-8', onLibraryClick && 'tw-pr-3'])}\n                    data-test-id=\"asset-input-upload\"\n                >\n                    <Button\n                        style={ButtonStyle.Default}\n                        onClick={onOpenFileUpload}\n                        emphasis={ButtonEmphasis.Weak}\n                        icon={<IconArrowCircleUp />}\n                    >\n                        Upload\n                    </Button>\n                    <input\n                        id={id}\n                        ref={inputFile}\n                        className=\"tw-hidden\"\n                        type=\"file\"\n                        accept={acceptFileType}\n                        multiple={!!onMultiAssetClick}\n                        onChange={onFileChange}\n                    />\n                </div>\n            )}\n            {onLibraryClick && (\n                <div\n                    className={merge(['tw-flex tw-flex-col tw-h-8', onUploadClick && 'tw-pl-3'])}\n                    data-test-id=\"asset-input-library\"\n                >\n                    <Button\n                        style={ButtonStyle.Default}\n                        onClick={onLibraryClick}\n                        emphasis={ButtonEmphasis.Weak}\n                        icon={<IconImageStack />}\n                    >\n                        Browse\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n};\nAssetInput.displayName = 'FondueAssetInput';\n"],"names":["AssetInputSize","AssetInput","assets","numberOfLocations","actions","size","isLoading","hideSize","hideExtension","onLibraryClick","onUploadClick","onMultiAssetClick","acceptFileType","assetsLength","inputFile","useRef","id","useMemoizedId","onFileChange","event","files","onOpenFileUpload","React","SelectedAsset","MultiAssetPreview","merge","Button","ButtonStyle","ButtonEmphasis","IconArrowCircleUp","IconImageStack"],"mappings":";;;;;;;;;AA+CY,IAAAA,sBAAAA,OACRA,EAAA,QAAQ,SACRA,EAAA,QAAQ,SAFAA,IAAAA,KAAA,CAAA,CAAA;AA2BL,MAAMC,IAAa,CAAC;AAAA,EACvB,QAAAC,IAAS,CAAC;AAAA,EACV,mBAAAC,IAAoB;AAAA,EACpB,SAAAC,IAAU,CAAC;AAAA,EACX,MAAAC,IAAO;AAAA,EACP,WAAAC,IAAY;AAAA,EACZ,UAAAC,IAAW;AAAA,EACX,eAAAC,IAAgB;AAAA,EAChB,gBAAAC;AAAA,EACA,eAAAC;AAAA,EACA,mBAAAC;AAAA,EACA,gBAAAC;AACJ,MAAqC;AACjC,QAAMC,IAAeX,EAAO,QACtBY,IAAYC,EAAgC,IAAI,GAChDC,IAAKC,KAELC,IAAe,CAACC,MAAyC;AACrD,UAAAC,IAAQD,EAAM,OAAO;AAE3B,IAAIC,KAASV,KACTA,EAAcU,CAAK;AAAA,EACvB,GAGEC,IAAmB,MAAM;AAC3B,IAAIP,EAAU,WACVA,EAAU,QAAQ;EACtB;AAGC,UAAAR,KAAaO,MAAiB,MAAMT,IAEjC,gBAAAkB,EAAA;AAAA,IAACC;AAAA,IAAA;AAAA,MACG,OAAOrB,EAAO,CAAC;AAAA,MACf,MAAAG;AAAA,MACA,SAAAD;AAAA,MACA,WAAAE;AAAA,MACA,eAAAE;AAAA,MACA,UAAAD;AAAA,IAAA;AAAA,EAAA,IAKRM,IAAe,KAAKF,IACZ,gBAAAW,EAAA,cAAAE,GAAA,EAAkB,QAAAtB,GAAgB,SAASS,GAAmB,mBAAAR,EAAsC,CAAA,IAI5G,gBAAAmB,EAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACG,gBAAa;AAAA,MACb,WAAWG,EAAM;AAAA,QACb;AAAA,QACAf,KAAiBD,IAAiB,kDAAkD;AAAA,MAAA,CACvF;AAAA,IAAA;AAAA,IAEAC,KACG,gBAAAY,EAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACG,WAAWG,EAAM,CAAC,8BAA8BhB,KAAkB,SAAS,CAAC;AAAA,QAC5E,gBAAa;AAAA,MAAA;AAAA,MAEb,gBAAAa,EAAA;AAAA,QAACI;AAAA,QAAA;AAAA,UACG,OAAOC,EAAY;AAAA,UACnB,SAASN;AAAA,UACT,UAAUO,EAAe;AAAA,UACzB,sCAAOC,GAAkB,IAAA;AAAA,QAAA;AAAA,QAC5B;AAAA,MAED;AAAA,MACA,gBAAAP,EAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACG,IAAAN;AAAA,UACA,KAAKF;AAAA,UACL,WAAU;AAAA,UACV,MAAK;AAAA,UACL,QAAQF;AAAA,UACR,UAAU,CAAC,CAACD;AAAA,UACZ,UAAUO;AAAA,QAAA;AAAA,MACd;AAAA,IACJ;AAAA,IAEHT,KACG,gBAAAa,EAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACG,WAAWG,EAAM,CAAC,8BAA8Bf,KAAiB,SAAS,CAAC;AAAA,QAC3E,gBAAa;AAAA,MAAA;AAAA,MAEb,gBAAAY,EAAA;AAAA,QAACI;AAAA,QAAA;AAAA,UACG,OAAOC,EAAY;AAAA,UACnB,SAASlB;AAAA,UACT,UAAUmB,EAAe;AAAA,UACzB,sCAAOE,GAAe,IAAA;AAAA,QAAA;AAAA,QACzB;AAAA,MAED;AAAA,IACJ;AAAA,EAAA;AAIhB;AACA7B,EAAW,cAAc;"}