{"version":3,"file":"Switch.es.js","sources":["../../../src/components/Switch/Switch.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport React, { MouseEvent, ReactElement, useMemo } from 'react';\nimport { merge } from '@utilities/merge';\nimport { useFocusRing } from '@react-aria/focus';\nimport { FOCUS_STYLE } from '@utilities/focusStyle';\nimport { useMemoizedId } from '@hooks/useMemoizedId';\nimport { InputLabel, InputLabelTooltipProps } from '@components/InputLabel/InputLabel';\n\nexport const SWITCH_ID = 'switch-container';\n\nexport type SwitchSize = 'small' | 'medium';\n\nexport type SwitchMode = 'on' | 'off' | 'indeterminate';\n\nexport type SwitchLabelStyle = 'default' | 'heading';\n\nconst trackSizeClasses: Record<SwitchSize, string> = {\n    small: 'tw-w-[22px] tw-h-3',\n    medium: 'tw-w-[30px] tw-h-4',\n};\n\nconst dotSizeClasses: Record<SwitchSize, Record<'dimensions' | 'activeWidth' | 'activeTranslation', string>> = {\n    small: {\n        dimensions: 'tw-w-3 tw-h-3',\n        activeWidth: 'group-active:tw-w-[14px]',\n        activeTranslation: 'tw-translate-x-[9px]',\n    },\n    medium: {\n        dimensions: 'tw-w-4 tw-h-4',\n        activeWidth: 'group-active:tw-w-[18px]',\n        activeTranslation: 'tw-translate-x-[13px]',\n    },\n};\n\nconst indeterminateLineClasses = 'tw-w-2 tw-h-[1px]';\n\nexport type SwitchProps = {\n    id?: string;\n    mode?: SwitchMode;\n    disabled?: boolean;\n    label?: string;\n    labelStyle?: string;\n    name?: string;\n    size?: SwitchSize;\n    hug?: boolean;\n    tooltip?: InputLabelTooltipProps;\n    onChange?: (e: MouseEvent) => void;\n    'data-test-id'?: string;\n};\n\nexport const Switch = ({\n    id: propId,\n    name,\n    label,\n    disabled,\n    onChange,\n    size = 'medium',\n    mode = 'off',\n    labelStyle = 'default',\n    hug = false,\n    tooltip,\n    'data-test-id': dataTestId = 'switch',\n}: SwitchProps): ReactElement => {\n    const id = useMemoizedId(propId);\n    const { isFocusVisible, focusProps } = useFocusRing();\n\n    // The track on which the dot moves\n    const trackClasses = useMemo(() => {\n        const baseClasses = 'tw-group tw-border tw-inline-flex tw-rounded-full tw-shrink-0 tw-p-0 tw-transition-colors';\n\n        const trueOrFalseValueClasses =\n            mode === 'on'\n                ? 'tw-bg-text-weak tw-border-line-xx-strong hover:tw-bg-text'\n                : 'tw-bg-box-neutral tw-border-line-x-strong hover:tw-bg-box-neutral-hover';\n\n        const valueClasses =\n            mode === 'indeterminate'\n                ? 'tw-bg-text-weak tw-flex tw-items-center tw-justify-center hover:tw-bg-text'\n                : trueOrFalseValueClasses;\n\n        const trueOrFalseDisabledClasses = disabled\n            ? 'tw-bg-box-disabled tw-border-line tw-pointer-events-none'\n            : valueClasses;\n\n        const disabledClasses =\n            disabled && mode === 'indeterminate'\n                ? 'tw-flex tw-items-center tw-justify-center tw-bg-box-disabled tw-border-line tw-pointer-events-none'\n                : trueOrFalseDisabledClasses;\n\n        return merge([baseClasses, disabledClasses, trackSizeClasses[size], isFocusVisible && FOCUS_STYLE]);\n    }, [mode, disabled, size, isFocusVisible]);\n\n    // Responsible for the left-right translation\n    const dotWrapperClasses = useMemo(() => {\n        const baseClasses = 'tw-relative tw-self-center tw-transition-transform';\n\n        const trueOrFalseValueClasses = mode === 'on' ? dotSizeClasses[size].activeTranslation : '';\n\n        const valueClasses = mode === 'indeterminate' ? 'tw-bg-base' : trueOrFalseValueClasses;\n\n        const disabledClasses = disabled && mode === 'indeterminate' ? 'tw-bg-text-disabled' : valueClasses;\n\n        return merge([\n            baseClasses,\n            mode === 'indeterminate' ? indeterminateLineClasses : dotSizeClasses[size].dimensions,\n            disabledClasses,\n        ]);\n    }, [disabled, mode, size]);\n\n    // Responsible for dot styling and width animation on hover\n    const dotClasses = useMemo(() => {\n        const baseClasses =\n            'tw-border tw-bg-base tw-rounded-full tw-absolute tw-block tw-self-center tw-transition-width tw-duration-75';\n\n        const trueOrFalseValueClasses = mode === 'on' ? 'tw-right-0  tw-translate-x-px' : 'tw-left-0';\n\n        const valueClasses = mode === 'indeterminate' ? 'tw-hidden' : trueOrFalseValueClasses;\n\n        const disabledStateClasses = disabled\n            ? 'tw-border-line-strong'\n            : merge(['tw-bg-base tw-border-line-xx-strong', dotSizeClasses[size].activeWidth]);\n\n        return merge([\n            baseClasses,\n            mode === 'indeterminate' ? indeterminateLineClasses : dotSizeClasses[size].dimensions,\n            valueClasses,\n            disabledStateClasses,\n        ]);\n    }, [mode, disabled, size]);\n\n    // Wraps the InputLabel instance and switch element\n    const containerClasses = useMemo(() => {\n        return merge(['tw-gap-2 tw-items-center tw-justify-between', hug ? 'tw-inline-flex' : 'tw-flex']);\n    }, [hug]);\n\n    return (\n        <div className={containerClasses} data-test-id={`${dataTestId}-container`}>\n            {label && (\n                <InputLabel clickable htmlFor={id} disabled={disabled} tooltip={tooltip}>\n                    <span\n                        data-test-id={`${dataTestId}-label-wrapper`}\n                        className={\n                            labelStyle === 'default' ? 'tw-font-medium tw-text-text-weak' : 'tw-font-bold tw-text-text'\n                        }\n                    >\n                        {label}\n                    </span>\n                </InputLabel>\n            )}\n            <button\n                {...focusProps}\n                id={id}\n                disabled={disabled}\n                name={name}\n                data-test-id={dataTestId}\n                className={trackClasses}\n                value={mode}\n                onClick={onChange}\n                type=\"button\"\n            >\n                <div className={dotWrapperClasses}>\n                    <div className={dotClasses} />\n                </div>\n            </button>\n        </div>\n    );\n};\nSwitch.displayName = 'FondueSwitch';\n"],"names":["SWITCH_ID","trackSizeClasses","dotSizeClasses","indeterminateLineClasses","Switch","propId","name","label","disabled","onChange","size","mode","labelStyle","hug","tooltip","dataTestId","id","useMemoizedId","isFocusVisible","focusProps","useFocusRing","trackClasses","useMemo","merge","FOCUS_STYLE","dotWrapperClasses","baseClasses","trueOrFalseValueClasses","disabledClasses","dotClasses","valueClasses","disabledStateClasses","containerClasses","React","InputLabel"],"mappings":"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"}