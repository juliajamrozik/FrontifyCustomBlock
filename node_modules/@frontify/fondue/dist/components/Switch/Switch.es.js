import a, { useMemo as i } from "react";
import { merge as n } from "../../utilities/merge.es.js";
import { useFocusRing as N } from "@react-aria/focus";
import { FOCUS_STYLE as V } from "../../utilities/focusStyle.es.js";
import { useMemoizedId as y } from "../../hooks/useMemoizedId.es.js";
import { InputLabel as W } from "../InputLabel/InputLabel.es.js";
const H = "switch-container", j = {
  small: "tw-w-[22px] tw-h-3",
  medium: "tw-w-[30px] tw-h-4"
}, o = {
  small: {
    dimensions: "tw-w-3 tw-h-3",
    activeWidth: "group-active:tw-w-[14px]",
    activeTranslation: "tw-translate-x-[9px]"
  },
  medium: {
    dimensions: "tw-w-4 tw-h-4",
    activeWidth: "group-active:tw-w-[18px]",
    activeTranslation: "tw-translate-x-[13px]"
  }
}, p = "tw-w-2 tw-h-[1px]", D = ({
  id: C,
  name: f,
  label: b,
  disabled: e,
  onChange: v,
  size: s = "medium",
  mode: t = "off",
  labelStyle: g = "default",
  hug: d = !1,
  tooltip: h,
  "data-test-id": w = "switch"
}) => {
  const m = y(C), { isFocusVisible: x, focusProps: F } = N(), k = i(() => n(["tw-group tw-border tw-inline-flex tw-rounded-full tw-shrink-0 tw-p-0 tw-transition-colors", e && t === "indeterminate" ? "tw-flex tw-items-center tw-justify-center tw-bg-box-disabled tw-border-line tw-pointer-events-none" : e ? "tw-bg-box-disabled tw-border-line tw-pointer-events-none" : t === "indeterminate" ? "tw-bg-text-weak tw-flex tw-items-center tw-justify-center hover:tw-bg-text" : t === "on" ? "tw-bg-text-weak tw-border-line-xx-strong hover:tw-bg-text" : "tw-bg-box-neutral tw-border-line-x-strong hover:tw-bg-box-neutral-hover", j[s], x && V]), [t, e, s, x]), O = i(() => {
    const r = "tw-relative tw-self-center tw-transition-transform", c = t === "on" ? o[s].activeTranslation : "", l = e && t === "indeterminate" ? "tw-bg-text-disabled" : t === "indeterminate" ? "tw-bg-base" : c;
    return n([
      r,
      t === "indeterminate" ? p : o[s].dimensions,
      l
    ]);
  }, [e, t, s]), S = i(() => {
    const r = "tw-border tw-bg-base tw-rounded-full tw-absolute tw-block tw-self-center tw-transition-width tw-duration-75", u = t === "indeterminate" ? "tw-hidden" : t === "on" ? "tw-right-0  tw-translate-x-px" : "tw-left-0", l = e ? "tw-border-line-strong" : n(["tw-bg-base tw-border-line-xx-strong", o[s].activeWidth]);
    return n([
      r,
      t === "indeterminate" ? p : o[s].dimensions,
      u,
      l
    ]);
  }, [t, e, s]), E = i(() => n(["tw-gap-2 tw-items-center tw-justify-between", d ? "tw-inline-flex" : "tw-flex"]), [d]);
  return /* @__PURE__ */ a.createElement("div", { className: E, "data-test-id": `${w}-container` }, b && /* @__PURE__ */ a.createElement(W, { clickable: !0, htmlFor: m, disabled: e, tooltip: h }, /* @__PURE__ */ a.createElement(
    "span",
    {
      "data-test-id": `${w}-label-wrapper`,
      className: g === "default" ? "tw-font-medium tw-text-text-weak" : "tw-font-bold tw-text-text"
    },
    b
  )), /* @__PURE__ */ a.createElement(
    "button",
    {
      ...F,
      id: m,
      disabled: e,
      name: f,
      "data-test-id": w,
      className: k,
      value: t,
      onClick: v,
      type: "button"
    },
    /* @__PURE__ */ a.createElement("div", { className: O }, /* @__PURE__ */ a.createElement("div", { className: S }))
  ));
};
D.displayName = "FondueSwitch";
export {
  H as SWITCH_ID,
  D as Switch
};
//# sourceMappingURL=Switch.es.js.map
