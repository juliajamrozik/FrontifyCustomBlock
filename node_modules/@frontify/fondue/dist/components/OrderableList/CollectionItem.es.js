import { useFocusRing as d } from "@react-aria/focus";
import { useId as p } from "@react-aria/utils";
import { FOCUS_STYLE as u } from "../../utilities/focusStyle.es.js";
import r from "react";
import { merge as a } from "../../utilities/merge.es.js";
import { ItemDragState as i } from "./types.es.js";
import { useDrag as f } from "react-dnd";
const D = ({
  item: t,
  renderContent: m,
  dragDisabled: o,
  listId: n
}) => {
  const { isFocusVisible: e } = d(), [{ componentDragState: l }, c] = f({
    item: { ...t },
    collect: (g) => ({
      componentDragState: g.isDragging() ? i.Dragging : i.Idle
    }),
    type: n,
    canDrag: !o
  }), s = p();
  return /* @__PURE__ */ r.createElement(
    "div",
    {
      ref: c,
      className: a(["tw-relative tw-outline-none", e ? "tw-z-30" : "tw-z-0"]),
      "aria-labelledby": s,
      "data-test-id": "draggable-item",
      "aria-disabled": o
    },
    /* @__PURE__ */ r.createElement("div", { className: a(["tw-outline-none", e && u]) }, m(t, { componentDragState: l, isFocusVisible: e }))
  );
};
D.displayName = "FondueCollectionItem";
export {
  D as CollectionItem
};
//# sourceMappingURL=CollectionItem.es.js.map
