import t, { cloneElement as a } from "react";
import { IconSize as l } from "../../foundation/Icon/IconSize.es.js";
import { Tooltip as m } from "../Tooltip/Tooltip.es.js";
import { FOCUS_VISIBLE_STYLE as s } from "../../utilities/focusStyle.es.js";
import { merge as w } from "../../utilities/merge.es.js";
import c from "../../foundation/Icon/Generated/IconQuestionMarkCircle.es.js";
var u = /* @__PURE__ */ ((e) => (e.Danger = "Danger", e.Warning = "Warning", e.Primary = "Primary", e))(u || {});
const v = {
  Danger: "tw-text-box-negative-inverse",
  Warning: "tw-text-box-warning-inverse",
  Primary: "tw-text-text-weak"
}, x = {
  Danger: "hover:tw-text-box-negative-inverse-hover hover:tw-bg-box-neutral",
  Warning: "hover:tw-text-box-warning-inverse-hover hover:tw-bg-box-neutral",
  Primary: "hover:tw-text-text hover:tw-bg-box-neutral"
}, g = ({
  tooltip: e,
  iconSize: o = l.Size16,
  triggerIcon: i = /* @__PURE__ */ t.createElement(c, null),
  triggerStyle: r = "Primary",
  "data-test-id": n = "tooltip-icon"
}) => /* @__PURE__ */ t.createElement("div", { "data-test-id": n }, e && /* @__PURE__ */ t.createElement("div", null, /* @__PURE__ */ t.createElement(
  m,
  {
    triggerElement: /* @__PURE__ */ t.createElement(
      "button",
      {
        type: "button",
        "aria-label": "More info",
        "data-test-id": `${n}-trigger`,
        className: w([
          "tw-inline-flex tw-justify-center tw-items-center tw-cursor-default tw-outline-none tw-rounded-full",
          s,
          v[r],
          x[r]
        ])
      },
      a(i, { size: o })
    ),
    withArrow: !0,
    ...e
  }
)));
g.displayName = "FondueTooltipIcon";
export {
  g as TooltipIcon,
  u as TooltipIconTriggerStyle
};
//# sourceMappingURL=TooltipIcon.es.js.map
