import { useMemoizedId as h } from "../../hooks/useMemoizedId.es.js";
import { useFocusRing as z } from "@react-aria/focus";
import { mergeProps as C } from "@react-aria/utils";
import { FOCUS_STYLE as F } from "../../utilities/focusStyle.es.js";
import { merge as c } from "../../utilities/merge.es.js";
import { validationClassMap as L, Validation as e } from "../../utilities/validation.es.js";
import r from "react";
import S from "react-textarea-autosize";
import I from "../../foundation/Icon/Generated/IconExclamationMarkTriangle.es.js";
import { LoadingCircle as M, LoadingCircleSize as P } from "../LoadingCircle/LoadingCircle.es.js";
const v = ({
  id: p,
  value: u,
  required: d = !1,
  decorator: o,
  placeholder: f,
  disabled: l = !1,
  onInput: s,
  onBlur: m,
  validation: t = e.Default,
  minRows: i,
  maxRows: b,
  autosize: n = !1,
  resizeable: x = !0,
  onFocus: w,
  selectable: g = !1
}) => {
  const E = n ? S : "textarea", { isFocusVisible: k, focusProps: N } = z({ isTextInput: !0 }), T = { maxRows: b, minRows: i };
  return /* @__PURE__ */ r.createElement("div", { className: "tw-relative" }, o && /* @__PURE__ */ r.createElement(
    "div",
    {
      className: "tw-absolute tw-top-2 tw-left-2 tw-inline-flex tw-items-end tw-text-black-80",
      "data-test-id": "decorator"
    },
    o
  ), /* @__PURE__ */ r.createElement(
    E,
    {
      ...C(N, {
        onBlur: (a) => m && m(a.target.value),
        onInput: (a) => s && s(a.target.value)
      }),
      ...n ? T : { rows: i },
      id: h(p),
      value: u,
      placeholder: f,
      required: d,
      className: c([
        "tw-w-full tw-p-2 tw-border tw-rounded tw-text-s tw-outline-none tw-transition tw-placeholder-black-60",
        !!o && "tw-pl-7 ",
        l ? "tw-border-black-5 tw-bg-black-5 tw-text-black-40" : "tw-text-black tw-border-black-20 hover:tw-border-black-90",
        k && F,
        L[t],
        !x && "tw-resize-none",
        t === e.Error && "tw-pr-8"
      ]),
      disabled: l,
      onFocus: (a) => {
        g && a.target.select(), w && w(a);
      },
      "data-test-id": "textarea"
    }
  ), t === e.Loading && /* @__PURE__ */ r.createElement("span", { className: "tw-absolute tw-top-[-0.55rem] tw-right-[-0.55rem] tw-bg-white tw-rounded-full tw-p-[2px] tw-border tw-border-black-10" }, /* @__PURE__ */ r.createElement(M, { size: P.ExtraSmall })), (t === e.Error || t === e.Warning) && /* @__PURE__ */ r.createElement(
    "span",
    {
      className: c([
        "tw-absolute tw-top-[0.6rem] tw-right-[0.6rem]",
        t === e.Error && "tw-text-text-negative",
        t === e.Warning && "tw-text-text-warning"
      ]),
      "data-test-id": "error-state-exclamation-mark-icon"
    },
    /* @__PURE__ */ r.createElement(I, null)
  ));
};
v.displayName = "FondueTextarea";
export {
  v as Textarea
};
//# sourceMappingURL=Textarea.es.js.map
