{"version":3,"file":"isPlateValueEmpty.es.js","sources":["../../../../src/components/RichTextEditor/utils/isPlateValueEmpty.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { TNode } from '@udecode/plate';\nimport { TreeOfNodes } from '../types';\n\ntype TextNode = { [key: string]: string };\n\nconst hasPropertyType = (node: TNode) =>\n    node.hasOwnProperty('type') && typeof node.type === 'string' && node.type.length > 0;\n\nconst hasOneChild = (node: TNode) =>\n    node.hasOwnProperty('children') && Array.isArray(node.children) && node.children.length === 1;\n\nconst isChildTextEmpty = (node: TextNode) =>\n    typeof node === 'object' && node.hasOwnProperty('text') && typeof node.text === 'string' && node.text.length === 0;\n\nconst hasPropertyChildren = (node: TNode) => hasOneChild(node) && isChildTextEmpty((node.children as TextNode[])[0]);\n\nexport const isPlateValueEmpty = (value: TreeOfNodes | null) => {\n    if (!value) {\n        return true;\n    }\n\n    if (Array.isArray(value) && value.length < 2) {\n        if (value.length === 0) {\n            return true;\n        }\n\n        const node = value[0];\n        if (hasPropertyType(node) && hasPropertyChildren(node)) {\n            return true;\n        }\n    }\n\n    return false;\n};\n"],"names":["hasPropertyType","node","hasOneChild","isChildTextEmpty","hasPropertyChildren","isPlateValueEmpty","value"],"mappings":"AAOA,MAAMA,IAAkB,CAACC,MACrBA,EAAK,eAAe,MAAM,KAAK,OAAOA,EAAK,QAAS,YAAYA,EAAK,KAAK,SAAS,GAEjFC,IAAc,CAACD,MACjBA,EAAK,eAAe,UAAU,KAAK,MAAM,QAAQA,EAAK,QAAQ,KAAKA,EAAK,SAAS,WAAW,GAE1FE,IAAmB,CAACF,MACtB,OAAOA,KAAS,YAAYA,EAAK,eAAe,MAAM,KAAK,OAAOA,EAAK,QAAS,YAAYA,EAAK,KAAK,WAAW,GAE/GG,IAAsB,CAACH,MAAgBC,EAAYD,CAAI,KAAKE,EAAkBF,EAAK,SAAwB,CAAC,CAAC,GAEtGI,IAAoB,CAACC,MAA8B;AAC5D,MAAI,CAACA;AACM,WAAA;AAGX,MAAI,MAAM,QAAQA,CAAK,KAAKA,EAAM,SAAS,GAAG;AACtC,QAAAA,EAAM,WAAW;AACV,aAAA;AAGL,UAAAL,IAAOK,EAAM,CAAC;AACpB,QAAIN,EAAgBC,CAAI,KAAKG,EAAoBH,CAAI;AAC1C,aAAA;AAAA,EAEf;AAEO,SAAA;AACX;"}