var a = Object.defineProperty;
var c = (r, t, i) => t in r ? a(r, t, { enumerable: !0, configurable: !0, writable: !0, value: i }) : r[t] = i;
var e = (r, t, i) => (c(r, typeof t != "symbol" ? t + "" : t, i), i);
import { createPlateEditor as d } from "@udecode/plate";
import { generateRandomId as o } from "../../../utilities/generateRandomId.es.js";
import { defaultPlugins as m } from "../Plugins/index.es.js";
import { GeneratePlugins as f } from "../Plugins/GeneratePlugins.es.js";
class s {
  static getInstance() {
    return this.editor === void 0 && this.init(), this.editor;
  }
  static init(t = o(), i = m) {
    const n = f(t, i);
    return this.editor = d({ id: t, plugins: n.create() }), this;
  }
}
e(s, "editor"), e(s, "editorId", o());
export {
  s as InitPlateEditor
};
//# sourceMappingURL=InitPlateEditor.es.js.map
