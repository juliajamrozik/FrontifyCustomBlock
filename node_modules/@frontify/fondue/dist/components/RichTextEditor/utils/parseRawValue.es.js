import { ELEMENT_PARAGRAPH as i, deserializeHtml as l, normalizeEditor as s } from "@udecode/plate";
import { InitPlateEditor as c } from "./InitPlateEditor.es.js";
const m = (e) => e[0].hasOwnProperty("type") ? e : [
  {
    type: "p",
    children: e
  }
], d = [{ type: i, children: [{ text: "" }] }], h = ({ editorId: e = "parseRawValue", raw: a, plugins: n }) => {
  const t = c.init(`${e}_parseRawValue`, n).getInstance();
  let r = d;
  if (!a)
    return r;
  try {
    r = JSON.parse(a);
  } catch {
    const o = a.trim().replaceAll(/>\s+</g, "><"), p = l(t, {
      element: o
    });
    r = m(p);
  }
  return t.children = r, s(t, { force: !0 }), t.children;
};
export {
  d as EMPTY_RICH_TEXT_VALUE,
  h as parseRawValue
};
//# sourceMappingURL=parseRawValue.es.js.map
