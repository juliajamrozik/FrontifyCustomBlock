import { useMemoizedId as A } from "../../hooks/useMemoizedId.es.js";
import t from "react";
import { Plate as I } from "@udecode/plate";
import { ContentReplacement as w } from "./ContentReplacement.es.js";
import { RichTextEditorProvider as C } from "./context/RichTextEditorContext.es.js";
import { defaultPlugins as G } from "./Plugins/index.es.js";
import { PaddingSizes as K } from "./types.es.js";
import { BlurObserver as z } from "./BlurObserver.es.js";
import { useEditorState as D } from "./hooks/useEditorState.es.js";
import { KEY_ELEMENT_BREAK_AFTER_COLUMN as M, GAP_DEFAULT as v } from "./Plugins/ColumnBreakPlugin/createColumnBreakPlugin.es.js";
import { Position as E } from "./EditorPositioningWrapper/types.es.js";
import { forceToFocusNextElement as B } from "./helpers/forceToFocusElement.es.js";
import { parseRawValue as U } from "./utils/parseRawValue.es.js";
const Y = {
  position: "relative",
  height: "0"
}, b = ({
  id: f,
  value: l,
  placeholder: u = "",
  readonly: y = !1,
  onTextChange: T,
  onBlur: m,
  padding: N = K.None,
  position: s = E.FLOATING,
  plugins: n = G,
  updateValueOnChange: R = !1,
  onValueChanged: h,
  border: L = !0,
  toolbarWidth: O,
  hideExternalFloatingModals: F
}) => {
  var c, d;
  const r = A(f), { localValue: P, onChange: S, memoizedValue: V, config: i } = D({
    editorId: r,
    initialValue: l,
    onTextChange: T,
    plugins: n,
    onValueChanged: h
  }), o = n.plugins.find((e) => e.key === M), _ = ((c = o == null ? void 0 : o.options) == null ? void 0 : c.columns) ?? 1, g = ((d = o == null ? void 0 : o.options) == null ? void 0 : d.gap) ?? v, a = {
    placeholder: u,
    renderPlaceholder: ({ children: e, attributes: p }) => {
      const x = {
        ...p,
        style: {
          ...p.style,
          ...Y
        }
      };
      return /* @__PURE__ */ t.createElement("span", { ...x }, e);
    },
    readOnly: y,
    onBlur: () => m && m(JSON.stringify(P.current)),
    className: `${N}`,
    style: {
      columns: _,
      columnGap: g,
      outline: "none"
    },
    onKeyDown: (e) => {
      e.code === "Tab" && B(e, !e.shiftKey);
    },
    scrollSelectionIntoView: () => {
    }
  };
  return /* @__PURE__ */ t.createElement(
    C,
    {
      value: {
        styles: i.styles(),
        position: s,
        border: L,
        editorId: r
      }
    },
    /* @__PURE__ */ t.createElement(
      I,
      {
        id: r,
        onChange: S,
        editableProps: a,
        plugins: i.create(),
        initialValue: V
      },
      !a.readOnly && i.toolbar(O),
      i.inline(),
      R && /* @__PURE__ */ t.createElement(w, { value: U({ editorId: r, raw: l, plugins: n }) }),
      s === E.FLOATING && /* @__PURE__ */ t.createElement(z, { hideExternalFloatingModals: F })
    )
  );
};
b.displayName = "FondueRichTextEditor";
export {
  b as RichTextEditor
};
//# sourceMappingURL=RichTextEditor.es.js.map
