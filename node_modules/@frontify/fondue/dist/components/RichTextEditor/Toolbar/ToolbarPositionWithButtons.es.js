var l = Object.defineProperty;
var p = (n, t, o) => t in n ? l(n, t, { enumerable: !0, configurable: !0, writable: !0, value: o }) : n[t] = o;
var f = (n, t, o) => (p(n, typeof t != "symbol" ? t + "" : t, o), o);
import { Position as s } from "../EditorPositioningWrapper/types.es.js";
class a {
  constructor() {
    f(this, "toolbarButtons", {
      [s.BOTTOM]: [],
      [s.FLOATING]: [],
      [s.TOP]: []
    });
  }
  createGroupOfButtons(t) {
    const o = [], u = [], i = [];
    for (const { markupElement: r, button: B, id: T, showIn: O } of t) {
      if (!B)
        continue;
      const h = {
        id: (r == null ? void 0 : r.getId()) || T,
        button: B
      };
      O.includes(s.BOTTOM) && o.push(h), O.includes(s.TOP) && u.push(h), O.includes(s.FLOATING) && i.push(h);
    }
    o.length > 0 && this.toolbarButtons[s.BOTTOM].push(o), u.length > 0 && this.toolbarButtons[s.TOP].push(u), i.length > 0 && this.toolbarButtons[s.FLOATING].push(i);
  }
  at(t) {
    return this.toolbarButtons[t];
  }
}
export {
  a as ToolbarPositionWithButtons
};
//# sourceMappingURL=ToolbarPositionWithButtons.es.js.map
