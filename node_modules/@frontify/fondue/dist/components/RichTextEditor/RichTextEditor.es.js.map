{"version":3,"file":"RichTextEditor.es.js","sources":["../../../src/components/RichTextEditor/RichTextEditor.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { useMemoizedId } from '@hooks/useMemoizedId';\nimport React from 'react';\nimport { Plate, TEditableProps } from '@udecode/plate';\nimport { RenderPlaceholderProps } from 'slate-react';\nimport { ContentReplacement } from './ContentReplacement';\nimport { RichTextEditorProvider } from './context/RichTextEditorContext';\nimport { Position } from './EditorPositioningWrapper';\nimport { forceToFocusNextElement } from './helpers';\nimport { useEditorState } from './hooks';\nimport { GAP_DEFAULT, KEY_ELEMENT_BREAK_AFTER_COLUMN, PluginComposer, defaultPlugins } from './Plugins';\nimport { PaddingSizes, TreeOfNodes } from './types';\nimport { parseRawValue } from './utils';\nimport { BlurObserver } from '@components/RichTextEditor/BlurObserver';\n\nconst PLACEHOLDER_STYLES: RenderPlaceholderProps['attributes']['style'] = {\n    position: 'relative',\n    height: '0',\n};\n\nexport type RichTextEditorProps = {\n    id?: string;\n    placeholder?: string;\n    value?: string;\n    onTextChange?: (value: string) => void;\n    onBlur?: (value: string) => void;\n    readonly?: boolean;\n    padding?: PaddingSizes;\n    position?: Position;\n    plugins?: PluginComposer;\n    onValueChanged?: (value: TreeOfNodes | null) => void;\n    border?: boolean;\n    updateValueOnChange?: boolean; // Only set to true when you are sure that performance isn't an issue\n    toolbarWidth?: number;\n    hideExternalFloatingModals?: (editorId: string) => void;\n};\n\nexport const RichTextEditor = ({\n    id,\n    value,\n    placeholder = '',\n    readonly = false,\n    onTextChange,\n    onBlur,\n    padding = PaddingSizes.None,\n    position = Position.FLOATING,\n    plugins = defaultPlugins,\n    updateValueOnChange = false,\n    onValueChanged,\n    border = true,\n    toolbarWidth,\n    hideExternalFloatingModals,\n}: RichTextEditorProps) => {\n    const editorId = useMemoizedId(id);\n    const { localValue, onChange, memoizedValue, config } = useEditorState({\n        editorId,\n        initialValue: value,\n        onTextChange,\n        plugins,\n        onValueChanged,\n    });\n\n    const breakAfterPlugin = plugins.plugins.find((plugin) => plugin.key === KEY_ELEMENT_BREAK_AFTER_COLUMN);\n    const columns = breakAfterPlugin?.options?.columns ?? 1;\n    const columnGap = breakAfterPlugin?.options?.gap ?? GAP_DEFAULT;\n\n    const editableProps: TEditableProps = {\n        placeholder,\n        renderPlaceholder: ({ children, attributes }) => {\n            const mergedAttributes = {\n                ...attributes,\n                style: {\n                    ...attributes.style,\n                    ...PLACEHOLDER_STYLES,\n                },\n            };\n            return <span {...mergedAttributes}>{children}</span>;\n        },\n        readOnly: readonly,\n        onBlur: () => onBlur && onBlur(JSON.stringify(localValue.current)),\n        className: `${padding}`,\n        style: {\n            columns,\n            columnGap,\n            outline: 'none',\n        },\n        onKeyDown: (event) => {\n            if (event.code === 'Tab') {\n                forceToFocusNextElement(event, !event.shiftKey);\n            }\n        },\n        scrollSelectionIntoView: () => {\n            // We pass in an empty function here because we don't want the default scroll behaviour\n        },\n    };\n\n    return (\n        <RichTextEditorProvider\n            value={{\n                styles: config.styles(),\n                position,\n                border,\n                editorId,\n            }}\n        >\n            <Plate\n                id={editorId}\n                onChange={onChange}\n                editableProps={editableProps}\n                plugins={config.create()}\n                initialValue={memoizedValue}\n            >\n                {!editableProps.readOnly && config.toolbar(toolbarWidth)}\n                {config.inline()}\n                {updateValueOnChange && <ContentReplacement value={parseRawValue({ editorId, raw: value, plugins })} />}\n                {position === Position.FLOATING && (\n                    <BlurObserver hideExternalFloatingModals={hideExternalFloatingModals} />\n                )}\n            </Plate>\n        </RichTextEditorProvider>\n    );\n};\nRichTextEditor.displayName = 'FondueRichTextEditor';\n"],"names":["PLACEHOLDER_STYLES","RichTextEditor","id","value","placeholder","readonly","onTextChange","onBlur","padding","PaddingSizes","position","Position","plugins","defaultPlugins","updateValueOnChange","onValueChanged","border","toolbarWidth","hideExternalFloatingModals","editorId","useMemoizedId","localValue","onChange","memoizedValue","config","useEditorState","breakAfterPlugin","plugin","KEY_ELEMENT_BREAK_AFTER_COLUMN","columns","_a","columnGap","_b","GAP_DEFAULT","editableProps","children","attributes","mergedAttributes","React","event","forceToFocusNextElement","RichTextEditorProvider","Plate","ContentReplacement","parseRawValue","BlurObserver"],"mappings":";;;;;;;;;;;;;AAgBA,MAAMA,IAAoE;AAAA,EACtE,UAAU;AAAA,EACV,QAAQ;AACZ,GAmBaC,IAAiB,CAAC;AAAA,EAC3B,IAAAC;AAAA,EACA,OAAAC;AAAA,EACA,aAAAC,IAAc;AAAA,EACd,UAAAC,IAAW;AAAA,EACX,cAAAC;AAAA,EACA,QAAAC;AAAA,EACA,SAAAC,IAAUC,EAAa;AAAA,EACvB,UAAAC,IAAWC,EAAS;AAAA,EACpB,SAAAC,IAAUC;AAAA,EACV,qBAAAC,IAAsB;AAAA,EACtB,gBAAAC;AAAA,EACA,QAAAC,IAAS;AAAA,EACT,cAAAC;AAAA,EACA,4BAAAC;AACJ,MAA2B;;AACjB,QAAAC,IAAWC,EAAclB,CAAE,GAC3B,EAAE,YAAAmB,GAAY,UAAAC,GAAU,eAAAC,GAAe,QAAAC,EAAA,IAAWC,EAAe;AAAA,IACnE,UAAAN;AAAA,IACA,cAAchB;AAAA,IACd,cAAAG;AAAA,IACA,SAAAM;AAAA,IACA,gBAAAG;AAAA,EAAA,CACH,GAEKW,IAAmBd,EAAQ,QAAQ,KAAK,CAACe,MAAWA,EAAO,QAAQC,CAA8B,GACjGC,MAAUC,IAAAJ,KAAA,gBAAAA,EAAkB,YAAlB,gBAAAI,EAA2B,YAAW,GAChDC,MAAYC,IAAAN,KAAA,gBAAAA,EAAkB,YAAlB,gBAAAM,EAA2B,QAAOC,GAE9CC,IAAgC;AAAA,IAClC,aAAA9B;AAAA,IACA,mBAAmB,CAAC,EAAE,UAAA+B,GAAU,YAAAC,QAAiB;AAC7C,YAAMC,IAAmB;AAAA,QACrB,GAAGD;AAAA,QACH,OAAO;AAAA,UACH,GAAGA,EAAW;AAAA,UACd,GAAGpC;AAAA,QACP;AAAA,MAAA;AAEJ,aAAQ,gBAAAsC,EAAA,cAAA,QAAA,EAAM,GAAGD,EAAA,GAAmBF,CAAS;AAAA,IACjD;AAAA,IACA,UAAU9B;AAAA,IACV,QAAQ,MAAME,KAAUA,EAAO,KAAK,UAAUc,EAAW,OAAO,CAAC;AAAA,IACjE,WAAW,GAAGb;AAAA,IACd,OAAO;AAAA,MACH,SAAAqB;AAAA,MACA,WAAAE;AAAA,MACA,SAAS;AAAA,IACb;AAAA,IACA,WAAW,CAACQ,MAAU;AACd,MAAAA,EAAM,SAAS,SACSC,EAAAD,GAAO,CAACA,EAAM,QAAQ;AAAA,IAEtD;AAAA,IACA,yBAAyB,MAAM;AAAA,IAE/B;AAAA,EAAA;AAIA,SAAA,gBAAAD,EAAA;AAAA,IAACG;AAAA,IAAA;AAAA,MACG,OAAO;AAAA,QACH,QAAQjB,EAAO,OAAO;AAAA,QACtB,UAAAd;AAAA,QACA,QAAAM;AAAA,QACA,UAAAG;AAAA,MACJ;AAAA,IAAA;AAAA,IAEA,gBAAAmB,EAAA;AAAA,MAACI;AAAA,MAAA;AAAA,QACG,IAAIvB;AAAA,QACJ,UAAAG;AAAA,QACA,eAAAY;AAAA,QACA,SAASV,EAAO,OAAO;AAAA,QACvB,cAAcD;AAAA,MAAA;AAAA,MAEb,CAACW,EAAc,YAAYV,EAAO,QAAQP,CAAY;AAAA,MACtDO,EAAO,OAAO;AAAA,MACdV,KAAwB,gBAAAwB,EAAA,cAAAK,GAAA,EAAmB,OAAOC,EAAc,EAAE,UAAAzB,GAAU,KAAKhB,GAAO,SAAAS,EAAQ,CAAC,EAAG,CAAA;AAAA,MACpGF,MAAaC,EAAS,YACnB,gBAAA2B,EAAA,cAACO,KAAa,4BAAA3B,GAAwD;AAAA,IAE9E;AAAA,EAAA;AAGZ;AACAjB,EAAe,cAAc;"}