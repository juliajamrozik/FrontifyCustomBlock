import { getTooltip as i } from "../../../helpers/getTooltip.es.js";
import { usePlateEditorState as C, useEventPlateId as f, someNode as p, ToolbarButton as B } from "@udecode/plate";
import b from "react";
import { getButtonClassNames as k } from "../../helper.es.js";
import { toggleColumnBreak as g } from "../onKeyDownColumnBreak.es.js";
import { getColumnBreakCount as A } from "../utils/getColumnBreakCount.es.js";
const x = ({ id: t, ...e }) => {
  var a, l;
  const o = C(f(t)), m = !!(o != null && o.selection) && p(o, { match: (n) => !!n.breakAfterColumn }), u = (l = (a = o == null ? void 0 : o.pluginsByKey.breakAfterColumn) == null ? void 0 : a.options) == null ? void 0 : l.columns, r = Number(u) || 1, s = N(o, r, m), c = k(s);
  return /* @__PURE__ */ b.createElement(
    B,
    {
      active: m,
      tooltip: i(
        s ? `Column Break
Shift+Ctrl+Return` : "Already at maximum numbers of columns"
      ),
      onMouseDown: (n) => g(o, r, n),
      ...e,
      classNames: c
    }
  );
}, N = (t, e, o) => A(t) + 1 < e || o;
export {
  x as ColumnBreakToolbarButton,
  N as isColumnBreakEnabled
};
//# sourceMappingURL=ColumnBreakToolbarButton.es.js.map
