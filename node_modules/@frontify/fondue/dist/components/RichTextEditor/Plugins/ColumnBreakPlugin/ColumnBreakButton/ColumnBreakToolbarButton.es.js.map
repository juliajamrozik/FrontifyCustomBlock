{"version":3,"file":"ColumnBreakToolbarButton.es.js","sources":["../../../../../../src/components/RichTextEditor/Plugins/ColumnBreakPlugin/ColumnBreakButton/ColumnBreakToolbarButton.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { getTooltip } from '@components/RichTextEditor/helpers/getTooltip';\nimport {\n    PlateEditor,\n    ToolbarButton,\n    ToolbarButtonProps,\n    someNode,\n    useEventPlateId,\n    usePlateEditorState,\n} from '@udecode/plate';\nimport React from 'react';\nimport { getButtonClassNames } from '../../helper';\nimport { toggleColumnBreak } from '../onKeyDownColumnBreak';\nimport { getColumnBreakCount } from '../utils/getColumnBreakCount';\n\nexport const ColumnBreakToolbarButton = ({ id, ...props }: ToolbarButtonProps) => {\n    const editor = usePlateEditorState(useEventPlateId(id));\n    const isActive = !!editor?.selection && someNode(editor, { match: (node) => !!node.breakAfterColumn });\n\n    const columns = (editor?.pluginsByKey['breakAfterColumn'] as any)?.options?.columns;\n\n    const columnCount = Number(columns) || 1;\n    const canBreakAfter = isColumnBreakEnabled(editor, columnCount, isActive);\n    const buttonClassNames = getButtonClassNames(canBreakAfter);\n\n    return (\n        <ToolbarButton\n            active={isActive}\n            tooltip={getTooltip(\n                canBreakAfter ? 'Column Break\\nShift+Ctrl+Return' : 'Already at maximum numbers of columns',\n            )}\n            onMouseDown={(event) => toggleColumnBreak(editor, columnCount, event)}\n            {...props}\n            classNames={buttonClassNames}\n        />\n    );\n};\n\nexport const isColumnBreakEnabled = (editor: PlateEditor, columnCount: number, isButtonActive: boolean): boolean =>\n    getColumnBreakCount(editor) + 1 < columnCount || isButtonActive;\n"],"names":["ColumnBreakToolbarButton","id","props","editor","usePlateEditorState","useEventPlateId","isActive","someNode","node","columns","_b","_a","columnCount","canBreakAfter","isColumnBreakEnabled","buttonClassNames","getButtonClassNames","React","ToolbarButton","getTooltip","event","toggleColumnBreak","isButtonActive","getColumnBreakCount"],"mappings":";;;;;;AAgBO,MAAMA,IAA2B,CAAC,EAAE,IAAAC,GAAI,GAAGC,QAAgC;;AAC9E,QAAMC,IAASC,EAAoBC,EAAgBJ,CAAE,CAAC,GAChDK,IAAW,CAAC,EAACH,KAAA,QAAAA,EAAQ,cAAaI,EAASJ,GAAQ,EAAE,OAAO,CAACK,MAAS,CAAC,CAACA,EAAK,iBAAkB,CAAA,GAE/FC,KAAWC,KAAAC,IAAAR,KAAA,gBAAAA,EAAQ,aAAa,qBAArB,gBAAAQ,EAAkD,YAAlD,gBAAAD,EAA2D,SAEtEE,IAAc,OAAOH,CAAO,KAAK,GACjCI,IAAgBC,EAAqBX,GAAQS,GAAaN,CAAQ,GAClES,IAAmBC,EAAoBH,CAAa;AAGtD,SAAA,gBAAAI,EAAA;AAAA,IAACC;AAAA,IAAA;AAAA,MACG,QAAQZ;AAAA,MACR,SAASa;AAAA,QACLN,IAAgB;AAAA,qBAAoC;AAAA,MACxD;AAAA,MACA,aAAa,CAACO,MAAUC,EAAkBlB,GAAQS,GAAaQ,CAAK;AAAA,MACnE,GAAGlB;AAAA,MACJ,YAAYa;AAAA,IAAA;AAAA,EAAA;AAGxB,GAEaD,IAAuB,CAACX,GAAqBS,GAAqBU,MAC3EC,EAAoBpB,CAAM,IAAI,IAAIS,KAAeU;"}