var r = Object.defineProperty;
var u = (e, t, n) => t in e ? r(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n;
var o = (e, t, n) => (u(e, typeof t != "symbol" ? t + "" : t, n), n);
import { createPluginFactory as l } from "@udecode/plate";
import { Plugin as m } from "../Plugin.es.js";
import { ColumnBreakButton as a } from "./ColumnBreakButton/index.es.js";
import { onKeyDownColumnBreak as i } from "./onKeyDownColumnBreak.es.js";
import { useColumnBreakHandler as c } from "./useColumnBreakHandler.es.js";
const s = "breakAfterColumn", g = "normal";
class y extends m {
  constructor(n) {
    super("break-after-plugin", {
      button: a,
      ...n
    });
    o(this, "columns");
    o(this, "gap");
    this.columns = (n == null ? void 0 : n.columns) ?? 1, this.gap = (n == null ? void 0 : n.gap) ?? g;
  }
  plugins() {
    return [k(this.columns, this.gap)];
  }
}
const k = (e, t) => l({
  key: s,
  handlers: {
    onKeyDown: i
  },
  useHooks: c,
  options: {
    columns: e,
    gap: t,
    hotkey: ["shift+ctrl+enter"]
  }
})();
export {
  y as BreakAfterPlugin,
  g as GAP_DEFAULT,
  s as KEY_ELEMENT_BREAK_AFTER_COLUMN,
  k as createColumnBreakPlugin
};
//# sourceMappingURL=createColumnBreakPlugin.es.js.map
