var m = Object.defineProperty;
var l = (i, t, r) => t in i ? m(i, t, { enumerable: !0, configurable: !0, writable: !0, value: r }) : i[t] = r;
var e = (i, t, r) => (l(i, typeof t != "symbol" ? t + "" : t, r), r);
import { isValidUrl as s } from "../../utils/isValidUrl.es.js";
import { createPluginFactory as a, createLinkPlugin as u } from "@udecode/plate";
import { Plugin as p } from "../Plugin.es.js";
import { CustomFloatingLink as k } from "./FloatingLink/CustomFloatingLink.es.js";
import { LINK_PLUGIN as n } from "./id.es.js";
import { LinkButton as c } from "./LinkButton.es.js";
import { LinkMarkupElement as g } from "./LinkMarkupElement/index.es.js";
import { defaultStyles as f } from "../../utils/defaultStyles.es.js";
const L = a({
  ...u(),
  renderAfterEditable: k,
  options: {
    isUrl: s,
    rangeBeforeOptions: {
      matchString: " ",
      skipInvalid: !0,
      afterMatch: !0
    },
    triggerFloatingLinkHotkeys: "command+k, ctrl+k"
  }
});
class x extends p {
  constructor({ styles: r = f[n], ...o } = {}) {
    super(n, {
      button: c,
      markupElement: new g(),
      ...o
    });
    e(this, "styles", {});
    this.styles = r;
  }
  plugins() {
    return [L()];
  }
}
export {
  x as LinkPlugin,
  L as createLinkPlugin
};
//# sourceMappingURL=index.es.js.map
