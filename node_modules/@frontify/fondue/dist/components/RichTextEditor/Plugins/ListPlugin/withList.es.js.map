{"version":3,"file":"withList.es.js","sources":["../../../../../src/components/RichTextEditor/Plugins/ListPlugin/withList.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport {\n    PlateEditor,\n    Value,\n    WithPlatePlugin,\n    deleteBackwardList,\n    deleteForwardList,\n    deleteFragmentList,\n    insertBreakList,\n    insertFragmentList,\n    normalizeList,\n} from '@udecode/plate';\nimport { WithListPlugin } from './types';\n\nexport const withList = <V extends Value = Value, E extends PlateEditor<V> = PlateEditor<V>>(\n    editor: E,\n    { options: { validLiChildrenTypes, isSoftBreak } }: WithPlatePlugin<WithListPlugin, V, E>,\n) => {\n    const { insertBreak, deleteBackward, deleteForward, deleteFragment } = editor;\n\n    if (isSoftBreak) {\n        editor.insertSoftBreak = () => {\n            if (insertBreakList(editor)) {\n                return;\n            }\n\n            insertBreak();\n        };\n    } else {\n        editor.insertBreak = () => {\n            if (insertBreakList(editor)) {\n                return;\n            }\n\n            insertBreak();\n        };\n    }\n\n    editor.deleteBackward = (unit) => {\n        if (deleteBackwardList(editor, unit)) {\n            return;\n        }\n\n        deleteBackward(unit);\n    };\n\n    editor.deleteForward = (unit) => {\n        if (deleteForwardList(editor)) {\n            return;\n        }\n\n        deleteForward(unit);\n    };\n\n    editor.deleteFragment = (direction) => {\n        if (deleteFragmentList(editor)) {\n            return;\n        }\n\n        deleteFragment(direction);\n    };\n\n    editor.insertFragment = insertFragmentList(editor);\n\n    editor.normalizeNode = normalizeList(editor, { validLiChildrenTypes });\n\n    return editor;\n};\n"],"names":["withList","editor","validLiChildrenTypes","isSoftBreak","insertBreak","deleteBackward","deleteForward","deleteFragment","insertBreakList","unit","deleteBackwardList","deleteForwardList","direction","deleteFragmentList","insertFragmentList","normalizeList"],"mappings":";AAea,MAAAA,IAAW,CACpBC,GACA,EAAE,SAAS,EAAE,sBAAAC,GAAsB,aAAAC,EAAY,QAC9C;AACD,QAAM,EAAE,aAAAC,GAAa,gBAAAC,GAAgB,eAAAC,GAAe,gBAAAC,MAAmBN;AAEvE,SAAIE,IACAF,EAAO,kBAAkB,MAAM;AACvB,IAAAO,EAAgBP,CAAM,KAIdG;EAAA,IAGhBH,EAAO,cAAc,MAAM;AACnB,IAAAO,EAAgBP,CAAM,KAIdG;EAAA,GAIbH,EAAA,iBAAiB,CAACQ,MAAS;AAC1B,IAAAC,EAAmBT,GAAQQ,CAAI,KAInCJ,EAAeI,CAAI;AAAA,EAAA,GAGhBR,EAAA,gBAAgB,CAACQ,MAAS;AACzB,IAAAE,EAAkBV,CAAM,KAI5BK,EAAcG,CAAI;AAAA,EAAA,GAGfR,EAAA,iBAAiB,CAACW,MAAc;AAC/B,IAAAC,EAAmBZ,CAAM,KAI7BM,EAAeK,CAAS;AAAA,EAAA,GAGrBX,EAAA,iBAAiBa,EAAmBb,CAAM,GAEjDA,EAAO,gBAAgBc,EAAcd,GAAQ,EAAE,sBAAAC,EAAsB,CAAA,GAE9DD;AACX;"}