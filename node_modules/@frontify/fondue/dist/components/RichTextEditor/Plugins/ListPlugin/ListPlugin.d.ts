import { ToggleMarkPlugin } from '@udecode/plate';
import { Plugin } from '../Plugin';
import { ListPluginProps } from './types';
export declare const MARK_TEXT_STYLE = "textStyle";
export declare const createLicStylePlugin: <OP = ToggleMarkPlugin, OV extends import("@udecode/plate").Value = import("@udecode/plate").Value, OE extends import("@udecode/plate").PlateEditor<OV> = import("@udecode/plate").PlateEditor<OV>>(override?: Partial<import("@udecode/plate").PlatePlugin<import("@udecode/plate").NoInfer<OP>, OV, OE>> | undefined, overrideByKey?: import("@udecode/plate").OverrideByKey<OV, OE> | undefined) => import("@udecode/plate").PlatePlugin<import("@udecode/plate").NoInfer<OP>, OV, OE>;
export declare class ListPlugin extends Plugin {
    protected isSoftBreak: boolean;
    constructor(props?: ListPluginProps);
    plugins(): (import("@udecode/plate").PlatePlugin<import("@udecode/plate").AnyObject, import("@udecode/plate").Value, import("@udecode/plate").PlateEditor<import("@udecode/plate").Value>> | import("@udecode/plate").PlatePlugin<ToggleMarkPlugin, import("@udecode/plate").Value, import("@udecode/plate").PlateEditor<import("@udecode/plate").Value>>)[];
}
