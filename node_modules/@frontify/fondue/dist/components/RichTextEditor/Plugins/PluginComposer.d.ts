import { PlatePluginComponent } from '@udecode/plate';
import { InlineData, PluginComposerProps, Plugins, ToolbarButtons } from './types';
import { CSSProperties } from 'react';
export declare class PluginComposer {
    protected props?: PluginComposerProps | undefined;
    private platePlugins;
    private markupElements;
    private inlineElements;
    private toolbarButtons;
    private styles;
    constructor(props?: PluginComposerProps | undefined);
    setPlugin(...plugins: Plugins): this;
    private addTextStylesOfSubPlugins;
    private addLeafElements;
    private addElement;
    private addPlugin;
    private addInline;
    private addStyles;
    get elements(): {
        [x: string]: PlatePluginComponent<any>;
    };
    private get defaultElementsFromPlugins();
    get plugins(): import("@udecode/plate").PlatePlugin<import("@udecode/plate").AnyObject, import("@udecode/plate").Value, import("@udecode/plate").PlateEditor<import("@udecode/plate").Value>>[];
    get buttons(): ToolbarButtons;
    get inline(): InlineData[];
    get hasToolbar(): boolean;
    get getStyles(): Record<string, CSSProperties>;
}
