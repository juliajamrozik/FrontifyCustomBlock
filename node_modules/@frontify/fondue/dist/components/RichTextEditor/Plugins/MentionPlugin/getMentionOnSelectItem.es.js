import { comboboxSelectors as o, getPlugin as p, withoutNormalizing as a, select as l, withoutMergingHistory as u, removeNodes as f, isNodeMentionInput as x, insertNodes as N, moveSelection as h, insertText as M, comboboxActions as b, ELEMENT_MENTION as E } from "@udecode/plate";
const I = ({ key: s = E } = {}) => (t, c) => {
  const n = o.targetRange();
  if (!n)
    return;
  const {
    type: i,
    options: { insertSpaceAfterMention: r, createMentionNode: e }
  } = p(t, s);
  return a(t, () => {
    const g = e == null ? void 0 : e(c, {
      search: o.text() ?? ""
    });
    l(t, n), u(
      t,
      () => f(t, {
        match: (m) => x(t, m)
      })
    ), N(t, {
      type: i,
      children: [{ text: "" }],
      ...g
    }), h(t, { unit: "offset" }), r && M(t, " ");
  }), b.reset();
};
export {
  I as getMentionOnSelectItem
};
//# sourceMappingURL=getMentionOnSelectItem.es.js.map
