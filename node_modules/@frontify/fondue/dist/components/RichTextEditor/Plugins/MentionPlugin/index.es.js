import { createComboboxPlugin as e, createMentionPlugin as t } from "@udecode/plate";
import { MENTION_PLUGIN as o } from "./id.es.js";
import { MentionMarkupElement as r } from "./MentionMarkupElement/index.es.js";
import { Plugin as i } from "../Plugin.es.js";
import { MentionInline as m } from "./MentionInline.es.js";
import { mentionPlugin as l } from "./config.es.js";
import { MentionInputMarkupElement as p } from "./MentionInputMarkupElement/MentionInputMarkupElement.es.js";
class b extends i {
  constructor(n) {
    super(o, {
      markupElement: new r().setNodeWithMentionable(n.mentionableItems),
      markupInputElement: new p(),
      ...n
    });
  }
  inline() {
    var n;
    return m(((n = this.props) == null ? void 0 : n.mentionableItems) || []);
  }
  plugins() {
    return [e(), t(l)];
  }
}
export {
  r as MentionMarkupElement,
  b as MentionPlugin
};
//# sourceMappingURL=index.es.js.map
