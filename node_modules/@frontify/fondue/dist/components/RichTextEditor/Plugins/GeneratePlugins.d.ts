import { CSSProperties, ReactNode } from 'react';
import { AnyObject, PlatePlugin } from '@udecode/plate';
import type { PluginComposer } from './PluginComposer';
type GeneratePluginsReturn = {
    create: () => PlatePlugin<AnyObject>[];
    toolbar: (toolbarWidth: number | undefined) => ReactNode;
    inline: () => ReactNode;
    styles: () => Record<string, CSSProperties>;
};
export declare const createPlatePlugins: (pluginComposer: PluginComposer) => PlatePlugin<AnyObject, import("@udecode/plate").Value, import("@udecode/plate").PlateEditor<import("@udecode/plate").Value>>[];
export declare const GeneratePlugins: (editorId: string, pluginComposer: PluginComposer) => GeneratePluginsReturn;
export {};
