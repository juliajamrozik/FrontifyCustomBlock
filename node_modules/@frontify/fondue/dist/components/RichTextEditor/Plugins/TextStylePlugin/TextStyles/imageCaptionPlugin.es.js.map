{"version":3,"file":"imageCaptionPlugin.es.js","sources":["../../../../../../src/components/RichTextEditor/Plugins/TextStylePlugin/TextStyles/imageCaptionPlugin.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { createPluginFactory } from '@udecode/plate';\nimport React, { CSSProperties } from 'react';\nimport { MarkupElement, Plugin, PluginProps, defaultStyles, getColumnBreakClasses } from '../../..';\nimport { alignmentClassnames } from '../../helper';\nimport { merge } from '@utilities/merge';\nimport { TextStyleRenderElementProps, TextStyles } from '../types';\n\nconst ID = 'textstyle-imageCaption-plugin';\n\nexport class ImageCaptionPlugin extends Plugin {\n    public styles: CSSProperties = {};\n    constructor({ styles = defaultStyles.imageCaption, ...props }: PluginProps = {}) {\n        super(TextStyles.imageCaption, {\n            label: 'Image Caption',\n            markupElement: new ImageCaptionMarkupElement(),\n            ...props,\n        });\n        this.styles = styles;\n    }\n\n    plugins() {\n        return [createImageCaptionPlugin(this.styles)];\n    }\n}\n\nclass ImageCaptionMarkupElement extends MarkupElement {\n    constructor(id = ID, node = ImageCaptionMarkupElementNode) {\n        super(id, node);\n    }\n}\nconst ImageCaptionMarkupElementNode = ({ element, attributes, children, styles }: TextStyleRenderElementProps) => {\n    const align = element.align as string;\n    return (\n        <p\n            {...attributes}\n            className={merge([align && alignmentClassnames[align], getColumnBreakClasses(element)])}\n            style={styles}\n        >\n            {children}\n        </p>\n    );\n};\n\nconst createImageCaptionPlugin = (styles: CSSProperties) =>\n    createPluginFactory({\n        key: TextStyles.imageCaption,\n        isElement: true,\n        component: ImageCaptionMarkupElementNode,\n        deserializeHtml: {\n            rules: [{ validClassName: TextStyles.imageCaption }],\n        },\n    })({\n        component: (props: TextStyleRenderElementProps) => <ImageCaptionMarkupElementNode {...props} styles={styles} />,\n    });\n"],"names":["ID","ImageCaptionPlugin","Plugin","styles","defaultStyles","props","TextStyles","ImageCaptionMarkupElement","__publicField","createImageCaptionPlugin","MarkupElement","id","node","ImageCaptionMarkupElementNode","element","attributes","children","align","React","merge","alignmentClassnames","getColumnBreakClasses","createPluginFactory"],"mappings":";;;;;;;;;;;;AASA,MAAMA,IAAK;AAEJ,MAAMC,UAA2BC,EAAO;AAAA,EAE3C,YAAY,EAAE,QAAAC,IAASC,EAAc,cAAc,GAAGC,EAAuB,IAAA,IAAI;AAC7E,UAAMC,EAAW,cAAc;AAAA,MAC3B,OAAO;AAAA,MACP,eAAe,IAAIC,EAA0B;AAAA,MAC7C,GAAGF;AAAA,IAAA,CACN;AANE,IAAAG,EAAA,gBAAwB,CAAA;AAO3B,SAAK,SAASL;AAAA,EAClB;AAAA,EAEA,UAAU;AACN,WAAO,CAACM,EAAyB,KAAK,MAAM,CAAC;AAAA,EACjD;AACJ;AAEA,MAAMF,UAAkCG,EAAc;AAAA,EAClD,YAAYC,IAAKX,GAAIY,IAAOC,GAA+B;AACvD,UAAMF,GAAIC,CAAI;AAAA,EAClB;AACJ;AACA,MAAMC,IAAgC,CAAC,EAAE,SAAAC,GAAS,YAAAC,GAAY,UAAAC,GAAU,QAAAb,QAA0C;AAC9G,QAAMc,IAAQH,EAAQ;AAElB,SAAA,gBAAAI,EAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACI,GAAGH;AAAA,MACJ,WAAWI,EAAM,CAACF,KAASG,EAAoBH,CAAK,GAAGI,EAAsBP,CAAO,CAAC,CAAC;AAAA,MACtF,OAAOX;AAAA,IAAA;AAAA,IAENa;AAAA,EAAA;AAGb,GAEMP,IAA2B,CAACN,MAC9BmB,EAAoB;AAAA,EAChB,KAAKhB,EAAW;AAAA,EAChB,WAAW;AAAA,EACX,WAAWO;AAAA,EACX,iBAAiB;AAAA,IACb,OAAO,CAAC,EAAE,gBAAgBP,EAAW,cAAc;AAAA,EACvD;AACJ,CAAC,EAAE;AAAA,EACC,WAAW,CAACD,sCAAwCQ,GAA+B,EAAA,GAAGR,GAAO,QAAAF,GAAgB;AACjH,CAAC;"}