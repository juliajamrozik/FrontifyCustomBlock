var r = Object.defineProperty;
var o = (s, e, t) => e in s ? r(s, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : s[e] = t;
var l = (s, e, t) => (o(s, typeof e != "symbol" ? e + "" : e, t), t);
import { TEXT_STYLE_PLUGIN as x } from "./id.es.js";
import { TextStyleButton as i } from "./TextStyleDropdown/TextStyleButton.es.js";
import { Plugin as m } from "../Plugin.es.js";
import { withTextStyles as S } from "./TextStyleDropdown/withTextStyles.es.js";
class p extends m {
  constructor({ ...t }) {
    super(x, {
      button: S(i, t.textStyles),
      ...t
    });
    l(this, "textStyles");
    this.textStyles = t.textStyles;
  }
  plugins() {
    return this.textStyles.map((t) => t.plugins()).flat();
  }
}
export {
  p as TextStylePlugin
};
//# sourceMappingURL=index.es.js.map
