import c from "react";
import { ReactEditor as w } from "slate-react";
import { getRootProps as f, setNodes as E } from "@udecode/plate";
import { merge as a } from "../../../../utilities/merge.es.js";
import { MarkupElement as u } from "../MarkupElement.es.js";
import { ELEMENT_CHECK_ITEM as x } from "./id.es.js";
import { justifyClassNames as k } from "../helper.es.js";
import { useRichTextEditorContext as g } from "../../context/RichTextEditorContext.es.js";
const b = (t, e) => t[e.children[0].textStyle], C = (t) => {
  const { attributes: e, children: s, nodeProps: m, element: o, editor: n } = t, i = f(t), r = o.checked, l = o.align ?? "left", { styles: d } = g();
  return /* @__PURE__ */ c.createElement(
    "div",
    {
      ...e,
      ...i,
      className: a(["tw-flex tw-flex-row tw-pb-2 tw-gap-1.5 tw-items-center", k[l]])
    },
    /* @__PURE__ */ c.createElement("div", { contentEditable: !1, className: "tw-select-none" }, /* @__PURE__ */ c.createElement(
      "input",
      {
        "data-test-id": "checkbox-input",
        className: "tw-w-4 tw-h-4 tw-m-0",
        type: "checkbox",
        checked: !!r,
        onChange: (p) => {
          const h = w.findPath(n, o);
          E(n, { checked: p.target.checked }, { at: h });
        },
        ...m
      }
    )),
    /* @__PURE__ */ c.createElement(
      "span",
      {
        style: b(d, o),
        className: a(["focus:tw-outline-none tw-w-auto tw-min-w-[10px]", r && "!tw-line-through"])
      },
      s
    )
  );
};
class S extends u {
  constructor(e = x, s = C) {
    super(e, s);
  }
}
export {
  S as CheckboxListElement,
  C as CheckboxListElementNode
};
//# sourceMappingURL=CheckboxListElement.es.js.map
