import { createItalicPlugin as e } from "@udecode/plate";
import { ITALIC_PLUGIN as o } from "./id.es.js";
import { ItalicMarkupElement as i, ITALIC_CLASSES as l } from "./ItalicMarkupElement.es.js";
import { ItalicMarkupElementNode as E } from "./ItalicMarkupElement.es.js";
import { Plugin as r } from "../Plugin.es.js";
import { ItalicButton as a } from "./ItalicButton.es.js";
const m = [
  { validNodeName: ["EM", "I"] },
  {
    validStyle: {
      fontStyle: "italic"
    }
  }
];
class d extends r {
  constructor(t) {
    super(o, {
      button: a,
      markupElement: new i(),
      ...t
    });
  }
  plugins() {
    return [
      e({
        deserializeHtml: {
          rules: [...m, { validNodeName: ["SPAN"], validClassName: l }]
        },
        options: {
          hotkey: ["mod+i", "ctrl+i"]
        }
      })
    ];
  }
}
export {
  l as ITALIC_CLASSES,
  i as ItalicMarkupElement,
  E as ItalicMarkupElementNode,
  d as ItalicPlugin
};
//# sourceMappingURL=index.es.js.map
