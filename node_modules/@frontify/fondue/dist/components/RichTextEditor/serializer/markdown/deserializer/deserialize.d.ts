import { BlockQuoteNode, CodeBlockNode, HeadingNode, ImageNode, InputNodeTypes, ItalicNode, LinkNode, ListItemChildNode, ListItemNode, ListNode, MarkdownAstNode, OptionType, ParagraphNode, ThematicBreakNode } from '../types';
import { DeserializerConfig } from './types';
export default function deserialize<T extends InputNodeTypes>(node: MarkdownAstNode, options: OptionType, config?: DeserializerConfig): CodeBlockNode<T> | HeadingNode<T> | ListNode<T> | ListItemNode<T> | ListItemChildNode<T> | ParagraphNode<T> | LinkNode<T> | ImageNode<T> | BlockQuoteNode<T> | ThematicBreakNode<T> | ItalicNode<T> | {
    type: string;
    category: string;
    id: string;
    children: {
        text: string;
    }[];
} | {
    type: string;
    children: {
        text: string;
    }[];
    category?: undefined;
    id?: undefined;
} | {
    target?: import("../types").TargetValue | undefined;
    url?: string | undefined;
    value?: string | undefined;
    alt?: string | undefined;
    lang?: string | undefined;
    checked?: any;
    position?: any;
    spread?: any;
    depth?: 2 | 1 | 4 | 3 | 6 | 5 | undefined;
    indent?: any;
    ordered?: boolean | undefined;
    text: string | undefined;
    type?: undefined;
    category?: undefined;
    id?: undefined;
    children?: undefined;
};
