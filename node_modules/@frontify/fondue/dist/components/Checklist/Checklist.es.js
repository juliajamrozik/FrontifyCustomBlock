import { CheckboxState as m, Checkbox as C } from "../Checkbox/Checkbox.es.js";
import { useCheckboxGroup as k, useCheckboxGroupItem as w } from "@react-aria/checkbox";
import { useCheckboxGroupState as S } from "@react-stately/checkbox";
import { merge as b } from "../../utilities/merge.es.js";
import d, { useRef as h, useState as x, useEffect as v } from "react";
var E = /* @__PURE__ */ ((e) => (e.Horizontal = "Horizontal", e.Vertical = "Vertical", e))(E || {});
const I = {
  1: "tw-grid-cols-1",
  2: "tw-grid-cols-2",
  3: "tw-grid-cols-3",
  4: "tw-grid-cols-4"
}, y = ({ checkbox: e, state: t }) => {
  const a = h(null), { value: r, disabled: s, label: p, "aria-label": c, state: o } = e, [l, i] = x(o), n = t.isSelected(r), { inputProps: u } = w(
    { value: r, isDisabled: s, "aria-label": c || p },
    t,
    a
  );
  return v(() => {
    l === m.Mixed && !n ? i(m.Mixed) : i(n ? m.Checked : m.Unchecked);
  }, [l, n]), /* @__PURE__ */ d.createElement(C, { ...e, state: l, groupInputProps: u, ref: a });
}, z = (e, t) => {
  if (!t || t <= 1)
    return "";
  const a = "auto / span", r = e.length % t;
  return r === 0 ? "" : `${a} ${t - r + 1}`;
}, H = ({
  checkboxes: e,
  setActiveValues: t,
  ariaLabel: a = "Checklist",
  activeValues: r = [],
  direction: s = "Horizontal",
  "data-test-id": p = "checklist",
  ...c
}) => {
  const o = h(null), l = S({
    value: r,
    onChange: t
  }), { groupProps: i } = k(
    {
      "aria-label": a
    },
    l
  ), n = "columns" in c && c.columns || 1;
  return /* @__PURE__ */ d.createElement(
    "ul",
    {
      ...i,
      "data-test-id": p,
      className: b([
        s === "Horizontal" ? "tw-flex tw-flex-row tw-gap-12" : `tw-grid tw-gap-4 ${I[n]}`
      ]),
      ref: o
    },
    e.map((u, f) => {
      var g;
      return /* @__PURE__ */ d.createElement(
        "li",
        {
          key: u.value,
          style: {
            maxWidth: (g = o == null ? void 0 : o.current) == null ? void 0 : g.getBoundingClientRect().width,
            gridColumn: f === e.length - 1 && s === "Vertical" ? z(e, n) : void 0
          }
        },
        /* @__PURE__ */ d.createElement(y, { checkbox: u, state: l })
      );
    })
  );
};
H.displayName = "FondueChecklist";
export {
  H as Checklist,
  E as ChecklistDirection
};
//# sourceMappingURL=Checklist.es.js.map
