import { ReactElement, ReactNode } from 'react';
import { BrightHeaderStyle } from './BrightHeader';
export type TooltipButton = {
    label: string;
    action: () => void;
};
export type TooltipProps = {
    triggerElement?: ReactElement;
    content: ReactNode;
    tooltipIcon?: ReactElement;
    heading?: ReactNode;
    headingIcon?: ReactElement;
    linkUrl?: string;
    linkLabel?: string;
    brightHeader?: BrightHeaderStyle;
    buttons?: [TooltipButton, TooltipButton] | [TooltipButton];
    children?: ReactNode;
    position?: TooltipPosition;
    alignment?: TooltipAlignment;
    flip?: boolean;
    withArrow?: boolean;
    hoverDelay?: number;
    enterDelay?: number;
    open?: boolean;
    disabled?: boolean;
    /** @deprecated use disabled since the tooltip is always present in the DOM now so hidden has no effect anymore */
    hidden?: boolean;
    enablePortal?: boolean;
    'data-test-id'?: string;
};
export declare enum TooltipPosition {
    Top = "Top",
    Right = "Right",
    Bottom = "Bottom",
    Left = "Left"
}
export declare enum TooltipAlignment {
    Start = "Start",
    Middle = "Middle",
    End = "End"
}
export declare const Tooltip: {
    ({ content, tooltipIcon, heading, headingIcon, linkUrl, linkLabel, brightHeader, buttons, children, position, alignment, withArrow, flip, triggerElement, hoverDelay, enterDelay, open, disabled, enablePortal, hidden, "data-test-id": dataTestId, }: TooltipProps): JSX.Element;
    displayName: string;
};
