import { IconSize as V } from "../../foundation/Icon/IconSize.es.js";
import { useLink as pe } from "@react-aria/link";
import { FOCUS_VISIBLE_STYLE as ue } from "../../utilities/focusStyle.es.js";
import { merge as f } from "../../utilities/merge.es.js";
import t, { useState as b, useRef as W, useMemo as be, useCallback as E, useEffect as Y, useLayoutEffect as Ee, cloneElement as C } from "react";
import { BrightHeader as ge, brightHeaderArrowBackgroundColors as T } from "./BrightHeader.es.js";
import { usePopper as Se } from "react-popper";
import { useMemoizedId as ve } from "../../hooks/useMemoizedId.es.js";
import { Button as j } from "../Button/Button.es.js";
import { ButtonStyle as q, ButtonEmphasis as G, ButtonSize as J } from "../Button/ButtonTypes.es.js";
import { Portal as he } from "../Portal/Portal.es.js";
const K = {
  small: "tw-pt-2",
  large: "tw-pt-3"
}, Q = {
  small: "tw-pb-2",
  large: "tw-pb-3"
};
var ke = /* @__PURE__ */ ((e) => (e.Top = "Top", e.Right = "Right", e.Bottom = "Bottom", e.Left = "Left", e))(ke || {}), xe = /* @__PURE__ */ ((e) => (e.Start = "Start", e.Middle = "Middle", e.End = "End", e))(xe || {});
const Le = {
  ["Top-Start"]: "top-start",
  ["Top-End"]: "top-end",
  ["Bottom-Start"]: "bottom-start",
  ["Bottom-End"]: "bottom-end",
  ["Left-Start"]: "left-start",
  ["Left-End"]: "left-end",
  ["Right-Start"]: "right-start",
  ["Right-End"]: "right-end",
  ["Top-Middle"]: "top",
  ["Right-Middle"]: "right",
  ["Bottom-Middle"]: "bottom",
  ["Left-Middle"]: "left"
}, Ce = (e, r, i) => {
  switch (!0) {
    case e.toString().includes("Top".toLowerCase()):
      return "before:tw-border-t-0 before:tw-border-l-0 tw-bottom-[-6px] before:tw-dark before:tw-bg-base";
    case e.toString().includes("Right".toLowerCase()):
      return f([
        "before:tw-border-t-0 before:tw-border-r-0 tw-left-[-5px]",
        r && i === "Start" && e.toString().includes("Start".toLowerCase()) ? T[r] : "before:tw-dark before:tw-bg-base"
      ]);
    case e.toString().includes("Bottom".toLowerCase()):
      return f([
        "before:tw-border-b-0 before:tw-border-r-0 tw-top-[-6px]",
        r ? T[r] : "before:tw-dark before:tw-bg-base"
      ]);
    case e.toString().includes("Left".toLowerCase()):
      return f([
        "before:tw-border-b-0 before:tw-border-l-0 tw-right-[-5px]",
        r && i === "Start" && e.toString().includes("Start".toLowerCase()) ? T[r] : "before:tw-dark before:tw-bg-base"
      ]);
    default:
      return "before:tw-border-b-0 before:tw-border-r-0 tw-top-[-6px] before:tw-dark before:tw-bg-base";
  }
}, Te = ({
  enablePortal: e = !1,
  children: r
}) => e ? /* @__PURE__ */ t.createElement(he, null, r) : r, ye = ({
  content: e,
  tooltipIcon: r,
  heading: i,
  headingIcon: g,
  linkUrl: c,
  linkLabel: X,
  brightHeader: k,
  buttons: o,
  children: Z,
  position: y = "Bottom",
  alignment: B = "Middle",
  withArrow: S,
  flip: H = !0,
  triggerElement: R,
  hoverDelay: z = 200,
  enterDelay: x = 0,
  open: M = !1,
  disabled: P = !1,
  enablePortal: A = !1,
  hidden: U = !1,
  "data-test-id": N = "tooltip"
}) => {
  var $;
  const [L, ee] = b(
    null
  ), [a, d] = b(!1), O = W(null), n = U || P, { linkProps: te } = pe({ isDisabled: n }, O), re = be(
    () => c || o || i || g,
    [c, o, i, g]
  ), oe = Le[`${y}-${B}`], [p, ae] = b(null), [v, se] = b(null), [ne, le] = b(null), F = ve(), w = Se(L, p, {
    placement: oe,
    strategy: "fixed",
    modifiers: [
      {
        name: "arrow",
        options: {
          element: ne
        }
      },
      {
        name: "eventListeners",
        options: { scroll: a, resize: a }
      },
      {
        name: "offset",
        options: {
          offset: [0, S ? 10 : 5]
        }
      },
      {
        name: "flip",
        enabled: H
      }
    ]
  }), ie = (($ = w.state) == null ? void 0 : $.placement) ?? y, de = Ce(ie, k, B), l = W(null), fe = E(() => {
    l.current && clearTimeout(l.current), l.current = setTimeout(() => d(!1), z);
  }, [z]), I = E(() => {
    if (l.current && clearTimeout(l.current), x) {
      l.current = setTimeout(() => d(!0), x);
      return;
    }
    d(!0);
  }, [x]), we = E(
    (s) => {
      var m;
      const u = (m = s.composedPath) == null ? void 0 : m.call(s);
      u && [L, v, p].some((D) => D && u.includes(D)) && I();
    },
    [I, p, v, L]
  ), me = E(
    (s) => {
      const { relatedTarget: u } = s;
      (!u || ![p, v].some((m) => m == null ? void 0 : m.contains(u))) && d(!1);
    },
    [p, v]
  ), _ = n ? {} : {
    onMouseOver: (s) => we(s.nativeEvent),
    onMouseLeave: fe,
    onFocus: () => d(!0),
    onBlur: me
  };
  Y(() => {
    l.current && clearTimeout(l.current), d(n ? !1 : M);
  }, [M, n]);
  const h = E(
    (s) => {
      a && s.key === "Escape" && d(!1);
    },
    [a]
  );
  return Ee(() => {
    typeof w.update == "function" && a && w.update();
  }, [a]), Y(() => (a ? window.addEventListener("keydown", h) : window.removeEventListener("keydown", h), () => {
    window.removeEventListener("keydown", h);
  }), [h, a]), /* @__PURE__ */ t.createElement(t.Fragment, null, /* @__PURE__ */ t.createElement("div", { ..._, ref: se }, R && C(R, {
    ref: ee,
    "aria-labelledby": F,
    "aria-disabled": n
  })), /* @__PURE__ */ t.createElement(Te, { enablePortal: A }, /* @__PURE__ */ t.createElement(
    "div",
    {
      ref: ae,
      "aria-hidden": n,
      className: f([
        "tw-popper-container tw-inline-block tw-max-w-[200px] tw-dark tw-bg-base tw-rounded-md tw-shadow-mid tw-text-text tw-z-[120000]",
        !a && "tw-opacity-0 tw-h-0 tw-w-0 tw-overflow-hidden"
      ]),
      "data-test-id": N,
      role: "tooltip",
      id: F,
      style: w.styles.popper,
      ...w.attributes.popper,
      ..._
    },
    k && /* @__PURE__ */ t.createElement(ge, { headerStyle: k }),
    /* @__PURE__ */ t.createElement(
      "div",
      {
        className: f([
          "tw-px-3 tw-dark tw-bg-base tw-rounded-md tw-relative tw-z-[120000]",
          re ? K.large : K.small,
          c ? Q.large : Q.small
        ])
      },
      i && /* @__PURE__ */ t.createElement("h4", { className: "tw-flex tw-text-m tw-font-bold tw-mb-1" }, g && /* @__PURE__ */ t.createElement("span", { className: "tw-mr-1.5" }, C(g, { size: V.Size20 })), i),
      /* @__PURE__ */ t.createElement("div", { className: "tw-flex" }, r && /* @__PURE__ */ t.createElement("span", { className: "tw-shrink-0 tw-mr-1 tw-leading-4" }, C(r, { size: V.Size16 })), /* @__PURE__ */ t.createElement("span", { className: "tw-text-s tw-min-w-0 tw-break-words" }, e)),
      c && /* @__PURE__ */ t.createElement(
        "a",
        {
          ...te,
          "data-test-id": `${N}-link`,
          ref: O,
          href: c,
          target: "_blank",
          rel: "noopener noreferrer",
          className: f([
            "tw-text-xs tw-text-black-40 tw-underline tw-mt-1",
            ue
          ])
        },
        X ?? "Click here to learn more."
      ),
      o && /* @__PURE__ */ t.createElement("div", { className: "tw-flex tw-flex-row-reverse tw-gap-x-1 tw-mt-4" }, o.length > 0 && /* @__PURE__ */ t.createElement(
        j,
        {
          style: q.Default,
          emphasis: G.Strong,
          size: J.Small,
          onClick: o[0].action,
          disabled: n
        },
        o[0].label
      ), o.length === 2 && /* @__PURE__ */ t.createElement(
        j,
        {
          style: q.Default,
          emphasis: G.Default,
          size: J.Small,
          onClick: o[1].action,
          disabled: n
        },
        o[1].label
      ))
    ),
    /* @__PURE__ */ t.createElement("div", { "aria-hidden": "true" }, /* @__PURE__ */ t.createElement(
      "div",
      {
        "data-test-id": "popover-arrow",
        "data-popper-arrow": S,
        ref: le,
        style: w.styles.arrow,
        className: f([
          S && "tw-popper-arrow tw-z-[110000] tw-absolute tw-w-3 tw-h-3 tw-pointer-events-none before:tw-absolute before:tw-w-3 before:tw-h-3 before:tw-rotate-45 before:tw-border before:tw-border-line",
          S && de
        ])
      }
    )),
    Z
  )));
};
ye.displayName = "FondueTooltip";
export {
  ye as Tooltip,
  xe as TooltipAlignment,
  ke as TooltipPosition
};
//# sourceMappingURL=Tooltip.es.js.map
