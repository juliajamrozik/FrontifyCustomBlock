import { DoneInvokeEvent } from 'xstate';
import { LinkChooserContext, LinkChooserEventData } from '../types';
export declare const updateQueryFromString: import("xstate").AssignAction<LinkChooserContext, DoneInvokeEvent<LinkChooserEventData>>;
export declare const updateQueryFromObject: import("xstate").AssignAction<LinkChooserContext, DoneInvokeEvent<LinkChooserEventData>>;
export declare const replaceCustomLink: import("xstate").AssignAction<LinkChooserContext, DoneInvokeEvent<LinkChooserEventData>>;
export declare const replaceCustomLinkWithSelected: import("xstate").AssignAction<LinkChooserContext, DoneInvokeEvent<LinkChooserEventData>>;
export declare const setExtraResultsByQuery: import("xstate").AssignAction<LinkChooserContext, DoneInvokeEvent<LinkChooserEventData>>;
export declare const setCurrentSectionId: import("xstate").AssignAction<LinkChooserContext, DoneInvokeEvent<LinkChooserEventData>>;
export declare const setSelectedSearchResult: import("xstate").AssignAction<LinkChooserContext, DoneInvokeEvent<LinkChooserEventData>>;
export declare const populateDropdownSearchResultsWithRecentQueries: import("xstate").AssignAction<LinkChooserContext, DoneInvokeEvent<LinkChooserEventData>>;
export declare const storeNewSelectedResult: (_context: LinkChooserContext, { data }: DoneInvokeEvent<LinkChooserEventData>) => void;
export declare const fillResultsWithNewRecentQueries: import("xstate").AssignAction<LinkChooserContext, DoneInvokeEvent<LinkChooserEventData>>;
export declare const emitSelectSearchResult: (context: LinkChooserContext) => void;
export declare const clearSelectedResult: import("xstate").AssignAction<LinkChooserContext, DoneInvokeEvent<LinkChooserEventData>>;
export declare const copyLinkToClipboard: ({ clipboardOptions, selectedResult }: LinkChooserContext) => void;
export declare const openPreviewContext: ({ openPreview, selectedResult }: LinkChooserContext) => void;
export declare const updateDropdownSearchResults: import("xstate").AssignAction<LinkChooserContext, DoneInvokeEvent<LinkChooserEventData>>;
export declare const fetchGlobalSearchResults: (context: LinkChooserContext) => Promise<LinkChooserEventData>;
export declare const fetchExtraSectionResults: (context: LinkChooserContext) => Promise<LinkChooserEventData>;
export declare const interruptFetching: import("xstate").AssignAction<LinkChooserContext, DoneInvokeEvent<LinkChooserEventData>>;
export declare const resolveFetching: import("xstate").AssignAction<LinkChooserContext, DoneInvokeEvent<LinkChooserEventData>>;
