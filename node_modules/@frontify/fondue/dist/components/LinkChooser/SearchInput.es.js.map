{"version":3,"file":"SearchInput.es.js","sources":["../../../src/components/LinkChooser/SearchInput.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\nimport { LoadingCircle, LoadingCircleSize } from '@components/LoadingCircle';\nimport { Validation, validationClassMap } from '@utilities/validation';\nimport { useFocusRing } from '@react-aria/focus';\nimport { mergeProps } from '@react-aria/utils';\nimport { FOCUS_STYLE } from '@utilities/focusStyle';\nimport { merge } from '@utilities/merge';\nimport { useActor } from '@xstate/react';\nimport React, { MouseEvent, ReactElement, forwardRef } from 'react';\nimport { IconButtonProps, SearchInputProps } from './types';\nimport { IconArrowOutExternal, IconClipboard, IconCross } from '@foundation/Icon/Generated';\n\nexport const SearchInput = forwardRef<HTMLInputElement | null, SearchInputProps>(\n    (\n        {\n            disabled = false,\n            clearable = true,\n            ariaProps,\n            selectedResult,\n            decorator,\n            machineService,\n            onClear,\n            validation = Validation.Default,\n            onClick,\n            onMouseDown,\n        },\n        inputElement,\n    ) => {\n        const { value } = ariaProps;\n        const { isFocusVisible, focusProps, isFocused } = useFocusRing({ isTextInput: true });\n\n        const [, send] = useActor(machineService);\n\n        const isLoading = validation === Validation.Loading;\n\n        return (\n            <div\n                data-test-id=\"link-chooser-search-wrapper\"\n                className={merge([\n                    'tw-flex tw-items-center tw-h-9 tw-gap-2 tw-px-2.5 tw-border tw-rounded tw-text-s tw-font-sans tw-relative tw-bg-white dark:tw-bg-transparent',\n                    disabled\n                        ? 'tw-border-black-5 tw-bg-black-5 dark:tw-bg-black-90 dark:tw-border-black-90'\n                        : merge([\n                              'focus-within:tw-border-black-100',\n                              isFocusVisible && FOCUS_STYLE,\n                              validationClassMap[validation],\n                          ]),\n                ])}\n                onClick={onClick}\n                onMouseDown={onMouseDown}\n            >\n                {decorator && (\n                    <div\n                        className={merge([\n                            'tw-flex tw-items-center tw-justify-center tw-flex-none',\n                            disabled || !selectedResult ? 'tw-text-black-40' : 'tw-text-violet-60',\n                        ])}\n                        data-test-id=\"link-chooser-decorator-icon\"\n                    >\n                        {decorator}\n                    </div>\n                )}\n\n                <input\n                    {...mergeProps(focusProps, ariaProps)}\n                    readOnly={!isFocused}\n                    ref={inputElement}\n                    className={merge([\n                        'tw-flex-auto tw-border-none tw-outline-none tw-bg-transparent tw-hide-input-arrows tw-min-w-0 tw-whitespace-nowrap tw-truncate',\n                        disabled\n                            ? 'tw-text-black-40 tw-placeholder-black-30 dark:tw-text-black-30 dark:tw-placeholder-black-40'\n                            : 'tw-text-black tw-placeholder-black-60 dark:tw-text-white',\n                    ])}\n                    value={value}\n                    disabled={disabled}\n                    data-test-id=\"link-chooser-search-input\"\n                />\n                {selectedResult && !isLoading && (\n                    <IconButton\n                        disabled={disabled}\n                        testId=\"link-chooser-preview-icon\"\n                        title=\"Preview link\"\n                        ariaLabel=\"preview link\"\n                        icon={<IconArrowOutExternal />}\n                        onClick={() => send('OPEN_PREVIEW')}\n                    />\n                )}\n                {selectedResult && !isLoading && (\n                    <IconButton\n                        disabled={disabled}\n                        testId=\"link-chooser-copy-icon\"\n                        title=\"Copy text to clipboard\"\n                        ariaLabel=\"copy text to clipboard\"\n                        icon={<IconClipboard />}\n                        onClick={() => send('COPY_TO_CLIPBOARD')}\n                    />\n                )}\n                {`${value}`.length > 0 && clearable && !isLoading && (\n                    <IconButton\n                        disabled={disabled}\n                        testId=\"link-chooser-clear-icon\"\n                        title=\"Clear text input\"\n                        ariaLabel=\"clear text input\"\n                        icon={<IconCross />}\n                        isComboBoxControl\n                        onClick={onClear}\n                    />\n                )}\n                {isLoading && (\n                    <span className=\"tw-flex tw-flex-none tw-justify-center tw-align-center\">\n                        <LoadingCircle size={LoadingCircleSize.ExtraSmall} />\n                    </span>\n                )}\n            </div>\n        );\n    },\n);\nSearchInput.displayName = 'SearchInput';\n\nconst IconButton = ({\n    disabled,\n    title,\n    ariaLabel,\n    testId,\n    icon,\n    onClick,\n    isComboBoxControl,\n}: IconButtonProps): ReactElement => {\n    const { isFocusVisible, focusProps } = useFocusRing();\n\n    const handleClick = (event: MouseEvent<HTMLButtonElement>) => {\n        event.stopPropagation();\n        onClick && onClick();\n    };\n\n    return (\n        <button\n            className={merge([\n                'tw-flex tw-items-center tw-justify-center tw-transition-colors tw-rounded tw-flex-none',\n                disabled ? 'tw-cursor-default tw-text-black-40' : 'tw-text-black-80  hover:tw-text-black-100',\n                isFocusVisible && FOCUS_STYLE,\n            ])}\n            data-test-id={testId}\n            title={title}\n            aria-label={ariaLabel}\n            data-combo-box-control={isComboBoxControl}\n            disabled={disabled}\n            onClick={handleClick}\n            type=\"button\"\n            {...focusProps}\n        >\n            {icon}\n        </button>\n    );\n};\n"],"names":["SearchInput","forwardRef","disabled","clearable","ariaProps","selectedResult","decorator","machineService","onClear","validation","Validation","onClick","onMouseDown","inputElement","value","isFocusVisible","focusProps","isFocused","useFocusRing","send","useActor","isLoading","React","merge","FOCUS_STYLE","validationClassMap","mergeProps","IconButton","IconArrowOutExternal","IconClipboard","IconCross","LoadingCircle","LoadingCircleSize","title","ariaLabel","testId","icon","isComboBoxControl","handleClick","event"],"mappings":"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"}