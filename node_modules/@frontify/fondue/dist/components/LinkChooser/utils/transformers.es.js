import { generateRandomId as a } from "../../../utilities/generateRandomId.es.js";
import { CUSTOM_LINK_ID as I, DEFAULT_ICON as p, QUERIES_STORAGE_KEY as S, MAX_STORED_ITEMS as f } from "../LinkChooser.es.js";
import { prependHttps as Q, isCustomLink as s } from "./helpers.es.js";
import { MenuItemContentSize as C, SelectionIndicatorIcon as E } from "../../MenuItem/types.es.js";
const u = (i) => ({
  id: `${I}-${a()}`,
  title: i,
  link: Q(i),
  icon: p,
  size: C.Large,
  selectionIndicator: E.Check
}), _ = () => JSON.parse(localStorage.getItem(S) || "null") || [], O = (i) => {
  const o = s(i), e = { ...i, local: !0 }, m = _(), c = m.find((r) => r.id === (i == null ? void 0 : i.id)), n = m.filter(
    (r) => !o || o && r.title !== i.title
  );
  let t;
  return c ? t = [
    e,
    ...n.filter((r) => r.id !== (i == null ? void 0 : i.id))
  ] : n.length < f ? t = [e, ...n] : t = [e, ...n.slice(0, -1)], t;
};
export {
  u as createCustomLink,
  O as mergeResultWithRecentQueries,
  _ as retrieveRecentQueries
};
//# sourceMappingURL=transformers.es.js.map
