import { LinkChooserState as c, DropdownState as s, SectionState as t } from "../state/types.es.js";
const u = (e, o) => !!(e && o === e.title), a = (e) => Object.values(s).some(
  (o) => [t.Fetching, t.Typing].some(
    (n) => e(`${c.Focused}.${o}.${n}`)
  )
), l = (e) => e(`${c.Focused}.${s.Default}.${t.Loaded}`), r = (e) => Object.values(s).some((o) => e(`${c.Focused}.${o}.${t.Error}`)), $ = (e) => Object.values(s).filter((o) => o !== s.Default).some(
  (o) => Object.values(t).some(
    (n) => e(`${c.Focused}.${o}.${n}`)
  )
), d = (e) => {
  e.isOpen && (e.close(), e.setFocused(!1));
}, f = (e) => {
  e.isOpen || (e.open("first", "manual"), e.setFocused(!0));
};
export {
  d as closeBoxState,
  a as isFetching,
  l as isLoaded,
  r as isUnsuccessful,
  f as openBoxState,
  u as queryMatchesSelection,
  $ as shouldGoBack
};
//# sourceMappingURL=state.es.js.map
