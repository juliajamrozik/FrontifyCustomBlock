{"version":3,"file":"Menu.es.js","sources":["../../../src/components/Menu/Menu.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport React, { ReactNode, RefObject, useCallback, useEffect, useState } from 'react';\nimport { usePopper } from 'react-popper';\nimport { merge } from '@utilities/merge';\nimport { useMenuKeyboardNavigation } from '@components/Menu/useMenuKeyboardNavigation';\nimport { useClickOutside } from '@hooks/useClickOutside';\nimport { INSET_BORDER } from '@utilities/borderStyle';\n\ninterface Props {\n    triggerRef?: RefObject<Element>;\n    open?: boolean;\n    children?: ReactNode | ReactNode[];\n    onClose?: () => void;\n    offset?: [number, number];\n    'data-test-id'?: string;\n}\n\nexport type MenuProps = Props;\n\nconst CONTAINER_BASE_CLASSES = 'tw-relative tw-bg-base tw-rounded tw-py-2 tw-shadow-mid tw-z-[120000]';\nconst CONTAINER_CLASSES = merge([CONTAINER_BASE_CLASSES, INSET_BORDER]);\n\nexport const Menu = ({\n    triggerRef,\n    children,\n    open = true,\n    offset = [0, 8],\n    onClose,\n    'data-test-id': dataTestId = 'menu',\n}: MenuProps) => {\n    const [isMenuOpen, setIsMenuOpen] = useState(open);\n    const [menuContainerRef, setMenuContainerRef] = useState<HTMLElement | null>(null);\n    const [menuOpenerRef, setMenuOpenerRef] = useState<HTMLElement | null>(null);\n\n    const menuKeyboardNavigationAction = useMenuKeyboardNavigation(\n        isMenuOpen,\n        menuContainerRef,\n        'li > a, li > button:not(:disabled)',\n    );\n\n    const handleClickOutside = useCallback(() => {\n        if (menuOpenerRef && isMenuOpen) {\n            setIsMenuOpen(false);\n            if (onClose) {\n                onClose();\n            }\n        }\n    }, [menuOpenerRef, isMenuOpen, onClose]);\n\n    useClickOutside(menuContainerRef, handleClickOutside, [menuOpenerRef as HTMLElement]);\n\n    const popperInstance = usePopper(menuOpenerRef, menuContainerRef, {\n        placement: 'bottom-start',\n        strategy: 'fixed',\n        modifiers: [\n            {\n                name: 'flip',\n                enabled: true,\n            },\n            {\n                name: 'offset',\n                options: {\n                    offset,\n                },\n            },\n        ],\n    });\n\n    useEffect(() => {\n        const trigger = triggerRef?.current;\n\n        if (trigger) {\n            setMenuOpenerRef(trigger as HTMLElement);\n        }\n    }, [triggerRef]);\n\n    useEffect(() => {\n        setIsMenuOpen(open);\n    }, [open]);\n\n    useEffect(() => {\n        if (isMenuOpen && popperInstance.update) {\n            popperInstance.update();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isMenuOpen]);\n\n    useEffect(() => {\n        if (menuKeyboardNavigationAction === 'CLOSE_MENU' && menuOpenerRef) {\n            setIsMenuOpen(false);\n            if (onClose) {\n                onClose();\n            }\n        }\n    }, [menuKeyboardNavigationAction, onClose, menuOpenerRef]);\n\n    return (\n        <nav\n            className={merge([CONTAINER_CLASSES, isMenuOpen ? 'tw-block' : 'tw-hidden'])}\n            role={isMenuOpen ? 'dialog' : ''}\n            ref={setMenuContainerRef}\n            style={menuOpenerRef ? popperInstance.styles.popper : {}}\n            {...(menuOpenerRef ? popperInstance.attributes.popper : {})}\n            data-test-id={dataTestId}\n        >\n            <ol className=\"tw-list-none\" role=\"menu\">\n                {children}\n            </ol>\n        </nav>\n    );\n};\nMenu.displayName = 'FondueMenu';\n"],"names":["CONTAINER_BASE_CLASSES","CONTAINER_CLASSES","merge","INSET_BORDER","Menu","triggerRef","children","open","offset","onClose","dataTestId","isMenuOpen","setIsMenuOpen","useState","menuContainerRef","setMenuContainerRef","menuOpenerRef","setMenuOpenerRef","menuKeyboardNavigationAction","useMenuKeyboardNavigation","handleClickOutside","useCallback","useClickOutside","popperInstance","usePopper","useEffect","trigger","React"],"mappings":";;;;;;AAoBA,MAAMA,IAAyB,yEACzBC,IAAoBC,EAAM,CAACF,GAAwBG,CAAY,CAAC,GAEzDC,IAAO,CAAC;AAAA,EACjB,YAAAC;AAAA,EACA,UAAAC;AAAA,EACA,MAAAC,IAAO;AAAA,EACP,QAAAC,IAAS,CAAC,GAAG,CAAC;AAAA,EACd,SAAAC;AAAA,EACA,gBAAgBC,IAAa;AACjC,MAAiB;AACb,QAAM,CAACC,GAAYC,CAAa,IAAIC,EAASN,CAAI,GAC3C,CAACO,GAAkBC,CAAmB,IAAIF,EAA6B,IAAI,GAC3E,CAACG,GAAeC,CAAgB,IAAIJ,EAA6B,IAAI,GAErEK,IAA+BC;AAAA,IACjCR;AAAA,IACAG;AAAA,IACA;AAAA,EAAA,GAGEM,IAAqBC,EAAY,MAAM;AACzC,IAAIL,KAAiBL,MACjBC,EAAc,EAAK,GACfH,KACQA;EAGjB,GAAA,CAACO,GAAeL,GAAYF,CAAO,CAAC;AAEvC,EAAAa,EAAgBR,GAAkBM,GAAoB,CAACJ,CAA4B,CAAC;AAE9E,QAAAO,IAAiBC,EAAUR,GAAeF,GAAkB;AAAA,IAC9D,WAAW;AAAA,IACX,UAAU;AAAA,IACV,WAAW;AAAA,MACP;AAAA,QACI,MAAM;AAAA,QACN,SAAS;AAAA,MACb;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,SAAS;AAAA,UACL,QAAAN;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EAAA,CACH;AAED,SAAAiB,EAAU,MAAM;AACZ,UAAMC,IAAUrB,KAAA,gBAAAA,EAAY;AAE5B,IAAIqB,KACAT,EAAiBS,CAAsB;AAAA,EAC3C,GACD,CAACrB,CAAU,CAAC,GAEfoB,EAAU,MAAM;AACZ,IAAAb,EAAcL,CAAI;AAAA,EAAA,GACnB,CAACA,CAAI,CAAC,GAETkB,EAAU,MAAM;AACR,IAAAd,KAAcY,EAAe,UAC7BA,EAAe,OAAO;AAAA,EAC1B,GAED,CAACZ,CAAU,CAAC,GAEfc,EAAU,MAAM;AACR,IAAAP,MAAiC,gBAAgBF,MACjDJ,EAAc,EAAK,GACfH,KACQA;EAGjB,GAAA,CAACS,GAA8BT,GAASO,CAAa,CAAC,GAGrD,gBAAAW,EAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACG,WAAWzB,EAAM,CAACD,GAAmBU,IAAa,aAAa,WAAW,CAAC;AAAA,MAC3E,MAAMA,IAAa,WAAW;AAAA,MAC9B,KAAKI;AAAA,MACL,OAAOC,IAAgBO,EAAe,OAAO,SAAS,CAAC;AAAA,MACtD,GAAIP,IAAgBO,EAAe,WAAW,SAAS,CAAC;AAAA,MACzD,gBAAcb;AAAA,IAAA;AAAA,oCAEb,MAAG,EAAA,WAAU,gBAAe,MAAK,UAC7BJ,CACL;AAAA,EAAA;AAGZ;AACAF,EAAK,cAAc;"}