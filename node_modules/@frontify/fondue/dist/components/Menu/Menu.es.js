import d, { useState as m, useCallback as S, useEffect as o } from "react";
import { usePopper as M } from "react-popper";
import { merge as c } from "../../utilities/merge.es.js";
import { useMenuKeyboardNavigation as y } from "./useMenuKeyboardNavigation.es.js";
import { useClickOutside as A } from "../../hooks/useClickOutside.es.js";
import { INSET_BORDER as C } from "../../utilities/borderStyle.es.js";
const I = "tw-relative tw-bg-base tw-rounded tw-py-2 tw-shadow-mid tw-z-[120000]", _ = c([I, C]), k = ({
  triggerRef: a,
  children: f,
  open: i = !0,
  offset: E = [0, 8],
  onClose: n,
  "data-test-id": b = "menu"
}) => {
  const [t, r] = m(i), [u, N] = m(null), [e, w] = m(null), p = y(
    t,
    u,
    "li > a, li > button:not(:disabled)"
  ), O = S(() => {
    e && t && (r(!1), n && n());
  }, [e, t, n]);
  A(u, O, [e]);
  const s = M(e, u, {
    placement: "bottom-start",
    strategy: "fixed",
    modifiers: [
      {
        name: "flip",
        enabled: !0
      },
      {
        name: "offset",
        options: {
          offset: E
        }
      }
    ]
  });
  return o(() => {
    const l = a == null ? void 0 : a.current;
    l && w(l);
  }, [a]), o(() => {
    r(i);
  }, [i]), o(() => {
    t && s.update && s.update();
  }, [t]), o(() => {
    p === "CLOSE_MENU" && e && (r(!1), n && n());
  }, [p, n, e]), /* @__PURE__ */ d.createElement(
    "nav",
    {
      className: c([_, t ? "tw-block" : "tw-hidden"]),
      role: t ? "dialog" : "",
      ref: N,
      style: e ? s.styles.popper : {},
      ...e ? s.attributes.popper : {},
      "data-test-id": b
    },
    /* @__PURE__ */ d.createElement("ol", { className: "tw-list-none", role: "menu" }, f)
  );
};
k.displayName = "FondueMenu";
export {
  k as Menu
};
//# sourceMappingURL=Menu.es.js.map
