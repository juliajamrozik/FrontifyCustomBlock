import { ReactNode } from 'react';
import { ContainerHTMLElement } from 'src/types/elements';
import { DimensionUnity, SpacingValue } from '../../utilities/dimensions';
export type FlexDirection = 'row' | 'column' | 'row-reverse' | 'column-reverse';
export type FlexWrap = 'nowrap' | 'wrap' | 'wrap-reverse';
export type FlexJustify = 'start' | 'end' | 'center' | 'between' | 'around' | 'evenly';
export type FlexAlignItems = 'start' | 'end' | 'center' | 'baseline' | 'stretch';
export type FlexAlignContent = 'start' | 'end' | 'center' | 'between' | 'around' | 'evenly' | 'baseline' | 'stretch' | 'normal';
export type FlexProps = {
    direction?: FlexDirection;
    wrap?: FlexWrap;
    justify?: FlexJustify;
    alignItems?: FlexAlignItems;
    alignContent?: FlexAlignContent;
    'data-test-id'?: string;
    children?: ReactNode | ReactNode[];
    bg?: string;
    color?: string;
    as?: ContainerHTMLElement;
    padding?: SpacingValue;
    margin?: SpacingValue;
    minWidth?: `${number}${DimensionUnity}`;
    maxWidth?: `${number}${DimensionUnity}`;
    minHeight?: `${number}${DimensionUnity}`;
    maxHeight?: `${number}${DimensionUnity}`;
};
export declare const Flex: {
    ({ direction, wrap, justify, alignItems, alignContent, "data-test-id": dataTestId, children, bg, color, as: ContainerElement, margin, padding, minWidth, maxWidth, maxHeight, minHeight, }: FlexProps): JSX.Element;
    displayName: string;
};
