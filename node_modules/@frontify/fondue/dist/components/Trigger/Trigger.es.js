import { IconSize as w } from "../../foundation/Icon/IconSize.es.js";
import { useFocusRing as u } from "@react-aria/focus";
import { FOCUS_STYLE as m, FOCUS_VISIBLE_STYLE as v } from "../../utilities/focusStyle.es.js";
import { merge as r } from "../../utilities/merge.es.js";
import { Validation as n, validationClassMap as S } from "../../utilities/validation.es.js";
import t from "react";
import F from "../../foundation/Icon/Generated/IconCross.es.js";
import C from "../../foundation/Icon/Generated/IconTrashBin.es.js";
import N from "../../foundation/Icon/Generated/IconCaretDown.es.js";
import I from "../../foundation/Icon/Generated/IconExclamationMarkTriangle.es.js";
var h = /* @__PURE__ */ ((e) => (e.Small = "Small", e.Large = "Large", e))(h || {}), D = /* @__PURE__ */ ((e) => (e.Default = "Default", e.Weak = "Weak", e))(D || {});
const y = (e, l, s, i, o) => r([
  "tw-group tw-relative tw-flex tw-w-full tw-items-center tw-justify-between tw-border tw-rounded tw-transition-colors tw-min-h-[36px]",
  e && m,
  l ? "tw-border-black-5 tw-bg-black-5 tw-pointer-events-none" : r([
    "hover:tw-border-line-xx-strong",
    i === "Weak" ? "" : "tw-bg-base",
    s ? "tw-border-line-xx-strong" : "tw-border-line",
    i === "Weak" ? "tw-border-0 hover:tw-outline hover:tw-outline-1" : S[o]
  ])
]), z = ({
  buttonProps: e,
  onClear: l,
  onDelete: s,
  children: i,
  disabled: o = !1,
  isOpen: c = !1,
  isFocusVisible: b = !1,
  size: f = "Small",
  showClear: p = !1,
  validation: a = n.Default,
  emphasis: g = "Default"
  /* Default */
}) => {
  const { focusProps: x, isFocusVisible: d } = u(), { focusProps: k, isFocusVisible: E } = u();
  return /* @__PURE__ */ t.createElement(
    "div",
    {
      "data-test-id": "trigger",
      className: y(b, o, c, g, a)
    },
    i,
    /* @__PURE__ */ t.createElement(
      "div",
      {
        className: r([
          "tw-flex-none tw-flex tw-items-center tw-absolute",
          f === "Large" ? "tw-right-5 tw-gap-1.5" : "tw-right-3 tw-gap-1"
        ])
      },
      p && /* @__PURE__ */ t.createElement(
        "button",
        {
          ...x,
          "data-test-id": "dropdown-clear-button",
          "aria-label": "Clear selection",
          type: "button",
          className: r([
            d && m,
            o ? "tw-pointer-events-none tw-text-black-40" : "tw-text-black-80"
          ]),
          onClick: () => !!l && l()
        },
        /* @__PURE__ */ t.createElement(F, { size: w.Size12 })
      ),
      !!s && /* @__PURE__ */ t.createElement(
        "button",
        {
          ...k,
          "data-test-id": "dropdown-delete-button",
          "aria-label": "Delete selection",
          type: "button",
          className: r([
            "tw-rounded",
            E && m,
            o ? "tw-pointer-events-none tw-text-black-40" : "tw-text-black-80"
          ]),
          onClick: s
        },
        /* @__PURE__ */ t.createElement(C, { size: w.Size12 })
      ),
      /* @__PURE__ */ t.createElement("div", { "aria-hidden": !0 }, /* @__PURE__ */ t.createElement(
        "button",
        {
          ...e,
          type: "button",
          tabIndex: -1,
          disabled: o,
          className: r([
            "tw-rounded",
            o ? "tw-pointer-events-none tw-text-black-40" : r([
              "group-hover:tw-text-black ",
              c ? "tw-text-black-100" : "tw-text-black-80",
              v
            ])
          ])
        },
        /* @__PURE__ */ t.createElement("div", { className: r(["tw-transition-transform", c && "tw-rotate-180"]) }, /* @__PURE__ */ t.createElement(N, { size: w.Size16 }))
      )),
      (a === n.Error || a === n.Warning) && /* @__PURE__ */ t.createElement(
        "span",
        {
          className: r([
            "tw-flex tw-items-center tw-justify-center",
            a === n.Error && "tw-text-text-negative",
            a === n.Warning && "tw-text-text-warning"
          ]),
          "data-test-id": "error-state-exclamation-mark-icon"
        },
        /* @__PURE__ */ t.createElement(I, null)
      )
    )
  );
};
z.displayName = "FondueTrigger";
export {
  z as Trigger,
  D as TriggerEmphasis,
  h as TriggerSize
};
//# sourceMappingURL=Trigger.es.js.map
