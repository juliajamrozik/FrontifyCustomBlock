import { IconSize as u } from "../../foundation/Icon/IconSize.es.js";
import { useButton as a } from "@react-aria/button";
import { useFocusRing as m } from "@react-aria/focus";
import { mergeProps as b } from "@react-aria/utils";
import { FOCUS_STYLE as x } from "../../utilities/focusStyle.es.js";
import { merge as g } from "../../utilities/merge.es.js";
import o, { useRef as v } from "react";
import S from "../../foundation/Icon/Generated/IconCross.es.js";
var p = /* @__PURE__ */ ((e) => (e.Suggested = "Suggested", e.Selected = "Selected", e.SelectedWithFocus = "SelectedWithFocus", e.PreviouslySelected = "PreviouslySelected", e))(p || {}), h = /* @__PURE__ */ ((e) => (e.Small = "Small", e.Medium = "Medium", e))(h || {});
const f = {
  Suggested: "tw-border tw-bg-base tw-text-text-weak tw-border-line hover:tw-text-text hover:tw-border-line-strong",
  Selected: "tw-bg-box-neutral hover:tw-bg-box-neutral-hover tw-text-text-weak hover:tw-text-box-neutral-inverse-hover",
  SelectedWithFocus: "tw-bg-box-selected-strong hover:tw-bg-box-selected-strong-hover tw-text-box-selected-strong-inverse",
  PreviouslySelected: "tw-bg-base tw-border tw-text-box-selected-strong tw-border-box-selected-strong hover:tw-bg-box-neutral hover:tw-text-box-selected-inverse hover:tw-border-box-selected-inverse"
}, F = ({ type: e, label: l, onClick: r, size: n = "Medium", "data-test-id": s = "tag" }) => {
  const i = v(null), { isFocusVisible: c, focusProps: w } = m(), t = (e === "Selected" || e === "SelectedWithFocus") && r, { buttonProps: d } = a(
    {
      onPress: () => t && r()
    },
    i
  );
  return /* @__PURE__ */ o.createElement(
    "button",
    {
      "data-test-id": s,
      className: g([
        "tw-inline-flex tw-items-center tw-rounded-full tw-text-xs tw-transition-colors tw-group tw-outline-none tw-break-word",
        n === "Small" ? "tw-px-1.5 tw-py-0.5" : "tw-px-2.5 tw-py-1",
        f[e],
        t ? "tw-cursor-pointer" : "tw-cursor-default",
        c && x
      ]),
      ...b(d, w)
    },
    l,
    t && /* @__PURE__ */ o.createElement(
      "span",
      {
        "data-test-id": `${s}-reject-icon`,
        className: "tw-opacity-80 group-hover:tw-opacity-100 tw-transition-opacity tw-ml-1 tw-leading-[0]"
      },
      /* @__PURE__ */ o.createElement(S, { size: u.Size12 })
    )
  );
};
F.displayName = "FondueTag";
export {
  F as Tag,
  h as TagSize,
  p as TagType,
  f as tagStyles
};
//# sourceMappingURL=Tag.es.js.map
