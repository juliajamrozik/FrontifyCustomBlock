{"version":3,"file":"useOverlayPositionWithBottomMargin.es.js","sources":["../../../../src/components/Flyout/hooks/useOverlayPositionWithBottomMargin.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { AriaPositionProps, useOverlayPosition } from '@react-aria/overlays';\nimport { MutableRefObject, useLayoutEffect, useState } from 'react';\nimport { getTotalOverlayHeight } from '../helpers/getTotalOverlayHeight';\nimport { getVerticalPositioning } from '../helpers/getVerticalPositioning';\nimport { FlyoutPlacement } from '@components/Flyout';\n\nconst FLYOUT_OVERLAY_OFFSET = 5;\nconst DEFAULT_OVERLAY_PADDING = 12;\nconst INTERCOM_BUTTON_HEIGHT = 70;\n\ntype UseOverlayPositionWithBottomMarginProps = {\n    triggerRef: MutableRefObject<HTMLElement | null>;\n    overlayRef: MutableRefObject<HTMLElement | null>;\n    scrollRef: MutableRefObject<HTMLElement | null>;\n    isOpen: boolean;\n    placement?: FlyoutPlacement;\n    offset?: number;\n    updatePositionOnContentChange: boolean;\n};\n\nconst flippedPositionMap: Record<FlyoutPlacement, AriaPositionProps['placement']> = {\n    ['top']: 'bottom',\n    ['bottom']: 'top',\n    ['left']: 'right',\n    ['right']: 'left',\n    ['top left']: 'bottom left',\n    ['top right']: 'bottom right',\n    ['bottom left']: 'top left',\n    ['bottom right']: 'top right',\n};\n\nexport const useOverlayPositionWithBottomMargin = ({\n    triggerRef,\n    overlayRef,\n    scrollRef,\n    isOpen,\n    placement,\n    offset,\n    updatePositionOnContentChange,\n}: UseOverlayPositionWithBottomMarginProps) => {\n    const [flipVerticalPosition, setFlipVerticalPosition] = useState(false);\n    const flippedPosition = placement && flippedPositionMap[placement];\n    const verticalPosition = flipVerticalPosition ? flippedPosition : placement;\n\n    const { overlayProps: positionProps, updatePosition } = useOverlayPosition({\n        targetRef: triggerRef,\n        overlayRef,\n        shouldFlip: placement === FlyoutPlacement.Left || placement === FlyoutPlacement.Right,\n        placement:\n            placement && (placement === FlyoutPlacement.Left || placement === FlyoutPlacement.Right)\n                ? placement\n                : verticalPosition,\n        containerPadding: DEFAULT_OVERLAY_PADDING,\n        offset: offset ?? FLYOUT_OVERLAY_OFFSET,\n        scrollRef,\n        isOpen,\n    });\n\n    useLayoutEffect(() => {\n        const resizeObserver = new ResizeObserver(updatePosition);\n\n        if (isOpen) {\n            const overlayHeight = getTotalOverlayHeight(overlayRef, scrollRef);\n            const shouldFlip =\n                getVerticalPositioning(triggerRef.current, overlayHeight, FLYOUT_OVERLAY_OFFSET, INTERCOM_BUTTON_HEIGHT)\n                    .position === 'top';\n            setFlipVerticalPosition(shouldFlip);\n\n            if (scrollRef.current && updatePositionOnContentChange) {\n                resizeObserver.observe(scrollRef.current);\n            }\n            if (overlayRef.current && updatePositionOnContentChange) {\n                resizeObserver.observe(overlayRef.current);\n            }\n        }\n\n        return () => {\n            resizeObserver.disconnect();\n        };\n    }, [isOpen, updatePositionOnContentChange, updatePosition, scrollRef, overlayRef, triggerRef]);\n\n    if (typeof positionProps?.style?.maxHeight === 'number' && !flipVerticalPosition) {\n        const heightToSubtract = INTERCOM_BUTTON_HEIGHT - DEFAULT_OVERLAY_PADDING;\n        positionProps.style.maxHeight -= heightToSubtract;\n    }\n\n    return { positionProps };\n};\n"],"names":["FLYOUT_OVERLAY_OFFSET","DEFAULT_OVERLAY_PADDING","INTERCOM_BUTTON_HEIGHT","flippedPositionMap","useOverlayPositionWithBottomMargin","triggerRef","overlayRef","scrollRef","isOpen","placement","offset","updatePositionOnContentChange","flipVerticalPosition","setFlipVerticalPosition","useState","flippedPosition","verticalPosition","positionProps","updatePosition","useOverlayPosition","FlyoutPlacement","useLayoutEffect","resizeObserver","overlayHeight","getTotalOverlayHeight","shouldFlip","getVerticalPositioning","_a","heightToSubtract"],"mappings":";;;;;AAQA,MAAMA,IAAwB,GACxBC,IAA0B,IAC1BC,IAAyB,IAYzBC,IAA8E;AAAA,EAC/E,KAAQ;AAAA,EACR,QAAW;AAAA,EACX,MAAS;AAAA,EACT,OAAU;AAAA,EACX,CAAC,UAAU,GAAG;AAAA,EACd,CAAC,WAAW,GAAG;AAAA,EACf,CAAC,aAAa,GAAG;AAAA,EACjB,CAAC,cAAc,GAAG;AACtB,GAEaC,IAAqC,CAAC;AAAA,EAC/C,YAAAC;AAAA,EACA,YAAAC;AAAA,EACA,WAAAC;AAAA,EACA,QAAAC;AAAA,EACA,WAAAC;AAAA,EACA,QAAAC;AAAA,EACA,+BAAAC;AACJ,MAA+C;;AAC3C,QAAM,CAACC,GAAsBC,CAAuB,IAAIC,EAAS,EAAK,GAChEC,IAAkBN,KAAaN,EAAmBM,CAAS,GAC3DO,IAAmBJ,IAAuBG,IAAkBN,GAE5D,EAAE,cAAcQ,GAAe,gBAAAC,EAAA,IAAmBC,EAAmB;AAAA,IACvE,WAAWd;AAAA,IACX,YAAAC;AAAA,IACA,YAAYG,MAAcW,EAAgB,QAAQX,MAAcW,EAAgB;AAAA,IAChF,WACIX,MAAcA,MAAcW,EAAgB,QAAQX,MAAcW,EAAgB,SAC5EX,IACAO;AAAA,IACV,kBAAkBf;AAAA,IAClB,QAAQS,KAAUV;AAAA,IAClB,WAAAO;AAAA,IACA,QAAAC;AAAA,EAAA,CACH;AAyBD,MAvBAa,EAAgB,MAAM;AACZ,UAAAC,IAAiB,IAAI,eAAeJ,CAAc;AAExD,QAAIV,GAAQ;AACF,YAAAe,IAAgBC,EAAsBlB,GAAYC,CAAS,GAC3DkB,IACFC,EAAuBrB,EAAW,SAASkB,GAAevB,GAAuBE,CAAsB,EAClG,aAAa;AACtB,MAAAW,EAAwBY,CAAU,GAE9BlB,EAAU,WAAWI,KACNW,EAAA,QAAQf,EAAU,OAAO,GAExCD,EAAW,WAAWK,KACPW,EAAA,QAAQhB,EAAW,OAAO;AAAA,IAEjD;AAEA,WAAO,MAAM;AACT,MAAAgB,EAAe,WAAW;AAAA,IAAA;AAAA,EAC9B,GACD,CAACd,GAAQG,GAA+BO,GAAgBX,GAAWD,GAAYD,CAAU,CAAC,GAEzF,SAAOsB,IAAAV,KAAA,gBAAAA,EAAe,UAAf,gBAAAU,EAAsB,cAAc,YAAY,CAACf,GAAsB;AAC9E,UAAMgB,IAAmB1B,IAAyBD;AAClD,IAAAgB,EAAc,MAAM,aAAaW;AAAA,EACrC;AAEA,SAAO,EAAE,eAAAX,EAAc;AAC3B;"}