{"version":3,"file":"useContainScroll.es.js","sources":["../../../../src/components/Flyout/hooks/useContainScroll.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { MutableRefObject, useEffect } from 'react';\n\nexport const useContainScroll = (overlayRef: MutableRefObject<HTMLDivElement | null>, { isDisabled = false }) => {\n    useEffect(() => {\n        const overlay = overlayRef.current;\n\n        const closestScrollableAncestor = (element: HTMLElement | null): HTMLElement | null => {\n            const SCROLL_TYPES = ['auto', 'scroll'];\n            if (!element || element === overlay) {\n                return null;\n            }\n            const hasVisibleScroll = SCROLL_TYPES.includes(window.getComputedStyle(element).overflowY);\n            if (element.scrollHeight > element.clientHeight && hasVisibleScroll) {\n                return element;\n            } else {\n                return closestScrollableAncestor(element.parentElement);\n            }\n        };\n\n        const scrollHandler = (event: WheelEvent) => {\n            const prevent = () => {\n                event.stopPropagation();\n                event.preventDefault();\n            };\n            if (overlay !== null) {\n                const deltaY = event.deltaY;\n                const up = deltaY < 0;\n                const scrollableAncestor = closestScrollableAncestor(event.target as HTMLElement) ?? overlay;\n                const { scrollTop, scrollHeight, clientHeight } = scrollableAncestor;\n\n                if (!up && deltaY > scrollHeight - clientHeight - scrollTop) {\n                    // Scrolling down, but this will take us past the bottom.\n                    scrollableAncestor.scrollTop = scrollHeight;\n                    prevent();\n                    return false;\n                } else if (up && -deltaY > scrollTop) {\n                    // Scrolling up, but this will take us past the top.\n                    scrollableAncestor.scrollTop = 0;\n                    prevent();\n                    return false;\n                }\n            }\n        };\n\n        const eventProps = { passive: false, capture: false };\n\n        if (!isDisabled && overlay !== null) {\n            overlay.addEventListener('wheel', scrollHandler, eventProps);\n        }\n\n        return () => {\n            if (!isDisabled && overlay !== null) {\n                overlay.removeEventListener('wheel', scrollHandler, eventProps);\n            }\n        };\n    }, [isDisabled, overlayRef]);\n};\n"],"names":["useContainScroll","overlayRef","isDisabled","useEffect","overlay","closestScrollableAncestor","element","SCROLL_TYPES","hasVisibleScroll","scrollHandler","event","prevent","deltaY","up","scrollableAncestor","scrollTop","scrollHeight","clientHeight","eventProps"],"mappings":";AAIO,MAAMA,IAAmB,CAACC,GAAqD,EAAE,YAAAC,IAAa,SAAY;AAC7G,EAAAC,EAAU,MAAM;AACZ,UAAMC,IAAUH,EAAW,SAErBI,IAA4B,CAACC,MAAoD;AAC7E,YAAAC,IAAe,CAAC,QAAQ,QAAQ;AAClC,UAAA,CAACD,KAAWA,MAAYF;AACjB,eAAA;AAEX,YAAMI,IAAmBD,EAAa,SAAS,OAAO,iBAAiBD,CAAO,EAAE,SAAS;AACzF,aAAIA,EAAQ,eAAeA,EAAQ,gBAAgBE,IACxCF,IAEAD,EAA0BC,EAAQ,aAAa;AAAA,IAC1D,GAGEG,IAAgB,CAACC,MAAsB;AACzC,YAAMC,IAAU,MAAM;AAClB,QAAAD,EAAM,gBAAgB,GACtBA,EAAM,eAAe;AAAA,MAAA;AAEzB,UAAIN,MAAY,MAAM;AAClB,cAAMQ,IAASF,EAAM,QACfG,IAAKD,IAAS,GACdE,IAAqBT,EAA0BK,EAAM,MAAqB,KAAKN,GAC/E,EAAE,WAAAW,GAAW,cAAAC,GAAc,cAAAC,EAAA,IAAiBH;AAElD,YAAI,CAACD,KAAMD,IAASI,IAAeC,IAAeF;AAE9C,iBAAAD,EAAmB,YAAYE,GACvBL,KACD;AACA,YAAAE,KAAM,CAACD,IAASG;AAEvB,iBAAAD,EAAmB,YAAY,GACvBH,KACD;AAAA,MAEf;AAAA,IAAA,GAGEO,IAAa,EAAE,SAAS,IAAO,SAAS,GAAM;AAEhD,WAAA,CAAChB,KAAcE,MAAY,QACnBA,EAAA,iBAAiB,SAASK,GAAeS,CAAU,GAGxD,MAAM;AACL,MAAA,CAAChB,KAAcE,MAAY,QACnBA,EAAA,oBAAoB,SAASK,GAAeS,CAAU;AAAA,IAClE;AAAA,EACJ,GACD,CAAChB,GAAYD,CAAU,CAAC;AAC/B;"}