import { Badge as h } from "../Badge/Badge.es.js";
import { FieldsetHeader as k } from "../FieldsetHeader/FieldsetHeader.es.js";
import { useDialog as N } from "@react-aria/dialog";
import { useOverlay as P, useModal as D, DismissButton as O } from "@react-aria/overlays";
import { mergeProps as B } from "@react-aria/utils";
import { merge as l } from "../../utilities/merge.es.js";
import e, { forwardRef as R, Children as $ } from "react";
const j = ({
  title: o,
  decorator: n,
  badges: s = [],
  onClose: i,
  children: d,
  isOpen: c,
  positionProps: p,
  overlayTriggerProps: f,
  scrollRef: v,
  fixedHeader: w,
  fixedFooter: m,
  fitContent: u,
  contentMinHeight: x
}, t) => {
  const { overlayProps: y } = P({ onClose: i, isOpen: c, isDismissable: !0 }, t), { modalProps: g } = D(), { dialogProps: b, titleProps: E } = N({}, t);
  return /* @__PURE__ */ e.createElement(
    "div",
    {
      ...B(y, b, g, p, f),
      ref: t,
      className: l([
        "tw-rounded tw-flex tw-outline-none tw-relative",
        u ? "tw-min-w-0" : "tw-min-w-[400px]"
      ])
    },
    /* @__PURE__ */ e.createElement(
      "div",
      {
        className: l([
          "tw-flex tw-flex-col tw-flex-auto tw-min-h-0 tw-rounded tw-shadow-mid tw-border tw-border-line-x-strong"
        ])
      },
      w,
      /* @__PURE__ */ e.createElement(
        "div",
        {
          ref: v,
          className: l([
            "tw-flex tw-overflow-y-auto tw-overflow-x-hidden tw-flex-col tw-divide-y tw-divide tw-divide-black-10 tw-bg-white tw-text-black dark:tw-text-white dark:tw-bg-black-95",
            !w && "tw-rounded-t",
            !m && "tw-rounded-b"
          ]),
          style: {
            minHeight: `${x}px`
          }
        },
        o && /* @__PURE__ */ e.createElement("div", { className: "tw-flex tw-justify-between tw-flex-wrap tw-gap-3 tw-p-8" }, /* @__PURE__ */ e.createElement("div", { ...E, className: "tw-inline-flex" }, /* @__PURE__ */ e.createElement(k, { decorator: n }, o)), /* @__PURE__ */ e.createElement("div", { className: "tw-inline-flex tw-gap-2 tw-flex-wrap" }, s.map((r, a) => /* @__PURE__ */ e.createElement(h, { ...r, key: `flyout-badge-${a}` })))),
        $.map(d, (r, a) => /* @__PURE__ */ e.createElement("div", { key: a }, r)),
        /* @__PURE__ */ e.createElement(O, { onDismiss: i })
      ),
      m
    )
  );
}, C = R(j);
C.displayName = "FondueOverlay";
export {
  C as Overlay
};
//# sourceMappingURL=Overlay.es.js.map
