import { BadgeProps } from '../Badge';
import { HTMLAttributes, MouseEvent, MutableRefObject, ReactElement, ReactNode } from 'react';
export declare const FLYOUT_DIVIDER_COLOR = "#eaebeb";
export declare const FLYOUT_DIVIDER_HEIGHT = "10px";
export declare enum FlyoutPlacement {
    Top = "top",
    Bottom = "bottom",
    TopLeft = "top left",
    BottomLeft = "bottom left",
    TopRight = "top right",
    BottomRight = "bottom right",
    Right = "right",
    Left = "left"
}
export type FlyoutProps = {
    trigger: ReactNode | ((triggerProps: HTMLAttributes<HTMLElement>, ref: MutableRefObject<HTMLElement | null>, triggerState: {
        isFocusVisible: boolean;
        isPressed: boolean;
    }) => JSX.Element);
    onCancel?: () => void;
    onConfirm?: (event?: MouseEvent<HTMLButtonElement>) => void;
    title?: string;
    decorator?: ReactNode;
    badges?: BadgeProps[];
    hug?: boolean;
    fitContent?: boolean;
    isOpen?: boolean;
    onOpenChange: (isOpen: boolean) => void;
    fixedHeader?: ReactNode;
    fixedFooter?: ReactNode;
    contentMinHeight?: number;
    /**
     * The legacy footer buttons section inside of the flyout will be deleted in the future.
     * @deprecated Pass the FlyoutFooter component with buttons to the Flyout component.
     */
    legacyFooter?: boolean;
    placement?: FlyoutPlacement;
    offset?: number;
    updatePositionOnContentChange?: boolean;
    isTriggerDisabled?: boolean;
    children?: ReactNode;
};
export declare const Flyout: {
    ({ trigger, isTriggerDisabled, decorator, onConfirm, onCancel, children, onOpenChange, isOpen, title, badges, hug, fitContent, fixedHeader, fixedFooter, contentMinHeight, legacyFooter, placement, offset, updatePositionOnContentChange, }: FlyoutProps): ReactElement;
    displayName: string;
};
