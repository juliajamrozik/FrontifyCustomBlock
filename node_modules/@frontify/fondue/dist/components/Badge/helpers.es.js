import { BadgeStyle as o, BadgeStatus as n } from "./types.es.js";
import { merge as t } from "../../utilities/merge.es.js";
const a = (r, e, s) => (s ? {
  [o.Primary]: t([
    "tw-bg-box-neutral-strong tw-text-box-neutral-strong-inverse",
    e && "hover:tw-bg-box-neutral-strong-hover hover:tw-text-box-neutral-strong-inverse-hover"
  ]),
  [o.Positive]: t([
    "tw-bg-box-positive-strong tw-text-box-positive-strong-inverse",
    e && "hover:tw-bg-box-positive-strong-hover hover:tw-text-box-positive-strong-inverse-hover"
  ]),
  [o.Danger]: t([
    "tw-bg-box-negative-strong tw-text-box-negative-strong-inverse",
    e && "hover:tw-bg-box-negative-strong-hover hover:tw-text-box-negative-strong-inverse-hover"
  ]),
  [o.Progress]: t([
    "tw-bg-box-selected-strong tw-text-box-selected-strong-inverse",
    e && "hover:tw-bg-box-selected-strong-hover hover:tw-text-box-selected-strong-inverse-hover"
  ]),
  [o.Warning]: t([
    "tw-bg-box-warning-strong tw-text-box-warning-strong-inverse",
    e && "hover:tw-bg-box-warning-strong-hover hover:tw-text-box-warning-strong-inverse-hover"
  ])
} : {
  [o.Primary]: t([
    "tw-bg-box-neutral tw-text-box-neutral-inverse",
    e && "hover:tw-bg-box-neutral-hover hover:tw-text-box-neutral-inverse-hover"
  ]),
  [o.Positive]: t([
    "tw-bg-box-positive tw-text-box-positive-inverse",
    e && "hover:tw-bg-box-positive-hover hover:tw-text-box-positive-inverse-hover"
  ]),
  [o.Progress]: t([
    "tw-bg-box-selected tw-text-box-selected-inverse",
    e && "hover:tw-bg-box-selected-hover hover:tw-text-box-selected-inverse-hover"
  ]),
  [o.Warning]: t([
    "tw-bg-box-warning tw-text-box-warning-inverse",
    e && "hover:tw-bg-box-warning-hover hover:tw-text-box-warning-inverse-hover"
  ]),
  [o.Danger]: t([
    "tw-bg-box-negative tw-text-box-negative-inverse",
    e && "hover:tw-bg-box-negative-hover hover:tw-text-box-negative-inverse-hover"
  ])
})[r] ?? "", l = (r) => Object.values(n).includes(r), h = (r) => ({
  small: "tw-h-5 tw-w-5",
  medium: "tw-h-6 tw-w-6"
})[r], c = (r, e, s, i, g) => {
  if (i === "small")
    return t(["tw-h-5 tw-px-1.5", g && "tw-pr-5"]);
  {
    const v = !Boolean(r && e && s);
    return t(["tw-h-6", "tw-px-2", v && "tw-gap-x-0.5", g && "tw-pr-6"]);
  }
}, u = {
  [n.Positive]: "tw-bg-green-60",
  [n.Progress]: "tw-bg-violet-60",
  [n.Warning]: "tw-bg-yellow-60",
  [n.Danger]: "tw-bg-red-60"
};
export {
  u as badgeStatusClasses,
  h as getCircularSizeClasses,
  c as getSizeClasses,
  a as getStyleClasses,
  l as isBadgeStatus
};
//# sourceMappingURL=helpers.es.js.map
