import e from "react";
import { SPACING_VALUES as r, PADDING_VALUES_MAP as s, MARGIN_VALUES_MAP as n } from "../../utilities/dimensions.es.js";
import { merge as y } from "../../utilities/merge.es.js";
import { Box as C } from "../Box/Box.es.js";
const P = {
  row: "tw-flex-row",
  column: "tw-flex-col",
  "row-reverse": "tw-flex-row-reverse",
  "column-reverse": "tw-flex-col-reverse"
}, T = {
  start: "tw-justify-start",
  end: "tw-justify-end",
  center: "tw-justify-center",
  between: "tw-justify-between",
  around: "tw-justify-around",
  evenly: "tw-justify-evenly"
}, E = {
  start: "tw-items-start",
  end: "tw-items-end",
  center: "tw-items-center",
  baseline: "tw-items-baseline",
  stretch: "tw-items-stretch"
}, p = "fondue-stack", v = ({
  children: a,
  "data-test-id": o = p,
  direction: c = "column",
  spacing: l = 0,
  divider: m,
  padding: t = 0,
  margin: i = 0,
  justify: w = "start",
  alignItems: d = "start",
  bg: u,
  color: f,
  as: A = "div"
}) => {
  const _ = r.includes(t) ? s[t] : s[0], S = r.includes(t) ? n[i] : n[0], I = e.Children.map(a, (N) => /* @__PURE__ */ e.createElement(e.Fragment, null, N, m));
  return /* @__PURE__ */ e.createElement(
    C,
    {
      "data-test-id": o,
      className: y([
        "tw-flex",
        T[w],
        E[d],
        P[c],
        _,
        S,
        u,
        f
      ]),
      style: {
        gap: l
      },
      as: A
    },
    I
  );
};
v.displayName = "FondueStack";
export {
  P as STACK_DIRECTION_MAPPING,
  p as STACK_TEST_ID,
  v as Stack
};
//# sourceMappingURL=Stack.es.js.map
