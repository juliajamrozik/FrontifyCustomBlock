import w from "../../foundation/Icon/Generated/IconQuestionMarkCircle.es.js";
import { generateRandomId as d } from "../../utilities/generateRandomId.es.js";
import { merge as n } from "../../utilities/merge.es.js";
import t, { useRef as b, useState as x, Children as v, isValidElement as g, useEffect as m } from "react";
import { RadioButtonEmphasis as k } from "./RadioButton.es.js";
import { Tooltip as E, TooltipAlignment as h, TooltipPosition as z } from "../Tooltip/Tooltip.es.js";
import { IconSize as N } from "../../foundation/Icon/IconSize.es.js";
var R = /* @__PURE__ */ ((a) => (a.Horizontal = "Horizontal", a.Vertical = "Vertical", a))(R || {});
const I = ({
  children: a,
  defaultValue: o,
  direction: p = "Horizontal",
  onChange: s,
  ariaLabel: u
}) => {
  const l = b(null), [r, c] = x(o), f = v.map(a, (e) => g(e) ? e == null ? void 0 : e.props : null) ?? [];
  return m(() => {
    c(o);
  }, [o]), m(() => {
    if (l.current) {
      const e = l.current.querySelector(`input[value="${r}"]`);
      e && e.focus();
    }
  }, [r]), /* @__PURE__ */ t.createElement(
    "div",
    {
      "data-test-id": "radio-list-wrapper",
      role: "radiogroup",
      "aria-label": u ?? "Choose an option",
      ref: l,
      className: n(["tw-flex", p === "Horizontal" ? "tw-gap-4" : "tw-flex-col"])
    },
    f.map((e) => {
      const i = d();
      return /* @__PURE__ */ t.createElement("div", { className: "tw-flex tw-items-center tw-mb-2", key: i }, /* @__PURE__ */ t.createElement(
        "input",
        {
          "data-test-id": "radio-input",
          disabled: e.disabled,
          id: i,
          type: "radio",
          name: "default-radio",
          value: e.value,
          "aria-label": "radio",
          "aria-checked": e.value === r,
          defaultChecked: e.value === r,
          className: n([
            "tw-peer tw-form-radio w-w-4 tw-h-4 tw-border-black-60 disabled:tw-border-black-10 focus:tw-ring-0 focus:tw-ring-offset-0 focus-visible:tw-ring-2 focus-visible:tw-ring-offset-2",
            e.emphasis === k.Weak ? "tw-text-black-80" : "tw-text-box-selected-strong"
          ]),
          onChange: () => {
            c(e.value), s && s(e.value);
          }
        }
      ), !e.hideLabel && /* @__PURE__ */ t.createElement(
        "label",
        {
          "data-test-id": "radio-label",
          htmlFor: i,
          className: n([
            "tw-flex tw-flex-col tw-pl-2 tw-text-sm tw-font-normal peer-checked:tw-font-medium tw-text-black-80 peer-disabled:tw-text-black-40"
          ])
        },
        e.value,
        e.helperText && /* @__PURE__ */ t.createElement("span", { className: "tw-text-black-80 tw-font-normal" }, e.helperText)
      ), e.tooltip && /* @__PURE__ */ t.createElement(
        E,
        {
          alignment: h.Middle,
          content: e.tooltip,
          hoverDelay: 75,
          position: z.Top,
          triggerElement: /* @__PURE__ */ t.createElement("button", { className: "tw-flex tw-text-black-80 tw-mx-2 tw-self-center" }, /* @__PURE__ */ t.createElement(w, { size: N.Size16 })),
          withArrow: !0
        }
      ));
    })
  );
};
export {
  I as RadioList,
  R as RadioListDirection
};
//# sourceMappingURL=RadioList.es.js.map
