import n, { useRef as K, useState as b, Children as O, isValidElement as A, useCallback as z, useEffect as L, cloneElement as V } from "react";
import { merge as u } from "../../utilities/merge.es.js";
import { motion as U } from "framer-motion";
import { useFocusRing as W } from "@react-aria/focus";
import { FOCUS_STYLE as H } from "../../utilities/focusStyle.es.js";
import { useMemoizedId as Y } from "../../hooks/useMemoizedId.es.js";
import _ from "../../foundation/Icon/Generated/IconDotsHorizontal.es.js";
import { Badge as $ } from "../Badge/Badge.es.js";
var q = /* @__PURE__ */ ((l) => (l.None = "None", l.XSmall = "XSmall", l.Small = "Small", l.Medium = "Medium", l.Large = "Large", l))(q || {}), G = /* @__PURE__ */ ((l) => (l.Small = "Small", l.Large = "Large", l))(G || {});
const J = {
  None: "tw-pl-0",
  XSmall: "tw-pl-xs",
  Small: "tw-pl-s",
  Medium: "tw-pl-m",
  Large: "tw-pl-l"
}, P = ({
  paddingX: l,
  size: y,
  activeItemId: a,
  children: E,
  onChange: h,
  maxHeight: B,
  minHeight: C
}) => {
  const M = Y(), v = K(null), [k, R] = b(!1), [w, c] = b(!1), p = O.map(E, (e) => A(e) ? e == null ? void 0 : e.props : null) ?? [], [T, D] = b([0]), i = z(() => {
    const e = v.current;
    R((e && e.scrollWidth > e.clientWidth) ?? !1);
    const r = [];
    if (e) {
      for (const t of e.children) {
        const s = [...e.children].indexOf(t), m = e.getBoundingClientRect(), f = t.getBoundingClientRect();
        (f.right > m.right || f.left < m.left) && r.push(s);
      }
      const o = [...r].sort((t, s) => t - s);
      D(o);
    }
  }, []), g = () => T.map((e) => p[e]), N = (e, r) => {
    const o = e.findIndex((t) => t.id === a);
    return e.filter((t, s) => r === "next" && s > o && !t.disabled || r === "previous" && s < o && !t.disabled ? t : !1);
  }, S = (e) => {
    e.stopPropagation();
    const r = g(), o = e.target, t = o.id.includes("-m"), s = o.id.replace("-btn-m", ""), m = t ? r : p, f = N(m, "next"), x = N(m, "previous");
    (e.key === "ArrowRight" || e.key === "ArrowDown") && f.length > 0 && d(f[0].id, t), (e.key === "ArrowLeft" || e.key === "ArrowUp") && x.length > 0 && d(x[x.length - 1].id, t), e.key === "Enter" && t && (d(s, !0), c(!1), document.getElementById(`${s}-content`).focus()), o.id.includes("-m") || c(!1);
  }, d = (e, r) => {
    try {
      const o = document.getElementById(`${e}-btn`), t = document.getElementById(
        r ? `${e}-btn-m` : `${e}-btn`
      );
      h && h(e), k && o.scrollIntoView({ behavior: "smooth", block: "end", inline: "end" }), t.focus();
    } catch (o) {
      throw o.message;
    }
  }, F = (e) => {
    i();
    const r = g();
    if (e.key === "Enter" && !w && r.length > 0) {
      const o = document.getElementById(`${r[0].id}-btn-m`);
      o && o.focus();
    }
    w && (e.key === "ArrowRight" || e.key === "ArrowDown") && d(r[0].id, !0);
  };
  L(() => {
    i();
  }, [i]), L(() => (window.addEventListener("resize", i), () => {
    window.removeEventListener("resize", i);
  }), [i]);
  const { isFocusVisible: I, focusProps: j } = W();
  return /* @__PURE__ */ n.createElement(n.Fragment, null, /* @__PURE__ */ n.createElement("div", { "data-test-id": "tabs", className: "tw-flex tw-relative tw-border-b tw-border-line" }, /* @__PURE__ */ n.createElement(
    "div",
    {
      ref: v,
      role: "tablist",
      className: u([
        "tw-overflow-x-hidden tw-flex-shrink-0 tw-h-full tw-w-full tw-flex tw-justify-start",
        J[
          l ?? "Small"
          /* Small */
        ],
        y === "Small" ? "tw-gap-xxs" : "tw-gap-xs "
      ])
    },
    p.map((e) => /* @__PURE__ */ n.createElement(
      "button",
      {
        "data-test-id": "tab-item",
        role: "tab",
        type: "button",
        "aria-selected": e.id === a,
        "aria-controls": `${e.id}-content`,
        "aria-hidden": e.disabled,
        tabIndex: e.id === a ? 0 : -1,
        id: `${e.id}-btn`,
        className: u([
          "tw-group tw-relative tw-mx-0 tw-py-4 tw-px-2 tw-w-max tw-cursor-pointer tw-flex tw-items-center tw-justify-center tw-whitespace-nowrap",
          e.disabled && "tw-text-text-disabled",
          !e.disabled && "hover:tw-text-text",
          e.id === a ? "tw-font-medium tw-text-text" : "tw-text-text-weak",
          y === "Small" ? "tw-text-sm" : "tw-text-md"
        ]),
        key: e.id,
        onClick: () => {
          e.disabled || (d(e.id, !1), c(!1));
        },
        onKeyDown: (r) => S(r)
      },
      e.decorator && /* @__PURE__ */ n.createElement("span", { className: "tw-mr-1.5" }, e.decorator),
      /* @__PURE__ */ n.createElement("span", null, e.label),
      e.badge && /* @__PURE__ */ n.createElement("span", { className: "tw-ml-1.5" }, /* @__PURE__ */ n.createElement($, { disabled: e.disabled, style: e.badge.style }, e.badge.children)),
      e.id === a && /* @__PURE__ */ n.createElement(
        U.div,
        {
          initial: !1,
          layoutDependency: a,
          "data-test-id": "tab-active-highlight",
          layoutId: M,
          className: "tw-absolute tw-h-[3px] tw-bg-box-selected-strong tw-rounded-t-x-large tw-w-full tw-bottom-0"
        }
      )
    ))
  ), k && /* @__PURE__ */ n.createElement(
    "div",
    {
      "data-test-id": "tab-overflow",
      className: "tw-absolute tw-z-50 tw-right-3 tw-bottom-0 tw-top-0 tw-flex tw-justify-center tw-items-center"
    },
    /* @__PURE__ */ n.createElement(
      "button",
      {
        className: u([
          "tw-w-6 tw-h-6 tw-bg-box-neutral tw-rounded tw-flex tw-justify-center tw-items-center",
          I ? H : ""
        ]),
        type: "button",
        onClick: () => {
          i(), c(!w);
        },
        onKeyDown: (e) => F(e),
        ...j
      },
      /* @__PURE__ */ n.createElement(_, null)
    ),
    w && /* @__PURE__ */ n.createElement(
      "div",
      {
        className: "tw-absolute tw-right-0 tw-top-11 tw-px-3 tw-pt-3 tw-bg-base tw-shadow tw-w-max",
        role: "dialog"
      },
      g().map((e) => {
        var r, o;
        return /* @__PURE__ */ n.createElement(
          "button",
          {
            className: u([
              "tw-flex tw-items-center tw-w-full tw-mb-3 tw-text-left tw-text-text-weak",
              e.disabled && "tw-text-text-disabled"
            ]),
            key: e.id,
            onClick: () => {
              e.disabled || (d(e.id, !0), c(!1));
            },
            role: "tab",
            type: "button",
            "aria-selected": e.id === a,
            "aria-controls": `${e.id}-content`,
            "aria-hidden": e.disabled,
            tabIndex: !e.disabled && w ? 0 : -1,
            id: `${e.id}-btn-m`,
            onKeyDown: (t) => S(t)
          },
          e.decorator,
          /* @__PURE__ */ n.createElement("span", { className: "tw-mr-1 tw-ml-1.5" }, e.label),
          e.badge && /* @__PURE__ */ n.createElement($, { disabled: e.disabled, style: (r = e.badge) == null ? void 0 : r.style }, (o = e.badge) == null ? void 0 : o.children)
        );
      })
    )
  )), /* @__PURE__ */ n.createElement("div", { "data-test-id": "tab-content", className: "tw-flex tw-flex-col tw-overflow-y-auto" }, /* @__PURE__ */ n.createElement("div", { className: "tw-mr-0", style: { maxHeight: B, minHeight: C } }, O.map(E, (e) => A(e) ? V(e, { ...e.props, active: e.props.id === a }) : null))));
};
P.displayName = "FondueTabs";
export {
  G as TabSize,
  P as Tabs,
  q as TabsPaddingX
};
//# sourceMappingURL=Tabs.es.js.map
