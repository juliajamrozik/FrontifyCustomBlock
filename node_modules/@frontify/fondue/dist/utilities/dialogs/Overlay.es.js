import { useMemoizedId as k } from "../../hooks/useMemoizedId.es.js";
import e, { useRef as D, useState as S, useCallback as h, useEffect as z, Children as L, isValidElement as P } from "react";
import { Trigger as $ } from "./Trigger.es.js";
import { Content as B } from "./Content.es.js";
import { OVERLAY_CONTAINER_CLASSES as F } from "../overlayStyle.es.js";
import { Modality as n } from "../../types/dialog.es.js";
import { merge as u } from "../merge.es.js";
import { useFocusTrap as I } from "../../hooks/useFocusTrap.es.js";
import { useClickOutside as V } from "../../hooks/useClickOutside.es.js";
import { useDropdownAutoHeight as K } from "../../hooks/useDropdownAutoHeight.es.js";
import { Z_INDEX_MODAL_BACKDROP as T } from "./constants.es.js";
import { Popper as f } from "../../components/Popper/Popper.es.js";
import { Portal as X } from "../../components/Portal/Portal.es.js";
const nt = ({
  open: t,
  placement: c,
  offset: d,
  flip: g,
  enablePortal: p,
  children: E,
  role: w = "region",
  "data-test-id": i = "fondue-overlay",
  maxWidth: y = "auto",
  maxHeight: x = "auto",
  minWidth: N = 0,
  minHeight: R = 0,
  handleClose: a,
  modality: r = n.NonModal,
  darkUnderlay: b,
  autoHeight: v,
  zIndex: C
}) => {
  const m = k(), l = D(null), [M, A] = S(null), { maxHeight: O } = K(
    { current: M },
    { isOpen: t, autoResize: !0 }
  ), H = v ? O : x, _ = h(() => {
    t && r !== n.BlockingModal && a && a();
  }, [a, r, t]);
  return I(l.current, t, r === n.NonModal), V(l.current, _), z(() => {
    t && r !== n.NonModal && (document.body.style.pointerEvents = "none"), t || (document.body.style.pointerEvents = "auto");
  }, [t, r]), /* @__PURE__ */ e.createElement(e.Fragment, null, /* @__PURE__ */ e.createElement(
    f,
    {
      "data-test-id": i,
      open: t,
      placement: c,
      offset: d,
      flip: g,
      enablePortal: p,
      zIndex: C
    },
    L.map(E, (o) => {
      if (P(o) && typeof o.type == "function") {
        const { name: s } = o.type;
        if (s === $.name)
          return /* @__PURE__ */ e.createElement(f.Reference, null, /* @__PURE__ */ e.createElement("div", { id: m, ref: A, "data-test-id": `${i}-trigger` }, o));
        if (s === B.name)
          return /* @__PURE__ */ e.createElement(f.Content, null, /* @__PURE__ */ e.createElement(
            "div",
            {
              ref: l,
              "data-test-id": `${i}-content`,
              className: u([
                "tw-flex tw-flex-col tw-pointer-events-auto",
                F
              ]),
              role: w,
              id: m,
              "aria-hidden": !t,
              "aria-labelledby": m,
              style: { minWidth: N, minHeight: R, maxWidth: y, maxHeight: H }
            },
            o
          ));
      }
    })
  ), r !== n.NonModal && t && /* @__PURE__ */ e.createElement(X, null, /* @__PURE__ */ e.createElement(
    "div",
    {
      "data-test-id": `${i}-underlay`,
      className: u([
        "tw-fixed tw-top-0 tw-left-0 tw-bottom-0 tw-right-0",
        b && "tw-transition-opacity tw-bg-black tw-opacity-50"
      ]),
      style: { zIndex: T }
    }
  )));
};
export {
  nt as Overlay
};
//# sourceMappingURL=Overlay.es.js.map
