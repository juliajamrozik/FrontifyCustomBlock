{"version":3,"file":"Overlay.es.js","sources":["../../../src/utilities/dialogs/Overlay.tsx"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { useMemoizedId } from '@hooks/useMemoizedId';\nimport { Popper } from '@components/Popper';\nimport React, { Children, isValidElement, useCallback, useEffect, useRef, useState } from 'react';\nimport { Trigger } from '@utilities/dialogs/Trigger';\nimport { Content } from '@utilities/dialogs/Content';\nimport { OVERLAY_CONTAINER_CLASSES } from '@utilities/overlayStyle';\nimport { BaseDialogProps, Modality, OverlayProps } from '../../types/dialog';\nimport { merge } from '@utilities/merge';\nimport { useFocusTrap } from '@hooks/useFocusTrap';\nimport { useClickOutside } from '@hooks/useClickOutside';\nimport { Portal } from '@components/Portal';\nimport { useDropdownAutoHeight } from '@hooks/useDropdownAutoHeight';\nimport { Z_INDEX_MODAL_BACKDROP } from '@utilities/dialogs/constants';\n\nexport const Overlay = ({\n    open,\n    placement,\n    offset,\n    flip,\n    enablePortal,\n    children,\n    role = 'region',\n    'data-test-id': dataTestId = 'fondue-overlay',\n    maxWidth = 'auto',\n    maxHeight = 'auto',\n    minWidth = 0,\n    minHeight = 0,\n    handleClose,\n    modality = Modality.NonModal,\n    darkUnderlay,\n    autoHeight,\n    zIndex,\n}: OverlayProps & BaseDialogProps) => {\n    const id = useMemoizedId();\n    const ref = useRef<HTMLDivElement | null>(null);\n    const [triggerElementRef, setTriggerElementRef] = useState<HTMLDivElement | null>(null);\n    const { maxHeight: maxAutoHeight } = useDropdownAutoHeight(\n        { current: triggerElementRef },\n        { isOpen: open, autoResize: true },\n    );\n\n    const maxContentHeight = autoHeight ? maxAutoHeight : maxHeight;\n    const handleClosingInteraction = useCallback(() => {\n        if (open && modality !== Modality.BlockingModal) {\n            if (handleClose) {\n                handleClose();\n            }\n        }\n    }, [handleClose, modality, open]);\n\n    useFocusTrap(ref.current, open, modality === Modality.NonModal);\n    useClickOutside(ref.current, handleClosingInteraction);\n\n    useEffect(() => {\n        if (open && modality !== Modality.NonModal) {\n            document.body.style.pointerEvents = 'none';\n        }\n        if (!open) {\n            document.body.style.pointerEvents = 'auto';\n        }\n    }, [open, modality]);\n\n    return (\n        <>\n            <Popper\n                data-test-id={dataTestId}\n                open={open}\n                placement={placement}\n                offset={offset}\n                flip={flip}\n                enablePortal={enablePortal}\n                zIndex={zIndex}\n            >\n                {Children.map(children, (child) => {\n                    if (isValidElement(child) && typeof child.type === 'function') {\n                        const { name } = child.type;\n\n                        if (name === Trigger.name) {\n                            return (\n                                <Popper.Reference>\n                                    <div id={id} ref={setTriggerElementRef} data-test-id={`${dataTestId}-trigger`}>\n                                        {child}\n                                    </div>\n                                </Popper.Reference>\n                            );\n                        }\n\n                        if (name === Content.name) {\n                            return (\n                                <Popper.Content>\n                                    <div\n                                        ref={ref}\n                                        data-test-id={`${dataTestId}-content`}\n                                        className={merge([\n                                            'tw-flex tw-flex-col tw-pointer-events-auto',\n                                            OVERLAY_CONTAINER_CLASSES,\n                                        ])}\n                                        role={role}\n                                        id={id}\n                                        aria-hidden={!open}\n                                        aria-labelledby={id}\n                                        style={{ minWidth, minHeight, maxWidth, maxHeight: maxContentHeight }}\n                                    >\n                                        {child}\n                                    </div>\n                                </Popper.Content>\n                            );\n                        }\n                    }\n                })}\n            </Popper>\n\n            {modality !== Modality.NonModal && open && (\n                <Portal>\n                    <div\n                        data-test-id={`${dataTestId}-underlay`}\n                        className={merge([\n                            'tw-fixed tw-top-0 tw-left-0 tw-bottom-0 tw-right-0',\n                            darkUnderlay && 'tw-transition-opacity tw-bg-black tw-opacity-50',\n                        ])}\n                        style={{ zIndex: Z_INDEX_MODAL_BACKDROP }}\n                    />\n                </Portal>\n            )}\n        </>\n    );\n};\n"],"names":["Overlay","open","placement","offset","flip","enablePortal","children","role","dataTestId","maxWidth","maxHeight","minWidth","minHeight","handleClose","modality","Modality","darkUnderlay","autoHeight","zIndex","id","useMemoizedId","ref","useRef","triggerElementRef","setTriggerElementRef","useState","maxAutoHeight","useDropdownAutoHeight","maxContentHeight","handleClosingInteraction","useCallback","useFocusTrap","useClickOutside","useEffect","React","Popper","Children","child","isValidElement","name","Trigger","Content","merge","OVERLAY_CONTAINER_CLASSES","Portal","Z_INDEX_MODAL_BACKDROP"],"mappings":";;;;;;;;;;;;;AAgBO,MAAMA,KAAU,CAAC;AAAA,EACpB,MAAAC;AAAA,EACA,WAAAC;AAAA,EACA,QAAAC;AAAA,EACA,MAAAC;AAAA,EACA,cAAAC;AAAA,EACA,UAAAC;AAAA,EACA,MAAAC,IAAO;AAAA,EACP,gBAAgBC,IAAa;AAAA,EAC7B,UAAAC,IAAW;AAAA,EACX,WAAAC,IAAY;AAAA,EACZ,UAAAC,IAAW;AAAA,EACX,WAAAC,IAAY;AAAA,EACZ,aAAAC;AAAA,EACA,UAAAC,IAAWC,EAAS;AAAA,EACpB,cAAAC;AAAA,EACA,YAAAC;AAAA,EACA,QAAAC;AACJ,MAAsC;AAClC,QAAMC,IAAKC,KACLC,IAAMC,EAA8B,IAAI,GACxC,CAACC,GAAmBC,CAAoB,IAAIC,EAAgC,IAAI,GAChF,EAAE,WAAWC,EAAA,IAAkBC;AAAA,IACjC,EAAE,SAASJ,EAAkB;AAAA,IAC7B,EAAE,QAAQtB,GAAM,YAAY,GAAK;AAAA,EAAA,GAG/B2B,IAAmBX,IAAaS,IAAgBhB,GAChDmB,IAA2BC,EAAY,MAAM;AAC3C,IAAA7B,KAAQa,MAAaC,EAAS,iBAC1BF,KACYA;EAGrB,GAAA,CAACA,GAAaC,GAAUb,CAAI,CAAC;AAEhC,SAAA8B,EAAaV,EAAI,SAASpB,GAAMa,MAAaC,EAAS,QAAQ,GAC9CiB,EAAAX,EAAI,SAASQ,CAAwB,GAErDI,EAAU,MAAM;AACR,IAAAhC,KAAQa,MAAaC,EAAS,aACrB,SAAA,KAAK,MAAM,gBAAgB,SAEnCd,MACQ,SAAA,KAAK,MAAM,gBAAgB;AAAA,EACxC,GACD,CAACA,GAAMa,CAAQ,CAAC,GAIX,gBAAAoB,EAAA,cAAAA,EAAA,UAAA,MAAA,gBAAAA,EAAA;AAAA,IAACC;AAAA,IAAA;AAAA,MACG,gBAAc3B;AAAA,MACd,MAAAP;AAAA,MACA,WAAAC;AAAA,MACA,QAAAC;AAAA,MACA,MAAAC;AAAA,MACA,cAAAC;AAAA,MACA,QAAAa;AAAA,IAAA;AAAA,IAECkB,EAAS,IAAI9B,GAAU,CAAC+B,MAAU;AAC/B,UAAIC,EAAeD,CAAK,KAAK,OAAOA,EAAM,QAAS,YAAY;AACrD,cAAA,EAAE,MAAAE,EAAK,IAAIF,EAAM;AAEnB,YAAAE,MAASC,EAAQ;AACjB,iBACK,gBAAAN,EAAA,cAAAC,EAAO,WAAP,MACI,gBAAAD,EAAA,cAAA,OAAA,EAAI,IAAAf,GAAQ,KAAKK,GAAsB,gBAAc,GAAGhB,YAAA,GACpD6B,CACL,CACJ;AAIJ,YAAAE,MAASE,EAAQ;AAEb,iBAAA,gBAAAP,EAAA,cAACC,EAAO,SAAP,MACG,gBAAAD,EAAA;AAAA,YAAC;AAAA,YAAA;AAAA,cACG,KAAAb;AAAA,cACA,gBAAc,GAAGb;AAAA,cACjB,WAAWkC,EAAM;AAAA,gBACb;AAAA,gBACAC;AAAA,cAAA,CACH;AAAA,cACD,MAAApC;AAAA,cACA,IAAAY;AAAA,cACA,eAAa,CAAClB;AAAA,cACd,mBAAiBkB;AAAA,cACjB,OAAO,EAAE,UAAAR,GAAU,WAAAC,GAAW,UAAAH,GAAU,WAAWmB,EAAiB;AAAA,YAAA;AAAA,YAEnES;AAAA,UAAA,CAET;AAAA,MAGZ;AAAA,IAAA,CACH;AAAA,EAAA,GAGJvB,MAAaC,EAAS,YAAYd,qCAC9B2C,GACG,MAAA,gBAAAV,EAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACG,gBAAc,GAAG1B;AAAA,MACjB,WAAWkC,EAAM;AAAA,QACb;AAAA,QACA1B,KAAgB;AAAA,MAAA,CACnB;AAAA,MACD,OAAO,EAAE,QAAQ6B,EAAuB;AAAA,IAAA;AAAA,EAEhD,CAAA,CAER;AAER;"}