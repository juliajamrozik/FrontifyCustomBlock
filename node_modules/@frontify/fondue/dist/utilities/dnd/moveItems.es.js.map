{"version":3,"file":"moveItems.es.js","sources":["../../../src/utilities/dnd/moveItems.ts"],"sourcesContent":["/* (c) Copyright Frontify Ltd., all rights reserved. */\n\nimport { CollisionPosition } from '@components/Tree';\nimport { DraggableItem } from '@utilities/dnd/types';\n\nconst isFirstItemWithoutSortValue = (index: number, sort: Nullable<number>) => index === 0 && sort === null;\nconst isPreviousItemWithoutSortValue = (index: number, movedItemTargetIndex: number, sort: Nullable<number>) =>\n    index < movedItemTargetIndex && sort === null;\nconst isMovedItem = (index: number, movedItemTargetIndex: number) => index === movedItemTargetIndex;\nconst isFollowingItemWithSortLowerOrEqualToPreviousItem = (\n    index: number,\n    movedItemTargetIndex: number,\n    sort: Nullable<number>,\n    previousSort: Nullable<number>,\n) => index > movedItemTargetIndex && sort !== null && previousSort !== null && sort <= previousSort;\n\nconst updateItemsSort = <T extends object>(\n    items: DraggableItem<T>[], // nodes without the moved node\n    movedItemTargetIndex: number,\n): DraggableItem<T>[] => {\n    const modifiedSameLevelArray: DraggableItem<T>[] = [];\n    const changedItems: DraggableItem<T>[] = [];\n\n    for (const [index, item] of items.entries()) {\n        const previousItem = modifiedSameLevelArray[index - 1];\n        let modifiedItem = { ...item };\n\n        const shouldUpdate =\n            isFirstItemWithoutSortValue(index, item.sort) ||\n            isPreviousItemWithoutSortValue(index, movedItemTargetIndex, item.sort) ||\n            isMovedItem(index, movedItemTargetIndex) ||\n            isFollowingItemWithSortLowerOrEqualToPreviousItem(\n                index,\n                movedItemTargetIndex,\n                item.sort,\n                previousItem?.sort ?? null,\n            );\n\n        if (shouldUpdate) {\n            const incrementedPreviousItemSort =\n                previousItem && previousItem.sort !== null ? previousItem.sort + 1 : null;\n            const updatedSortValue = index === 0 ? 0 : incrementedPreviousItemSort;\n\n            modifiedItem = { ...item, sort: updatedSortValue };\n            changedItems.push(modifiedItem);\n        }\n\n        modifiedSameLevelArray.push(modifiedItem);\n        continue;\n    }\n\n    return changedItems;\n};\n\nexport const moveItems = <T extends object>(\n    targetItem: DraggableItem<T> | undefined,\n    sourceItem: DraggableItem<T>,\n    position: CollisionPosition,\n    items: DraggableItem<T>[],\n): DraggableItem<T>[] => {\n    const itemsClone = [...items];\n    const sourceIndex = itemsClone.findIndex((item) => item.id === sourceItem.id);\n\n    sourceIndex !== -1 && itemsClone.splice(sourceIndex, 1);\n\n    let targetIndex = itemsClone.findIndex((item) => item.id === targetItem?.id);\n    targetIndex = position === 'after' ? targetIndex + 1 : targetIndex;\n\n    itemsClone.splice(targetIndex, 0, sourceItem);\n\n    return updateItemsSort(itemsClone, targetIndex);\n};\n"],"names":["isFirstItemWithoutSortValue","index","sort","isPreviousItemWithoutSortValue","movedItemTargetIndex","isMovedItem","isFollowingItemWithSortLowerOrEqualToPreviousItem","previousSort","updateItemsSort","items","modifiedSameLevelArray","changedItems","item","previousItem","modifiedItem","incrementedPreviousItemSort","moveItems","targetItem","sourceItem","position","itemsClone","sourceIndex","targetIndex"],"mappings":"AAKA,MAAMA,IAA8B,CAACC,GAAeC,MAA2BD,MAAU,KAAKC,MAAS,MACjGC,IAAiC,CAACF,GAAeG,GAA8BF,MACjFD,IAAQG,KAAwBF,MAAS,MACvCG,IAAc,CAACJ,GAAeG,MAAiCH,MAAUG,GACzEE,IAAoD,CACtDL,GACAG,GACAF,GACAK,MACCN,IAAQG,KAAwBF,MAAS,QAAQK,MAAiB,QAAQL,KAAQK,GAEjFC,IAAkB,CACpBC,GACAL,MACqB;AACrB,QAAMM,IAA6C,CAAA,GAC7CC,IAAmC,CAAA;AAEzC,aAAW,CAACV,GAAOW,CAAI,KAAKH,EAAM,WAAW;AACnC,UAAAI,IAAeH,EAAuBT,IAAQ,CAAC;AACjD,QAAAa,IAAe,EAAE,GAAGF;AAaxB,QAVIZ,EAA4BC,GAAOW,EAAK,IAAI,KAC5CT,EAA+BF,GAAOG,GAAsBQ,EAAK,IAAI,KACrEP,EAAYJ,GAAOG,CAAoB,KACvCE;AAAA,MACIL;AAAA,MACAG;AAAA,MACAQ,EAAK;AAAA,OACLC,KAAA,gBAAAA,EAAc,SAAQ;AAAA,IAAA,GAGZ;AACd,YAAME,IACFF,KAAgBA,EAAa,SAAS,OAAOA,EAAa,OAAO,IAAI;AAGzE,MAAAC,IAAe,EAAE,GAAGF,GAAM,MAFDX,MAAU,IAAI,IAAIc,EAEM,GACjDJ,EAAa,KAAKG,CAAY;AAAA,IAClC;AAEA,IAAAJ,EAAuB,KAAKI,CAAY;AAAA,EAE5C;AAEO,SAAAH;AACX,GAEaK,IAAY,CACrBC,GACAC,GACAC,GACAV,MACqB;AACf,QAAAW,IAAa,CAAC,GAAGX,CAAK,GACtBY,IAAcD,EAAW,UAAU,CAACR,MAASA,EAAK,OAAOM,EAAW,EAAE;AAE5E,EAAAG,MAAgB,MAAMD,EAAW,OAAOC,GAAa,CAAC;AAElD,MAAAC,IAAcF,EAAW,UAAU,CAACR,MAASA,EAAK,QAAOK,KAAA,gBAAAA,EAAY,GAAE;AAC7D,SAAAK,IAAAH,MAAa,UAAUG,IAAc,IAAIA,GAE5CF,EAAA,OAAOE,GAAa,GAAGJ,CAAU,GAErCV,EAAgBY,GAAYE,CAAW;AAClD;"}